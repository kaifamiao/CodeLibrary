所有数位相乘，即分解后因式每一位都在[0,9]中。
保证正整数最小，那么应该从分解出的最大因子开始，能保证尽快被除0。
最大因子位于最有一位能保证结果最小。
即：
从9开始到2试除，若能整除，其结果位于低位。
循环直到该数被除尽。
1）若不能被[2,9]整除，即失败。
2）注意不要超过有符号整数范围。

```c++
class Solution {
public:
    int smallestFactorization(int a) {
        long long ans = 0;
        long long pos = 1;
        bool flag = false;
        if(a <= 9) return a;
        for(int i = 9; i >= 2; --i) {
            while(a%i == 0) {
                ans = ans + i * pos;
                pos *= 10;
                if(ans > INT_MAX) return 0;
                a/=i;
            }
        }
        if(a != 1) return 0;    /* 不能[2,9]被整除 */
        return ans;
    }
};
```