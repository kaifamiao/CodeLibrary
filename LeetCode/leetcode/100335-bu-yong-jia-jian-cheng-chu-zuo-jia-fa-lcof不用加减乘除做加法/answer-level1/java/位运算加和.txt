### 解题思路
a ^ b : 各二进制位异或，不管进不进位
a & b << 1 : 只求得进位，因为是各二进制位与操作
如  5 + 9
无进位和 
(101)2 ^ (1001)2 = (1100)2
5    ^    9    =   12
进位   
(101)2 & (1001)2 << 1 = (0010)2
5    &    9    << 1 =   2
那么最终的加和结果就该是 无进位和 加上 进位，需要的是加法，所以再进行上述操作，直到没有进位 
无进位和 
(1100)2 ^ (0010)2 = (1110)2
12    ^    2    =   14
进位    
(1100)2 & (0010)2 << 1 = (0)2
12    &    2    << 1 =  0
此时进位为0，即此时求得的 无进位和 即为加和结果


 

### 代码

```java
class Solution {
    public int add(int a, int b) {
        // 无进位和、进位值
        int sum, carry;
        while (b != 0) {
            // 异或操作得无进位和
            sum = a ^ b;
            // 与操作后移位得进位值
            carry = (a & b) << 1;
            // 循环，直到进位为0
            a = sum;
            b = carry;
        }
        return a;
    }
}
```