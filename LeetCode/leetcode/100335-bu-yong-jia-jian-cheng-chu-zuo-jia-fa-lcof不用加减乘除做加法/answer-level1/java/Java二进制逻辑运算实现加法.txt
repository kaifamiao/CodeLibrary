### 解题思路
在二进制中，一位只有0 和 1 ，逻辑运算也是通过判断0,1（true/false），就可以使用逻辑运算替代加法

在二进制加法：0+0=0，1+0=1,而1+1=10（最后一位是0）
这就想到了逻辑运算中的异或：a异或b，a、b相同为0（false）,a、b不同为1（true）,只是异或没有判断进位;

而进位类似与运算：a与b，只有a、b都为1才得1，但是与只得到了1，还要左移一位 << 1;

那么 进位+余数 不就是加法了吗，“进位”“余数”又是a,b，新一轮的加法，直到没有进位就结束


### 代码

```java
class Solution {
    public int add(int a, int b) {
        while(b!=0){
            int num=a^b;
            b=(a&b)<<1;
            a=num;
        }
        return a;
    }
}
```