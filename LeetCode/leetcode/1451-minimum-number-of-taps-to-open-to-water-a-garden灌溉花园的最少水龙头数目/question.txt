minimum-number-of-taps-to-open-to-water-a-garden
在 x 轴上有一个一维的花园。花园长度为<code>n</code>，从点<code>0</code>开始，到点<code>n</code>结束。

花园里总共有<code>n + 1</code> 个水龙头，分别位于<code>[0, 1, ..., n]</code> 。

给你一个整数<code>n</code>和一个长度为<code>n + 1</code> 的整数数组<code>ranges</code>，其中<code>ranges[i]</code> （下标从 0 开始）表示：如果打开点<code>i</code>处的水龙头，可以灌溉的区域为<code>[i - ranges[i], i + ranges[i]]</code>。

请你返回可以灌溉整个花园的<strong>最少水龙头数目</strong>。如果花园始终存在无法灌溉到的地方，请你返回<strong>-1</strong>。



<strong>示例 1：</strong>

<img alt="" src="https://assets.leetcode-cn.com/aliyun-lc-upload/uploads/2020/01/19/1685_example_1.png" style="width: 530px;">

<pre><strong>输入：</strong>n = 5, ranges = [3,4,1,1,0,0]
<strong>输出：</strong>1
<strong>解释：
</strong>点 0 处的水龙头可以灌溉区间 [-3,3]
点 1 处的水龙头可以灌溉区间 [-3,5]
点 2 处的水龙头可以灌溉区间 [1,3]
点 3 处的水龙头可以灌溉区间 [2,4]
点 4 处的水龙头可以灌溉区间 [4,4]
点 5 处的水龙头可以灌溉区间 [5,5]
只需要打开点 1 处的水龙头即可灌溉整个花园 [0,5] 。
</pre>

<strong>示例 2：</strong>

<pre><strong>输入：</strong>n = 3, ranges = [0,0,0,0]
<strong>输出：</strong>-1
<strong>解释：</strong>即使打开所有水龙头，你也无法灌溉整个花园。
</pre>

<strong>示例 3：</strong>

<pre><strong>输入：</strong>n = 7, ranges = [1,2,1,0,2,1,0,1]
<strong>输出：</strong>3
</pre>

<strong>示例 4：</strong>

<pre><strong>输入：</strong>n = 8, ranges = [4,0,0,0,0,0,0,0,4]
<strong>输出：</strong>2
</pre>

<strong>示例 5：</strong>

<pre><strong>输入：</strong>n = 8, ranges = [4,0,0,0,4,0,0,0,4]
<strong>输出：</strong>1
</pre>



<strong>提示：</strong>

<ul>
	<code>1 &lt;= n &lt;= 10^4</code>
	<code>ranges.length == n + 1</code>
	<code>0 &lt;= ranges[i] &lt;= 100</code>
</ul>

灌溉花园的最少水龙头数目
There is a one-dimensional garden on the x-axis. The garden starts at the point <code>0</code> and ends at the point <code>n</code>. (i.e The length of the garden is <code>n</code>).

There are<code>n + 1</code> taps locatedat points <code>[0, 1, ..., n]</code> in the garden.

Given an integer <code>n</code> and an integer array <code>ranges</code> of length <code>n + 1</code> where <code>ranges[i]</code> (0-indexed) means the <code>i-th</code> tap can water the area <code>[i - ranges[i], i + ranges[i]]</code> if it was open.

Return <em>the minimum number of taps</em> that should be open to water the whole garden, If the garden cannot be watered return <strong>-1</strong>.


<strong>Example 1:</strong>
<img alt="" src="https://assets.leetcode.com/uploads/2020/01/16/1685_example_1.png" style="width: 525px; height: 255px;" />
<pre>
<strong>Input:</strong> n = 5, ranges = [3,4,1,1,0,0]
<strong>Output:</strong> 1
<strong>Explanation:</strong> The tap at point 0 can cover the interval [-3,3]
The tap at point 1 can cover the interval [-3,5]
The tap at point 2 can cover the interval [1,3]
The tap at point 3 can cover the interval [2,4]
The tap at point 4 can cover the interval [4,4]
The tap at point 5 can cover the interval [5,5]
Opening Only the second tap will water the whole garden [0,5]
</pre>

<strong>Example 2:</strong>

<pre>
<strong>Input:</strong> n = 3, ranges = [0,0,0,0]
<strong>Output:</strong> -1
<strong>Explanation:</strong> Even if you activate all the four taps you cannot water the whole garden.
</pre>

<strong>Example 3:</strong>

<pre>
<strong>Input:</strong> n = 7, ranges = [1,2,1,0,2,1,0,1]
<strong>Output:</strong> 3
</pre>

<strong>Example 4:</strong>

<pre>
<strong>Input:</strong> n = 8, ranges = [4,0,0,0,0,0,0,0,4]
<strong>Output:</strong> 2
</pre>

<strong>Example 5:</strong>

<pre>
<strong>Input:</strong> n = 8, ranges = [4,0,0,0,4,0,0,0,4]
<strong>Output:</strong> 1
</pre>


<strong>Constraints:</strong>

<ul>
	<code>1 &lt;= n &lt;= 10^4</code>
	<code>ranges.length == n + 1</code>
	<code>0 &lt;= ranges[i] &lt;= 100</code>
</ul>