
![](https://assets.leetcode-cn.com/aliyun-lc-upload/uploads/2020/01/19/1685_example_1.png)

### 解题思路：
1. `n` 代表土地数量（0 - 1 之间是一块地，1 - 2 之间是一块地）
2. `n + 1` 代表水龙头数量，水龙头插在数字上
3. `ranges` 代表当前位置的水龙头，向左向右可以覆盖多少块地
4. 定义一个 `land` 数据
   41. 代表**在所有能够覆盖这块土地的所有水龙头中，找到能够覆盖最远（右边）位置的水龙头，记录它最右覆盖的土地**
   42. 比如图例中，索引 0 代表覆盖了 0 - 1 之间这块地的所有水龙头里能够覆盖到最右的土地
   43. 值是 5 ，代表覆盖到最右边的是 4 - 5 这块土地
   > 索引是水龙头右边的那块地，而值是水龙头左边的那块地
   > 因此下面代码中 cur = land[cur]; 表示无缝的覆盖过去
5. 将 `ranges` 转换为 `land` 数据
   51. 遍历 `ranges` ，解析其范围，将范围内的 `land` 更新为最大值
6. 从土地 0 开始，一直到土地 n ，记录水龙头数目

### 代码：
```C++ []
int minTaps(int n, vector<int>& ranges) 
{
	vector<int> land(n);
	for (int i = 0; i < ranges.size(); i++)
	{
		int l = max(i - ranges[i], 0);
		int r = min(i + ranges[i], n);
		for (int j = l; j < r; j++)
		{
			land[j] = max(land[j], r);
		}
	}

	int cnt = 0;
	int cur = 0;
	while (cur < n)
	{
		if (land[cur] == 0) return -1;
		cur = land[cur];
		cnt++;
	}
	return cnt;
}
```

****

### 致谢

感谢您的观看，希望对您有帮助，欢迎热烈的交流！  


