[494.目标和](https://leetcode-cn.com/problems/target-sum/submissions/)    

[力扣 JS 题解。](https://github.com/GuYueJiaJie/blog/blob/master/%E7%AE%97%E6%B3%95%E4%B8%8E%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/README.md) 


## 方法一 DFS    

直接上代码，代码比较简单。   

```javascript
/**
 * @param {number[]} nums
 * @param {number} S
 * @return {number}
 */
var findTargetSumWays = function(nums, S) {
    return help(nums, S, 0);
};

function help(nums, S, index) {
    if (nums.length === index) {
        return S === 0 ? 1 : 0;
    }
    
    return help(nums, S-nums[index], index+1) + help(nums, S+nums[index], index + 1);
```

## 方法二 背包问题  

神仙方法，我做的时候没想到，参考[大神的解析](https://leetcode-cn.com/problems/target-sum/solution/python-dfs-xiang-jie-by-jimmy00745/)。

```javascript
/**
 * @param {number[]} nums
 * @param {number} S
 * @return {number}
 */
var findTargetSumWays = function(nums, S) {
    let sum = 0;
    for (let num of nums) {
        sum += num;
    }
    if (sum < S || (sum + S) % 2 === 1) return 0;
    let target = (sum + S) / 2;
    let dp = new Array(target+1).fill(0);
    dp[0] = 1;
    for (let num of nums) {
        for (let i = target; i >= num; i--) {
            dp[i] += dp[i - num];
        }
    }
    return dp[target];
};
```