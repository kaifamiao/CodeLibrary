### 解题思路

1. 根据题意, 易得最终结果即为1~n中因子个数为奇数的数的数目, 偶数的话经过n次操作会变成最初关闭状态
2. 所以最开始想法是遍历1~n, 求每个数的因子数目, 奇数因子的话res+1, 复杂度O(n*sqrt(n))
3. 进一步思考: 什么数的因子数目为奇数呢===>平方数!!!其他数的因子数一定成对出现, 所以可以变成只求平方数, 遍历1~n, 求是平方数的数数目, 复杂度O(n)
4. 进一步思考: 是不是可以简化流程, 只遍历平方根i本身, 当i*i>n就退出循环? 复杂度O(sqrt(n))
5. 进一步思考: 观察上一步的循环, 是不是就是sqrt(n)本身? 复杂度O(1)

### 代码

```python3
import math


class Solution:
    def bulbSwitch(self, n: int) -> int:
        return int(math.sqrt(n))
```