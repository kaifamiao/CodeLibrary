
![image.png](https://pic.leetcode-cn.com/0f0e47ad56616aead1880b89eb6f4184f89ee4cd1e50a40aa266c35317b71c00-image.png)

这个题和“2的幂”“3的幂”一样，有不用循环和递归就能直接判断的方法，同样十分巧妙，属于二进制/位运算的应用。

4的幂的数，都是这样的数：100、10000、1000000……（4、16、64）

观察规律，可以发现 4的幂 需要满足以下条件：
1. 最高位是 1，其余都为 0；
2. 最高位的 1 应该在奇数位上，比如：100 的 1 在 第三位上；

那么对应的判断方法为：
1. 用 num & (num-1) 可以判断条件1，比如：100(4) & 011(3) == 0，结果为 0 说明符合条件1；
2. 是否在奇数位可以用 0xaaaaaaaa 判断，16 进制的 a 是 1010，比如：0100(4) & 1010(a) == 0，结果为 0 说明最高位 1 在奇数位上；

代码：
```
func isPowerOfFour(num int) bool {
    return num>0 && num&(num-1)==0 && 0xaaaaaaaa&num==0
}
```