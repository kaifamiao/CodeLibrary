### 解题思路
1. 核心思路
- Boyer-Moore 投票算法
- 如果数组中只有两个不同的数字，众数maj和非众数c，应该怎么判断哪个是众数呢？可以直接计算二者的数量并比较，而如果有多个非众数呢？此时如果还是计算几个众数的数量，时间/空间复杂度都会显著上升，有没有更好的比较方式呢？有，作差。

2. 具体操作
- 选择第1个数c作为候选众数，如果后续数==c，count++，否则count--，最后的数c必定是众数，可以分两种情况考虑：
- 如果候选众数c都是真正的众数maj，根据众数的定义，众数的数量要比其它数的数量和还要多，因此，如果每一个候选众数c都消除掉一个其它数（不等于c的数），那最后剩下的必定是众数。
- 如果候选众数c中存在非众数，同样，由于每一个候选众数c都消除掉一个其它数（!=c），可能会有真正众数maj或者除c以外的其他非众数被消掉，最后剩下的数必然还是众数，而且剩余众数数量>第一种情况剩余众数数量。
- 综上，最后剩下的一定是众数。

3. 复杂度
- 时间复杂度：O(n)，只需要遍历一次数组
- 空间复杂度：O(1)，只需要常数空间存储c，以及count

### 代码

```cpp
class Solution {
public:
    int majorityElement(vector<int>& nums) {
        int i, c, count = 0;
        for(i=0; i<nums.size() ;i++)
        {
            if(count==0)
            {
                c = nums[i];
                count++;
            }
            else
            {
                if(c==nums[i])
                    count++;
                else
                    count--;
            }
        }
        return c;
    }
};
```