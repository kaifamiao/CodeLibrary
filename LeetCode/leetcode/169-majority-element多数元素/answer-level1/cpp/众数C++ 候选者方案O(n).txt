### 解题思路
删除两个不同的数后，原来集合中的众数仍为新集合中的众数。（否命题不成立：1、2、5、5、3中没有众数，但如果删除1和2，5就成了新的众数。）
按出现的顺序依次扫描。引入变量C（候选者）和M（重数）。当考察xi时，C是x1,x2,…,xi-1中众数的候选者，M等于C当前已出现的次数减去被删除的次数，即x1,x2,…,xi-1被分成大小分别为2k和M的两组，其中2k+M=i–1。第一组有k对不同的数，第二组包含已出现M次的C。如果在x1,x2,…,xi-1中存在众数，在不断删除后，它必定能胜出并等于C。（C不是众数，也有可能在删除后胜出。）考察xi，将它同C比较，根据比较结果增加或减少C出现次数。若不存在候选的众数（M=0），则C=xi，M=1。最后只剩一个候选者C，统计其出现次数便能判定它是否为众数。

复杂度O(n)

### 代码

```cpp
class Solution {
public:
    int majorityElement(vector<int>& nums) {
        int C = nums[0];
        int M = 1;
        for (int i=1; i<nums.size(); ++i) {
            if (M == 0) {
                C = nums[i];
                M = 1;
            }
            else {
                if (C == nums[i]) M++;
                else M--;
            }
        }
        return C;
    }
};
```