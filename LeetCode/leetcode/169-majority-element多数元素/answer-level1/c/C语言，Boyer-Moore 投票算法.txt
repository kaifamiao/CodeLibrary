# 对Boyer-Moore投票算法的通俗理解

既然众数是在数组中占比超过1/2的元素，那么可以这样想，在一个存在众数的数组中，两个不同的数一相遇就同归于尽消失掉，最后幸存的就是众数。  

用计数器模拟这个同归于尽。遍历数组时，随便假设第一个数就是众数，计数器+1，遇到跟假设众数相同的数时，计数器+1；遇到跟假设众数不相同的数，计数器-1。当计数器累计为0时，说明前面的数同归于尽了，重新选择下一个数为假设众数，计数器+1，继续遍历……  
当遍历完成后，最后的假设众数就是真正的众数，因为前面的数不管是谁都跟不相同的数同归于尽消耗了。  

```c
int majorityElement(int* nums, int numsSize){
    int sum = 0;
    int ret = 0;
    for (int i = 0; i < numsSize; i++) {
        if (sum == 0) {
            ret = nums[i];
            sum = 1;
            continue;
        }
        sum += (nums[i] == ret) ? 1 : -1;
    }
    return ret;
}  
```
