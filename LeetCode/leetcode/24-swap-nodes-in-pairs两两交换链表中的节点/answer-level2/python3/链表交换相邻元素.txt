好久没有刷题了，之前都是使用C++刷题的，现在发现Python用的多，并且对于Python的语法掌握的并不熟练，所以逼着自己通过刷题掌握Python，所以后期的刷题全都使用Python语言，毕竟，语言的选择应该和以后工作相关联吧。 

关于这个题，如果没有仅仅交换值的这个条件，可以有三种解决思路：
* 递归的解法
    递归相对来说比较简单了，还是先判断，如果只有一个或者一个节点都没有，那么就返回head，不用交换。如果不是，那么如果给了我后面的两个交换完的结果之后，我前面的两个再交换一下即可，所以可以使用递归。并且借助Python的元组赋值特性，代码可以更简洁。
* 三指针的解法
    其实是一种思想，三指针很重要，等刷完了链表这里的题目之后，集中总结一下首先，先判断head，如果只有一个节点或者一个都没有，那么就直接返回，无需交换。如果上面不成立，则先建立一个头结点，然后一个尾指针始终指向交换之后的尾部。 然后建立三个指针： pre,p,q。pre在最前面，p中间，q是后面。 如果p不是空的时候， q指向p后面的节点，防止丢掉。 然后把前面的两个交换，交换完毕之后，把指针归位。 **这个最好是借助代码手动画一下第一步，只需要画出第一步，就能明白思想**

* 双指针遍历，交换值
    指定p和q两个指针遍历， 如果p和q都不为空，那么就交换两个的值，然后都往后走。

具体代码见博客：[https://blog.csdn.net/wuzhongqiang/article/details/104103295](https://blog.csdn.net/wuzhongqiang/article/details/104103295)