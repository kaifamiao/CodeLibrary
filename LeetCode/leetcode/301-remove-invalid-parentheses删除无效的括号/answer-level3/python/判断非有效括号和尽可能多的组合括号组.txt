结题思路有两点:
如何判断一个非有效的括号和如何组合成尽可能多的括号组合，再去掉其中存在非有效括号的组合，剩下就是有效的括号组合
判断非有效括号的办法，遍历每个括号，是(就存列表里，是)就判断列表里最后一个是不是(,如果是(就说明跟当前的)是能组成一个有效的括号的，那就把列表里最后一个括号删除，只保留非有效的括号
        def get_invalid(s):
            stack = []
            for ch in s:
                if ch == '(':
                    stack.append('(')
                elif ch == ')':
                    if len(stack) != 0 and stack[-1] == '(':
                        del stack[-1]
                    else:
                        stack.append(')')
            return len(stack)

如何尽可能多的组合括号组:这里需要先判断提供的括号组是否存在非有效括号，如果不存在非有效括号，那么也没必要尽可能多的去组括号组了，直接输出就行，如果存在非有效的括号，那么就需要尽可能多的组括号组，这里提供的方法是遍历括号组长度的次数，比如提供的括号组是6，那就遍历6次括号组，每次按顺序把一个括号从括号组删除，组合尽可能多的括号组合，再遍历这些组合好的括号组合，判断其中是否有非有效的括号，不是则直接输出
            for s in s_list:
                for i in range(len(s)):
                    temp.append(s[:i] + s[i + 1:])
