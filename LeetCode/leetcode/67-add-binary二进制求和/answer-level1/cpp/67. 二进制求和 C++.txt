### 解题思路
1.取两个二进制字符串的长度，并将两个字符串的长度补齐，用0补位。
2.再除第一个数字后的所有元素进行相加遍历，逢2进1，遇到大于2的数字元素时，先模2，后在对前一位数字进一，知道遍历完除第一个元素的所有数字。
3.若最终第一个元素的数字大于2，则先模2，再将字符串1加到整个字符串之首，返回整个字符串。

### 代码

```cpp
class Solution {
public:
    string addBinary(string a, string b) {
        
        int al = a.size();
        int bl = b.size();
        
        while(al < bl){
            a = '0' + a;
            al++;
        }
        
        while(al > bl){
            b = '0' + b;
            bl++;
        }
        
        for(int j = a.size() - 1; j > 0; j--) {
            a[j] = a[j] - '0' + b[j];
            if(a[j] >=  '2'){
                a[j] = (a[j] - '0') % 2 + '0';
                a[j-1] = a[j-1] + 1;
            }
        }
        a[0] = a[0] - '0' + b[0]; //将ab的第0位相加
        
        if(a[0] >= '2') {
        a[0] = (a[0] - '0') % 2 + '0';
        a = '1' + a; //第一位加一
    }
    return a;
    }
};
```