### 解题思路
小偷系列问题
上色问题也有类似的

### 代码

```python3
class Solution:
    def massage(self, nums: List[int]) -> int:   
        last,now=0,0
        for num in nums:
            last,now=now,max(last+num,now)
        return now
```

### 更新
没想到会有这么多评论，我没有绑定手机，没办法一一回复，就在这里简单说一下
动态规划，有时候是看不到全貌的，但是可以通过前后两个状态来分析，也就是状态转移方程，这种思路的话，那就肯定要遍历了，每多一个元素，方案就要随之改变（有人提到了为什么要遍历）
这道题是标准的动态问题
思考如下：
遍历到第i个数的时候，最长时间，无非有两个选择：
1、包含第i个任务，那么第i-1个一定不包含
2、不包含第i个任务，那么就取之前最长时间
now：当前最大时间
last：不算上一步的最大时间
还有就是last,now=now,max(last+num,now)这个语句不要用C或者C++的想法去理解
在Python里面，a,b=b,a是交换ab的意思，具体原理与她的赋值形式有关
最后，推荐去看官方的解题思路，写的非常明白，我这段代码其实是对她的一个pythonize，而且说实话，这段代码不是原创，代码大全上有大佬写过类似的，不过不是Python而已，我这个是化用
