### 解题思路
对于words.txt文件进行词频统计，首先要做的事情就是把words.txt文件当中的每一个单词分割出来，分割出每一个单词可以使用以下两种方式：

使用awk命令：
```
[root@localhost ~]# awk '{for(i=1;i<=NF;i++){print $i}}' words.txt 
the
day
is
sunny
the
the
the
sunny
is
is
```
其中NF表示当前记录的字段数（即列数）
$i 文件中每行以间隔符号分割的不同字段
如果对awk命令不熟悉，可以参考之前分享的一篇文章学习：
[号称三剑客之首的awk，开始秀！](https://mp.weixin.qq.com/s/rIvOa5yvXFCAWiidxFz_ug)


使用xargs命令：
```
[root@localhost ~]# cat words.txt | xargs -n1
the
day
is
sunny
the
the
the
sunny
is
is
[root@localhost ~]# cat words.txt | xargs -n2
the day
is sunny
the the
the sunny
is is
```
xargs命令是用于给其他命令传递参数的一个过滤器，也是组合多个命令的一个工具。
-n选项，指定 输出时每行输出的列数

当我们将words.txt文件中的所有单词都分割出来之后，就可以统计这些单词当中每一个单词出现的次数了。
我们仅考虑使用awk命令来完成这个任务的话很简单，在进行分割的过程中直接用一个关联数组直接保存每一个单词出现的次数，关于关联数组的更多内容可以阅读：[SHELL编程之变量与四则运算](https://mp.weixin.qq.com/s/qVT5afuYk82OoFugvDgyFw)，此处我们可以暂时将关联数组理解为一个字典，关键字为单词，值为单词出现的次数（这样理解只是一种通俗的说法）

```
[root@localhost ~]# awk '{for(i=1;i<=NF;i++){asso_array[$i]++;}};END{for(w in asso_array){print w,asso_array[w];}}' words.txt
day 1
sunny 2
the 4
is 3
```
当然我们也可以在xargs的基础之上使用一些shell小工具来得到每个单词出现的次数。sort 工具及 uniq 工具，这里仅介绍我们解决问题使用的参数，关于小工具（grep、cut、sort、uniq、tee、diff、past、tr）可以参考之前的文章：[Shell编程之文本处理工具与bash的特性](https://mp.weixin.qq.com/s/7pfE3S-uDSLOG1AZSj3D1A)
```
[root@localhost ~]# cat words.txt | xargs -n1 | sort
day
is
is
is
sunny
sunny
the
the
the
the
[root@localhost ~]# cat words.txt | xargs -n1 | sort | uniq -c
      1 day
      3 is
      2 sunny
      4 the
```
sort工具用于排序，它将文件的每一行作为一个单位，从首字母向后按照ASCII码值进行比较，默认将他们升序输出。

-r : 降序排列

-n : 以数字排序，默认是按照字符排序的。

uniq用去取出连续的重复行 

-c ：统计重复行的次数

最后我们仅需要对上面的结果进行排序啦，很简单的使用sort就可以啦！


### 可运行代码

```bash
awk '{for(i=1;i<=NF;i++){asso_array[$i]++;}};END{for(w in asso_array){print w,asso_array[w];}}' words.txt | sort -rn

cat words.txt | xargs -n1 | sort | uniq -c | sort -rn | awk '{print $2,$1}'

```
### 小秘密
偷偷告诉你，你可以参考文章[LeetCode上稀缺的四道shell编程题解析](https://mp.weixin.qq.com/s/EI63RZZcPzJT4c0zl8XQSA)，内有更多资源。觉得不错顺手赞上去