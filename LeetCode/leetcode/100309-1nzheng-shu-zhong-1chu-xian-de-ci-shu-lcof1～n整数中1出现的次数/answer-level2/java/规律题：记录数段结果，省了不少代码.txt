## 43.1～n整数中1出现的次数

### Information

* TIME: 2020/02/19
* LINK: [Click Here](https://leetcode-cn.com/problems/1nzheng-shu-zhong-1chu-xian-de-ci-shu-lcof/)
* TAG: `Math`

### Description

> 输入一个整数 n ，求1～n这n个整数的十进制表示中1出现的次数。
>
> 例如，输入12，1～12这些整数中包含1 的数字有1、10、11和12，1一共出现了5次。

### Example

```text
输入：n = 12
输出：5
```

### My Answer

> `0-9`中`1`的位数和是`1`
>
> `0-99` 是 `9 * 1 + 10 + 1 = 20`
>
> `0-999` 是 `9 * 20 + 100 + 20 = 300`
>
> 。。。
>
> 计算了每个位段`1`的数量之后，就可以根据迭代的思想，从个位起去计算`1`的数量
>
> 比如`261`
>
> 对于个位`1` ，`1`的数量是`1`
>
> 对于`6`，求得是`61`的`1`总和  `6 * 1 + 10 + 1 = 17`
>
> 对于`2`，求的是`261`的`1`总和 `2 * 20 + 100 + 17`
>
> * `2 * 20` 表示的是，`0 - 99` `100 - 199`中，两段`0-99`的`1`总和
> * `100` 表示对于最高位为`1` 的情况，也就是`100-199`，最高位有`100`个`1`
> * `17` 表示`200-261`中，`00-61`的`1`总和，其实就是上一次的运算结果
>
> 特判，如果最高位刚好是`1`，比如`161`，就没有`100-199`的最高位`100`个`1`，只有`00-61`这一段的`62个1`，需要特判一下

```java
class Solution {
    public int countDigitOne(int n) {
        int[] record = {0, 1, 20, 300, 4000, 50000, 
                        600000, 7000000, 80000000, 900000000};
        int bitPow = 0;
        int res = 0;
        int pow10 = 1;
        int tmpn = n;
        while(tmpn != 0){
            int num = tmpn % 10;
            tmpn /= 10;
            res = res + record[bitPow] * num;
            if(num > 1){
                res += pow10;
            }else if(num == 1){
                //处理1xx这种情况：此时直接+xx
                res += n % pow10 + 1;
            }
            bitPow++;
            pow10 *= 10;
        }
        return res;
    }
}
/**
1
20
300
4000
50000
600000
7000000
80000000
900000000
**/
```

### Extend & Reference

> 来源：力扣（LeetCode）
> 链接：https://leetcode-cn.com
> 著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。

### More

> **更多题解，请访问我的GitHub仓库：[LeetCode 刷题日记](https://github.com/ZhuoZhuoCrayon/my-Nodes/blob/master/Daily/README_2020.md)**
>
> [无效的图片地址](https://raw.githubusercontent.com/ZhuoZhuoCrayon/my-Nodes/master/Daily/img/mynode.png)
>
> [**更多笔记**](https://github.com/ZhuoZhuoCrayon/my-Nodes)：**`Vue` `Java SSM 框架` `阿里云服务器` `JavaScript/HTML/CSS`   `数据库` ...**
>
> **我的GitHub主页 -> [ZhuoZhuoCrayon](https://github.com/ZhuoZhuoCrayon)**
>
> 共勉~

