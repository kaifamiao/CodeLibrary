partition-array-into-three-parts-with-equal-sum
给你一个整数数组<code>A</code>，只有可以将其划分为三个和相等的非空部分时才返回<code>true</code>，否则返回 <code>false</code>。

形式上，如果可以找出索引<code>i+1 &lt; j</code>且满足<code>(A[0] + A[1] + ... + A[i] == A[i+1] + A[i+2] + ... + A[j-1] == A[j] + A[j-1] + ... + A[A.length - 1])</code>就可以将数组三等分。



<strong>示例 1：</strong>

<pre><strong>输出：</strong>[0,2,1,-6,6,-7,9,1,2,0,1]
<strong>输出：</strong>true
<strong>解释：</strong>0 + 2 + 1 = -6 + 6 - 7 + 9 + 1 = 2 + 0 + 1
</pre>

<strong>示例 2：</strong>

<pre><strong>输入：</strong>[0,2,1,-6,6,7,9,-1,2,0,1]
<strong>输出：</strong>false
</pre>

<strong>示例 3：</strong>

<pre><strong>输入：</strong>[3,3,6,5,-2,2,5,1,-9,4]
<strong>输出：</strong>true
<strong>解释：</strong>3 + 3 = 6 = 5 - 2 + 2 + 5 + 1 - 9 + 4
</pre>



<strong>提示：</strong>

<ol>
	<code>3 &lt;= A.length &lt;= 50000</code>
	<code>-10^4&lt;= A[i] &lt;= 10^4</code>
</ol>

将数组分成和相等的三个部分
Given an array <code>A</code> of integers, return <code>true</code> if and only if we can partition the array into three <strong>non-empty</strong> parts with equal sums.

Formally, we can partition the array if we can find indexes <code>i+1 &lt; j</code> with <code>(A[0] + A[1] + ... + A[i] == A[i+1] + A[i+2] + ... + A[j-1] == A[j] + A[j-1] + ... + A[A.length - 1])</code>


<strong>Example 1:</strong>

<pre>
<strong>Input:</strong> A = [0,2,1,-6,6,-7,9,1,2,0,1]
<strong>Output:</strong> true
<strong>Explanation: </strong>0 + 2 + 1 = -6 + 6 - 7 + 9 + 1 = 2 + 0 + 1
</pre>

<strong>Example 2:</strong>

<pre>
<strong>Input:</strong> A = [0,2,1,-6,6,7,9,-1,2,0,1]
<strong>Output:</strong> false
</pre>

<strong>Example 3:</strong>

<pre>
<strong>Input:</strong> A = [3,3,6,5,-2,2,5,1,-9,4]
<strong>Output:</strong> true
<strong>Explanation: </strong>3 + 3 = 6 = 5 - 2 + 2 + 5 + 1 - 9 + 4
</pre>


<strong>Constraints:</strong>

<ul>
	<code>3 &lt;= A.length &lt;= 50000</code>
	<code>-10^4&lt;= A[i] &lt;= 10^4</code>
</ul>
