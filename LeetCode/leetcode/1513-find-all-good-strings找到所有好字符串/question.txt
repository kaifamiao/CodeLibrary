find-all-good-strings
给你两个长度为 <code>n</code>的字符串<code>s1</code> 和<code>s2</code>，以及一个字符串<code>evil</code>。请你返回 <strong>好字符串</strong>的数目。

<strong>好字符串</strong>的定义为：它的长度为<code>n</code>，字典序大于等于<code>s1</code>，字典序小于等于<code>s2</code>，且不包含<code>evil</code>为子字符串。

由于答案可能很大，请你返回答案对 10^9 + 7 取余的结果。



<strong>示例 1：</strong>

<pre><strong>输入：</strong>n = 2, s1 = &quot;aa&quot;, s2 = &quot;da&quot;, evil = &quot;b&quot;
<strong>输出：</strong>51 
<strong>解释：</strong>总共有 25 个以 &#39;a&#39; 开头的好字符串：&quot;aa&quot;，&quot;ac&quot;，&quot;ad&quot;，...，&quot;az&quot;。还有 25 个以 &#39;c&#39; 开头的好字符串：&quot;ca&quot;，&quot;cc&quot;，&quot;cd&quot;，...，&quot;cz&quot;。最后，还有一个以 &#39;d&#39; 开头的好字符串：&quot;da&quot;。
</pre>

<strong>示例 2：</strong>

<pre><strong>输入：</strong>n = 8, s1 = &quot;leetcode&quot;, s2 = &quot;leetgoes&quot;, evil = &quot;leet&quot;
<strong>输出：</strong>0 
<strong>解释：</strong>所有字典序大于等于 s1 且小于等于 s2 的字符串都以 evil 字符串 &quot;leet&quot; 开头。所以没有好字符串。
</pre>

<strong>示例 3：</strong>

<pre><strong>输入：</strong>n = 2, s1 = &quot;gx&quot;, s2 = &quot;gz&quot;, evil = &quot;x&quot;
<strong>输出：</strong>2
</pre>



<strong>提示：</strong>

<ul>
	<code>s1.length == n</code>
	<code>s2.length == n</code>
	<code>s1 &lt;= s2</code>
	<code>1 &lt;= n &lt;= 500</code>
	<code>1 &lt;= evil.length &lt;= 50</code>
	所有字符串都只包含小写英文字母。
</ul>

找到所有好字符串
Given the strings <code>s1</code> and <code>s2</code> of size <code>n</code>, and the string <code>evil</code>. <em>Return the number of <strong>good</strong> strings</em>.

A <strong>good</strong> string has size <code>n</code>, it is alphabetically greater than or equal to <code>s1</code>, it is alphabetically smaller than or equal to <code>s2</code>, and it does not contain the string <code>evil</code> as a substring. Since the answer can be a huge number, return this modulo 10^9 + 7.


<strong>Example 1:</strong>

<pre>
<strong>Input:</strong> n = 2, s1 = &quot;aa&quot;, s2 = &quot;da&quot;, evil = &quot;b&quot;
<strong>Output:</strong> 51 
<strong>Explanation:</strong> There are 25 good strings starting with &#39;a&#39;: &quot;aa&quot;,&quot;ac&quot;,&quot;ad&quot;,...,&quot;az&quot;. Then there are 25 good strings starting with &#39;c&#39;: &quot;ca&quot;,&quot;cc&quot;,&quot;cd&quot;,...,&quot;cz&quot; and finally there is one good string starting with &#39;d&#39;: &quot;da&quot;.
</pre>

<strong>Example 2:</strong>

<pre>
<strong>Input:</strong> n = 8, s1 = &quot;leetcode&quot;, s2 = &quot;leetgoes&quot;, evil = &quot;leet&quot;
<strong>Output:</strong> 0 
<strong>Explanation:</strong> All strings greater than or equal to s1 and smaller than or equal to s2 start with the prefix &quot;leet&quot;, therefore, there is not any good string.
</pre>

<strong>Example 3:</strong>

<pre>
<strong>Input:</strong> n = 2, s1 = &quot;gx&quot;, s2 = &quot;gz&quot;, evil = &quot;x&quot;
<strong>Output:</strong> 2
</pre>


<strong>Constraints:</strong>

<ul>
	<code>s1.length == n</code>
	<code>s2.length == n</code>
	<code>s1 &lt;= s2</code>
	<code>1 &lt;= n &lt;= 500</code>
	<code>1 &lt;= evil.length &lt;= 50</code>
	All strings consist of lowercase English letters.
</ul>
