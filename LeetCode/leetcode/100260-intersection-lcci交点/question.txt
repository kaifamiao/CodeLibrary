intersection-lcci
给定两条线段（表示为起点<code>start = {X1, Y1}</code>和终点<code>end = {X2, Y2}</code>），如果它们有交点，请计算其交点，没有交点则返回空值。
要求浮点型误差不超过<code>10^-6</code>。若有多个交点（线段重叠）则返回X值最小的点，X坐标相同则返回Y值最小的点。
<strong>示例 1：</strong>
<pre><strong>输入：</strong>
line1 = {0, 0}, {1, 0}
line2 = {1, 1}, {0, -1}
<strong>输出：</strong> {0.5, 0}
</pre>
<strong>示例 2：</strong>
<pre><strong>输入：</strong>
line1 = {0, 0}, {3, 3}
line2 = {1, 1}, {2, 2}
<strong>输出：</strong> {1, 1}
</pre>
<strong>示例 3：</strong>
<pre><strong>输入：</strong>
line1 = {0, 0}, {1, 1}
line2 = {1, 0}, {2, 1}
<strong>输出：</strong> {}，两条线段没有交点
</pre>
<strong>提示：</strong>
<ul>
坐标绝对值不会超过2^7
输入的坐标均是有效的二维坐标
</ul>

交点
Given two straight line segments (represented as a start point and an end point), compute the point of intersection, if any. If there&#39;s no intersection, return an empty array.
The absolute error should not exceed 10^-6. If there are more than one intersections, return the one with smallest X axis value. If there are more than one intersections that have same X axis value, return the one with smallest Y axis value.

<strong>Example 1: </strong>

<pre>
<strong>Input: </strong>
line1 = {0, 0}, {1, 0}
line2 = {1, 1}, {0, -1}
<strong>Output: </strong> {0.5, 0}
</pre>

<strong>Example 2: </strong>

<pre>
<strong>Input: </strong>
line1 = {0, 0}, {3, 3}
line2 = {1, 1}, {2, 2}
<strong>Output: </strong> {1, 1}
</pre>

<strong>Example 3: </strong>

<pre>
<strong>Input: </strong>
line1 = {0, 0}, {1, 1}
line2 = {1, 0}, {2, 1}
<strong>Output: </strong> {}  (no intersection)
</pre>

<strong>Note: </strong>

<ul>
	The absolute value of coordinate value will not exceed 2^7.
	All coordinates are valid 2D coordinates.
</ul>
