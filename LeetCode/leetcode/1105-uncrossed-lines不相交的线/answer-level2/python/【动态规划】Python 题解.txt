#### 思路：
设 `A[0] ~ A[x]` 与 `B[0] ~ B[y]` 的最大连线数为 `f(x, y)`，那么对于任意位置的 `f(i, j)` 而言：

- 如果 `A[i] == B[j]`，即 `A[i]` 和 `B[j]` 可连线，此时 `f(i, j) = f(i - 1, j - 1) + 1`
- 如果 `A[i] != B[j]`，即 `A[i]` 和 `B[j]` 不可连线，此时最大连线数取决于 `f(i - 1, j)` 和 `f(i, j - 1)` 的较大值

#### 代码：
```python [-Python]
class Solution(object):
    def maxUncrossedLines(self, A, B):
        """
        :type A: List[int]
        :type B: List[int]
        :rtype: int
        """
        a_length = len(A)
        b_length = len(B)
        
        res = [[0 for _ in range(b_length + 1)] for _ in range(a_length + 1)]
        
        for i in range(a_length):
            for j in range(b_length):
                if A[i] == B[j]:
                    res[i + 1][j + 1] = res[i][j] + 1
                else:
                    res[i + 1][j + 1] = max(res[i + 1][j], res[i][j + 1])
        
        return res[a_length][b_length]
```