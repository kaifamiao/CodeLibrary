### 解题思路
不考虑二分法，直接从题目入手。
由题目直接分析，递增排序的数组的旋转，最小值的出现位置有两种情况：
1.开头，即不进行任何旋转，则最小值位于原位置--开头。[1,2,3,4,5]不进行旋转，还为[1,2,3,4,5]
2.出现在中间：[1,2,3,4,5]旋转后变为[4,5,1,2,3].
此时，很明显最小值为分界点，正好有其前方的元素大于它，则直接遍历判断即可。
注意：[1,2,3,4,5]旋转后变为[2,3,4,5,1]最小值位于最后，也归于第二种情况。

特殊情况，若数组全部取值相同，则返回任意元素即可，返回第一个元素。

这里方法有返回值int，说明一定有返回值存在，所以，应该不用考虑初始数组为空的情况。
如有不对，还请指正，谢谢。

执行用时 :0 ms, 在所有 Java 提交中击败了100.00%的用户
内存消耗 :40 MB, 在所有 Java 提交中击败了100.00%的用户

### 代码

```java
class Solution {
    public int minArray(int[] numbers) {
        for(int i =0;i<(numbers.length-1);i++){//防止下方if中越界
            if(numbers[i]>numbers[i+1])
                return numbers[i+1];
        }
        return numbers[0];//递增数组未进行旋转，或数组所有元素取值相同
    }
}
```