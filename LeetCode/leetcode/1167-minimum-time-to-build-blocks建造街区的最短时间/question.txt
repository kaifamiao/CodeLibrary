minimum-time-to-build-blocks
你是个城市规划工作者，手里负责管辖一系列的街区。在这个街区列表中<code>blocks[i] = t</code>意味着第 <code>i</code>个街区需要<code>t</code>个单位的时间来建造。

由于一个街区只能由一个工人来完成建造。

所以，一个工人要么需要再召唤一个工人（工人数增加 1）；要么建造完一个街区后回家。这两个决定都需要花费一定的时间。

一个工人再召唤一个工人所花费的时间由整数<code>split</code>给出。

注意：如果两个工人同时召唤别的工人，那么他们的行为是并行的，所以时间花费仍然是<code>split</code>。

最开始的时候只有<strong>一个</strong>工人，请你最后输出建造完所有街区所需要的最少时间。



<strong>示例 1：</strong>

<pre><strong>输入：</strong>blocks = [1], split = 1
<strong>输出：</strong>1
<strong>解释：</strong>我们使用 1 个工人在 1 个时间单位内来建完 1 个街区。
</pre>

<strong>示例2：</strong>

<pre><strong>输入：</strong>blocks = [1,2], split = 5
<strong>输出：</strong>7
<strong>解释：</strong>我们用 5 个时间单位将这个工人分裂为 2 个工人，然后指派每个工人分别去建造街区，从而时间花费为 5 + max(1, 2) = 7
</pre>

<strong>示例 3：</strong>

<pre><strong>输入：</strong>blocks = [1,2,3], split = 1
<strong>输出：</strong>4
<strong>解释：
</strong>将 1 个工人分裂为 2 个工人，然后指派第一个工人去建造最后一个街区，并将第二个工人分裂为 2 个工人。
然后，用这两个未分派的工人分别去建造前两个街区。
时间花费为 1 + max(3, 1 + max(1, 2)) = 4
</pre>



<strong>提示：</strong>

<ol>
	<code>1 &lt;= blocks.length &lt;= 1000</code>
	<code>1 &lt;= blocks[i] &lt;= 10^5</code>
	<code>1 &lt;= split &lt;= 100</code>
</ol>

建造街区的最短时间
You are given a list of blocks, where <code>blocks[i] = t</code> means that the<code>i</code>-th block needs<code>t</code>units of time to be built. A block can only be built by exactly one worker.

A worker can either split into two workers (number of workers increases by one) or build a block then go home. Both decisions cost some time.

The time cost of spliting one worker into two workers isgiven as an integer <code>split</code>. Note that if two workers split at the same time, they split in parallel so the cost would be<code>split</code>.

Output the minimum time needed to build all blocks.

Initially, there is only <strong>one</strong> worker.


<strong>Example 1:</strong>

<pre>
<strong>Input:</strong> blocks = [1], split = 1
<strong>Output:</strong> 1
<strong>Explanation: </strong>We use 1 worker to build 1 block in 1 time unit.
</pre>

<strong>Example 2:</strong>

<pre>
<strong>Input:</strong> blocks = [1,2], split = 5
<strong>Output:</strong> 7
<strong>Explanation: </strong>We split the worker into 2 workers in 5 time units then assign each of them to a block so the cost is 5 + max(1, 2) = 7.
</pre>

<strong>Example 3:</strong>

<pre>
<strong>Input:</strong> blocks = [1,2,3], split = 1
<strong>Output:</strong> 4
<strong>Explanation: </strong>Split 1 worker into 2, then assign the first worker to the last block and split the second worker into 2.
Then, use the two unassigned workers to build the first two blocks.
The cost is 1 + max(3, 1 + max(1, 2)) = 4.
</pre>


<strong>Constraints:</strong>

<ul>
	<code>1 &lt;= blocks.length &lt;= 1000</code>
	<code>1 &lt;= blocks[i] &lt;= 10^5</code>
	<code>1 &lt;= split &lt;= 100</code>
</ul>
