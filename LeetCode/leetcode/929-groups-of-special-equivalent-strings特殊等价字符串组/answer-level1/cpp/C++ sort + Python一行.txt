这题中文翻译不好，看英文的就懂了。
这题的意思就是：任意交换索引为奇数的字符，或者交换索引为偶数的字符。经过任意次交换后，如果两个字符串相等，就称这两个字符串为特殊等价。下面是英语版：
```
A move onto S consists of swapping any two even indexed characters of S, or any two odd indexed 
characters of S.
Two strings S and T are special-equivalent if after any number of moves onto S, S == T.
```
等价字符串就是 偶数位(奇数位) 的字符每个字母一样多。举个例子
![image.png](https://pic.leetcode-cn.com/3b123a3ed32805e13c578ea77b7b677445d0b2b056a15f446170cce49ab5c0d4-image.png)
![image.png](https://pic.leetcode-cn.com/7436af0c2a5792bb92a61449d78a8a2322e740b0fa5d9a72d8846854a9c955e7-image.png)


```cpp
class Solution {
public:
    int numSpecialEquivGroups(vector<string>& A) {
        unordered_set<string> Set;
        for (const auto &str : A){
            string even, odd;
            for( int i=0; i<str.size(); i++){
                if (i % 2)
                    odd += str[i];
                else
                    even += str[i];
            }
            sort(even.begin(), even.end());
            sort(odd.begin(), odd.end());
            Set.insert(odd+even);
        }
        return Set.size();
    }
};
```
<br>
<br>
#### 复杂度分析
时间复杂度 ： O(n^2)
空间复杂度 ： O(1)

<br>
<br>

<br>
<br>
### Python
看了评论区里的方法。于是有了这个一行Python
```Python
class Solution:
    def numSpecialEquivGroups(self, A: List[str]) -> int:
        return len({(''.join(sorted(str[::2]) +sorted(str[1::2]))) for str in A})
```