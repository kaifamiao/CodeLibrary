verbal-arithmetic-puzzle
给你一个方程，左边用<code>words</code>表示，右边用<code>result</code> 表示。

你需要根据以下规则检查方程是否可解：

<ul>
	每个字符都会被解码成一位数字（0 - 9）。
	每对不同的字符必须映射到不同的数字。
	每个 <code>words[i]</code> 和 <code>result</code>都会被解码成一个没有前导零的数字。
	左侧数字之和（<code>words</code>）等于右侧数字（<code>result</code>）。
</ul>

如果方程可解，返回<code>True</code>，否则返回<code>False</code>。



<strong>示例 1：</strong>

<pre><strong>输入：</strong>words = [&quot;SEND&quot;,&quot;MORE&quot;], result = &quot;MONEY&quot;
<strong>输出：</strong>true
<strong>解释：</strong>映射 &#39;S&#39;-&gt; 9, &#39;E&#39;-&gt;5, &#39;N&#39;-&gt;6, &#39;D&#39;-&gt;7, &#39;M&#39;-&gt;1, &#39;O&#39;-&gt;0, &#39;R&#39;-&gt;8, &#39;Y&#39;-&gt;&#39;2&#39;
所以 &quot;SEND&quot; + &quot;MORE&quot; = &quot;MONEY&quot; ,  9567 + 1085 = 10652</pre>

<strong>示例 2：</strong>

<pre><strong>输入：</strong>words = [&quot;SIX&quot;,&quot;SEVEN&quot;,&quot;SEVEN&quot;], result = &quot;TWENTY&quot;
<strong>输出：</strong>true
<strong>解释：</strong>映射 &#39;S&#39;-&gt; 6, &#39;I&#39;-&gt;5, &#39;X&#39;-&gt;0, &#39;E&#39;-&gt;8, &#39;V&#39;-&gt;7, &#39;N&#39;-&gt;2, &#39;T&#39;-&gt;1, &#39;W&#39;-&gt;&#39;3&#39;, &#39;Y&#39;-&gt;4
所以 &quot;SIX&quot; + &quot;SEVEN&quot; + &quot;SEVEN&quot; = &quot;TWENTY&quot; ,  650 + 68782 + 68782 = 138214</pre>

<strong>示例 3：</strong>

<pre><strong>输入：</strong>words = [&quot;THIS&quot;,&quot;IS&quot;,&quot;TOO&quot;], result = &quot;FUNNY&quot;
<strong>输出：</strong>true
</pre>

<strong>示例 4：</strong>

<pre><strong>输入：</strong>words = [&quot;LEET&quot;,&quot;CODE&quot;], result = &quot;POINT&quot;
<strong>输出：</strong>false
</pre>



<strong>提示：</strong>

<ul>
	<code>2 &lt;= words.length &lt;= 5</code>
	<code>1 &lt;= words[i].length,results.length&lt;= 7</code>
	<code>words[i], result</code>只含有大写英文字母
	表达式中使用的不同字符数最大为10
</ul>

口算难题
Given an equation, represented by <code>words</code> on left side and the <code>result</code> on right side.

You need to check if the equation is solvableunder the following rules:

<ul>
	Each character is decoded as one digit (0 - 9).
	Every pair of different characters they must map to different digits.
	Each <code>words[i]</code> and <code>result</code>are decoded as one number <strong>without</strong> leading zeros.
	Sum of numbers on left side (<code>words</code>) will equal to the number on right side (<code>result</code>).
</ul>

Return <code>True</code>if the equation is solvable otherwisereturn<code>False</code>.


<strong>Example 1:</strong>

<pre>
<strong>Input:</strong> words = [&quot;SEND&quot;,&quot;MORE&quot;], result = &quot;MONEY&quot;
<strong>Output:</strong> true
<strong>Explanation:</strong> Map &#39;S&#39;-&gt; 9, &#39;E&#39;-&gt;5, &#39;N&#39;-&gt;6, &#39;D&#39;-&gt;7, &#39;M&#39;-&gt;1, &#39;O&#39;-&gt;0, &#39;R&#39;-&gt;8, &#39;Y&#39;-&gt;&#39;2&#39;
Such that: &quot;SEND&quot; + &quot;MORE&quot; = &quot;MONEY&quot; ,  9567 + 1085 = 10652</pre>

<strong>Example 2:</strong>

<pre>
<strong>Input:</strong> words = [&quot;SIX&quot;,&quot;SEVEN&quot;,&quot;SEVEN&quot;], result = &quot;TWENTY&quot;
<strong>Output:</strong> true
<strong>Explanation:</strong> Map &#39;S&#39;-&gt; 6, &#39;I&#39;-&gt;5, &#39;X&#39;-&gt;0, &#39;E&#39;-&gt;8, &#39;V&#39;-&gt;7, &#39;N&#39;-&gt;2, &#39;T&#39;-&gt;1, &#39;W&#39;-&gt;&#39;3&#39;, &#39;Y&#39;-&gt;4
Such that: &quot;SIX&quot; + &quot;SEVEN&quot; + &quot;SEVEN&quot; = &quot;TWENTY&quot; ,  650 + 68782 + 68782 = 138214</pre>

<strong>Example 3:</strong>

<pre>
<strong>Input:</strong> words = [&quot;THIS&quot;,&quot;IS&quot;,&quot;TOO&quot;], result = &quot;FUNNY&quot;
<strong>Output:</strong> true
</pre>

<strong>Example 4:</strong>

<pre>
<strong>Input:</strong> words = [&quot;LEET&quot;,&quot;CODE&quot;], result = &quot;POINT&quot;
<strong>Output:</strong> false
</pre>


<strong>Constraints:</strong>

<ul>
	<code>2 &lt;= words.length &lt;= 5</code>
	<code>1 &lt;= words[i].length,result.length&lt;= 7</code>
	<code>words[i], result</code>contains only upper case English letters.
	Number of different characters used on the expression is at most10.
</ul>
