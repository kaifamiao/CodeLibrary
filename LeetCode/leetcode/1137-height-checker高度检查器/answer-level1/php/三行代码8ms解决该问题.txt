解题思路：两行代码8ms解决该问题，刚开始准备用循环遍历元素的方式解决，后来发现这可以归纳为两个数组间的问题，研究了一下sort和非asort函数，发现其中一个规律，只要数组的索引有更改，则更改的数量就是答案。
例如[1,1,4,2,1,3]
和[1,1,1,2,3,4]
如果数组的索引变化了，那么就代表，在这个递增数组中，有一些错误的元素
但是索引数组，默认是没有键值的，如果非要自己判断，则需要将索引数组转化为关联数组，表达其形式
这时，我发现也可以自行判断，只不过会比较复杂
归根到底，还是比较两个数组，一个是排序好的，一个是没有排序好的，这可以归纳为一个交集问题
所以，这时可以利用PHP的一个函数array_diff_assoc
```PHP
$arr = $heights
$arr = sort($arr);
return count(array_diff_assoc($arr,$heights));
```
该函数的作用会比较键值，返回第一个参数的数组中与第二个参数的数组的任何不同项的集合
解决该问题

