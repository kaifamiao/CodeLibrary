### 解题思路
遇到左括号直接赋值-1
遇到右括号有几种情况
1. 左边是左括号dp[i-2]**(**)
1.1 dp[i-2]<=0
得dp[i]=2
1.2 dp[i-2]>0
得 dp[i]=dp[i-2]+2
2. 左边是右括号dp[i-2]**）**)
2.1 左边的右括号不能提供帮助，即dp[i-1]=0，得dp[i]=0
2.2左边的右括号能提供帮助,如**(**(.....dp[i-1].....))
我们需要看i-dp[i-1]-1的位置，是不是左括号，这里要注意越界问题，判断i-dp[i-1]-1>0
2.2.1*(())***(**(.....dp[i-1].....))
斜体括号部分，可能是有效的
这时候dp[i]=dp[i-1]+2+dp[i-dp[i-1]-2].......不得不说，挺长的这个式子
2.2.2*)))))***(**(.....dp[i-1].....))
此时dp[i-dp[i-1]-2]<=0，dp[i]=dp[i-1]+2
**好了，分析完了，把上面的情况写成一坨if语句就完事了**
### 代码

```cpp
class Solution {
public:
    int longestValidParentheses(string s) {
        int n=s.size();
        if(n<=1)
        return 0;
        vector<int>dp(n,-1); //dp[i]是以下标为i的括号为末尾的最长有效括号长度
        if(s[0]==')')   //左括号为-1，不能当结尾的右括号为0
        {
            dp[0]=0;
            if(s[1]==')')
            dp[1]=0;
        }
        if(s[0]=='('&&s[1]==')')
        dp[1]=2;                //预处理
        int ans=max(0,dp[1]);
        for(int i=2;i<n;i++) 
        {
            if(s[i]=='(')  //左括号忽略，右括号进入下面的一串if
            continue;
            if(dp[i-1]==-1)  //如果左边是左括号(
            {   if(dp[i-2]>0) //比如左边是()()(
                {
                    dp[i]=dp[i-2]+2;
                    ans=max(ans,dp[i]);
                    continue;
                }
                dp[i]=2;       //比如左边是())(
                ans=max(ans,dp[i]);
                continue;
            }
            if(dp[i-1]>0&&i-dp[i-1]-1>=0)//确保不越界
            { 
                if(dp[i-dp[i-1]-1]==-1) //比如左边是((())
                { 
                    dp[i]=dp[i-1]+2;
                    if(i-dp[i-1]-1>0&&dp[i-dp[i-1]-2]>0) //特殊情况()((())，需要合并
                    dp[i]+=dp[i-dp[i-1]-2];
                    ans=max(ans,dp[i]);
                    continue;
                }
            }
            dp[i]=0;  //此右括号不能当有效的结尾
        }
        return ans;
    }
};
```