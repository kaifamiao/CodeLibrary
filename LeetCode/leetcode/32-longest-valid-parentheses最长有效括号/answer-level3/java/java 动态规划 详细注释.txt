```
class Solution {
    public int longestValidParentheses(String s) {
        //s从索引为dp[i]到i是一串有效括号
        //相当于dp存放着串的开头位置
        int[] dp=new int[s.length()+1];
        s=" "+s;//0位置作为哨兵
        dp[0]=-1;//-1表示s不存在以该索引位置为结尾的子串是有效括号
        int res=0;//记录最大长度
        for(int i=1;i<s.length();i++){
            if(s.charAt(i)=='('){
                //以'('结尾的子串肯定不是有效括号
                dp[i]=-1;
            }else{
                //以')'结尾还需要进一步判断
                if(s.charAt(i-1)=='('){
                    // 情况1 前一个是'('    
                    // 能与前一个位置即i-1组合成一对括号 ()
                    // 可能出现(...一串有效括号...)()的情况
                    // 由于末尾的括号与之前的某个括号匹配上，可能导致两个子串可以拼接成一个更长的有效括号
                    // 所以还需要判断上述情况是否存在 即判断dp[i-2]是否等于-1
                    dp[i]=dp[i-2]!=-1?dp[i-2]:i-1;
                }else if(dp[i-1]!=-1&&s.charAt(dp[i-1]-1)=='('){
                    // 情况2 前一个位置也是')' 
                    // (...一串有效括号...)((....另一串有效括号....))
                    // 由于末尾的括号与之前的某个括号匹配上，可能导致两个子串可以拼接成一个更长的有效括号
                    // 所以还需要判断上述情况是否存在 即判断dp[dp[i-1]-2]是否等于-1
                    dp[i]=dp[dp[i-1]-2]!=-1?dp[dp[i-1]-2]:dp[i-1]-1;
                }else{
                    // 情况3 前一个是')'但没匹配上
                    // (...一串有效括号...)) 最后一个括号就很多余，没匹配上其他括号
                    dp[i]=-1;
                }
                if(dp[i]!=-1)
                    //更新答案
                    res=Math.max(res,i-dp[i]+1);
            }
        }
        return res;
    }
}
```
