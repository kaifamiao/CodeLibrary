### 解题思路
一层层的算

### 代码

```cpp
class Solution {
public:
    int trap(vector<int>& height) {
        int ans = 0;
        int current = 0;
        stack<int> st;
        while(current<height.size()){
            while(!st.empty() && height[current] > height[st.top()]){
                int top = st.top();
                st.pop();
                if(st.empty()){
                    break;
                }
                int distance = current  - st.top() - 1;
                cout << current << " " << top << endl;
                int bounded_height = min(height[current],height[st.top()]) - height[top];
                ans += distance * bounded_height;
            }
            st.push(current++);
        }

        return ans;
    }
};
```