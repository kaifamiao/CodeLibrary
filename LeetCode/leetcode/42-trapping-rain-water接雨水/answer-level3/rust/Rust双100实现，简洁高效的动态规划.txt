
```rust []
impl Solution {
    pub fn trap(height: Vec<i32>) -> i32 {
        let n = height.len();
        if n == 0 {
            return 0;
        }

        let mut a = vec![0; n];
        a[0] = height[0];
        for i in 1..n {
            a[i] = a[i - 1].max(height[i]);
        }

        let mut b = vec![0; n];
        b[n - 1] = height[n - 1];
        for i in 1..n {
            b[n - 1 - i] = b[n - i].max(height[n - 1 - i]);
        }

        let mut area = 0;
        for i in 0..n {
            area += a[i].min(b[i]) - height[i];
        }
        area
    }
}
```
