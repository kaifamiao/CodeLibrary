search-rotate-array-lcci
搜索旋转数组。给定一个排序后的数组，包含n个整数，但这个数组已被旋转过很多次了，次数不详。请编写代码找出数组中的某个元素，假设数组元素原先是按升序排列的。若有多个相同元素，返回索引值最小的一个。

<strong>示例1:</strong>

<pre><strong> 输入</strong>: arr = [15, 16, 19, 20, 25, 1, 3, 4, 5, 7, 10, 14], target = 5
<strong> 输出</strong>: 8（元素5在该数组中的索引）
</pre>

<strong>示例2:</strong>

<pre><strong> 输入</strong>：arr = [15, 16, 19, 20, 25, 1, 3, 4, 5, 7, 10, 14], target = 11
<strong> 输出</strong>：-1 （没有找到）
</pre>

<strong>提示:</strong>

<ol>
	arr 长度范围在[1, 1000000]之间
</ol>

搜索旋转数组
Given a sorted array of n integers that has been rotated an unknown number of times, write code to find an element in the array. You may assume that the array was originally sorted in increasing order. If there are more than one target elements in the array, return the smallest index.

<strong>Example1:</strong>

<pre>
<strong> Input</strong>: arr = [15, 16, 19, 20, 25, 1, 3, 4, 5, 7, 10, 14], target = 5
<strong> Output</strong>: 8 (the index of 5 in the array)
</pre>

<strong>Example2:</strong>

<pre>
<strong> Input</strong>: arr = [15, 16, 19, 20, 25, 1, 3, 4, 5, 7, 10, 14], target = 11
<strong> Output</strong>: -1 (not found)
</pre>

<strong>Note:</strong>

<ol>
	<code>1 &lt;= arr.length &lt;= 1000000</code>
</ol>
