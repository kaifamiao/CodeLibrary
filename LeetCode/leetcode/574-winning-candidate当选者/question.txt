winning-candidate
表: <code>Candidate</code>

<pre>+-----+---------+
| id  | Name    |
+-----+---------+
| 1   | A       |
| 2   | B       |
| 3   | C       |
| 4   | D       |
| 5   | E       |
+-----+---------+  
</pre>

表: <code>Vote</code>

<pre>+-----+--------------+
| id  | CandidateId  |
+-----+--------------+
| 1   |     2        |
| 2   |     4        |
| 3   |     3        |
| 4   |     2        |
| 5   |     5        |
+-----+--------------+
id 是自动递增的主键，
CandidateId 是 Candidate 表中的 id.
</pre>

请编写 sql 语句来找到当选者的名字，上面的例子将返回当选者 <code>B</code>.

<pre>+------+
| Name |
+------+
| B    |
+------+
</pre>

<strong>注意:</strong>

<ol>
	你可以假设<strong>没有平局</strong>，换言之，<strong>最多</strong>只有一位当选者。
</ol>



当选者
Table: <code>Candidate</code>

<pre>
+-----+---------+
| id  | Name    |
+-----+---------+
| 1   | A       |
| 2   | B       |
| 3   | C       |
| 4   | D       |
| 5   | E       |
+-----+---------+  
</pre>

Table: <code>Vote</code>

<pre>
+-----+--------------+
| id  | CandidateId  |
+-----+--------------+
| 1   |     2        |
| 2   |     4        |
| 3   |     3        |
| 4   |     2        |
| 5   |     5        |
+-----+--------------+
id is the auto-increment primary key,
CandidateId is the id appeared in Candidate table.
</pre>

Write a sql to find the name of the winning candidate, the above example will return the winner <code>B</code>.

<pre>
+------+
| Name |
+------+
| B    |
+------+
</pre>

<b>Notes:</b>

<ol>
	You may assume <b>there is no tie</b>, in other words there will be <b>only one</b> winning candidate.
</ol>


