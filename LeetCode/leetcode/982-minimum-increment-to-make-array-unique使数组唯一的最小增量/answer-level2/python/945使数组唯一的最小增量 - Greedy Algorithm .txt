### 解题思路
大问题分解成小问题，使用贪心算法解决。
子问题是让**排序**好的数组前面的元素小于后面的元素。
直观的方法为：**拍完序后，若后面的元素值小于前面的元素值,则令后面的元素值为前面的元素值加1**，每次都这样进行得到的最后总的数组也都是前面的元素小于后面的元素，也就是唯一的。每次进行时用**Count记录操作数为前后两者之差+1**.


### 代码

```python3
"""
给定整数数组 A，每次 move 操作将会选择任意 A[i]，并将其递增 1。
返回使 A 中的每个值都是唯一的最少操作次数
"""
class Solution:
    def minIncrementForUnique(self, A: List[int]) -> int:
        A.sort()#排序
        lenA=len(A)
        count=0
        for i in range(1,lenA):#依次比较，若前一个比后一个大，count加上两者之差加1，后者变为前者加1（次序不能颠倒）
            if A[i]<=A[i-1]:
                count+=A[i-1]-A[i]+1
                A[i]=A[i-1]+1
        return count


```