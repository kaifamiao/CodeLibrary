相当于用一个桶把所有数的个数统计，顺便排好序（桶排序）
然后从index=0开始遍历桶数组
若出现次数大于1则将多余的数字自增，用一个变量将自增几个数字加起来，就是自增的次数
若自增后的位置为0，则说明这个位置有空缺，则把当前重复的数字的个数减一，继续自增并向前遍历
若不为0，则将重复的数字自增至当前数字，然后将当前数字的个数减一即为当前重复的数字的个数
重复即可

     public int minIncrementForUnique(int[] A) {
           int cur = 0;
            int res = 0;
            int pre = 0;
            int[] base = new int[A.length+4000];
            //通排序并统计个数
            for (int num:
                 A) {
                base[num]++;
            }
            //遍历桶
            for (int i = 0; i < base.length; i++) {
                if (base[i]==0){
                    //如果当前位置没有数字，且当前有重复的数字，则将重复数字自增至当前数字并将重复数字的个数减一
                    //并将自增的数字的个数累加起来
                    if (cur!=0){
                        res+=cur;
                        cur--;
                        pre = i;
                    }
                }else {
                    //若当前位置占有数字，则将所有重复数字自增至当前位置，并将重复数字的个数加上当前位置数字个数-1
                    //将自增次数累加起来
                    res += cur*(i-pre);
                    cur += (base[i]-1);
                    pre = i;
                }
            }
            return res;
        }