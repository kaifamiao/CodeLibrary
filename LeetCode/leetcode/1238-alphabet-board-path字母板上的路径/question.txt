alphabet-board-path
我们从一块字母板上的位置<code>(0, 0)</code>出发，该坐标对应的字符为<code>board[0][0]</code>。

在本题里，字母板为<code>board = [&quot;abcde&quot;, &quot;fghij&quot;, &quot;klmno&quot;, &quot;pqrst&quot;, &quot;uvwxy&quot;, &quot;z&quot;]</code>，如下所示。

<img alt="" src="https://assets.leetcode.com/uploads/2019/07/28/azboard.png" style="width: 300px;">

我们可以按下面的指令规则行动：

<ul>
	如果方格存在，<code>&#39;U&#39;</code>意味着将我们的位置上移一行；
	如果方格存在，<code>&#39;D&#39;</code>意味着将我们的位置下移一行；
	如果方格存在，<code>&#39;L&#39;</code>意味着将我们的位置左移一列；
	如果方格存在，<code>&#39;R&#39;</code>意味着将我们的位置右移一列；
	<code>&#39;!&#39;</code>会把在我们当前位置 <code>(r, c)</code> 的字符<code>board[r][c]</code>添加到答案中。
</ul>

（注意，字母板上只存在有字母的位置。）

返回指令序列，用最小的行动次数让答案和目标<code>target</code>相同。你可以返回任何达成目标的路径。



<strong>示例 1：</strong>

<pre><strong>输入：</strong>target = &quot;leet&quot;
<strong>输出：</strong>&quot;DDR!UURRR!!DDD!&quot;
</pre>

<strong>示例 2：</strong>

<pre><strong>输入：</strong>target = &quot;code&quot;
<strong>输出：</strong>&quot;RR!DDRR!UUL!R!&quot;
</pre>



<strong>提示：</strong>

<ul>
	<code>1 &lt;= target.length &lt;= 100</code>
	<code>target</code>仅含有小写英文字母。
</ul>

字母板上的路径
On an alphabet board, we start at position <code>(0, 0)</code>, corresponding to character<code>board[0][0]</code>.

Here, <code>board = [&quot;abcde&quot;, &quot;fghij&quot;, &quot;klmno&quot;, &quot;pqrst&quot;, &quot;uvwxy&quot;, &quot;z&quot;]</code>, as shown in the diagram below.

<img alt="" src="https://assets.leetcode.com/uploads/2019/07/28/azboard.png" style="width: 250px; height: 317px;" />

We may make the following moves:

<ul>
	<code>&#39;U&#39;</code> moves our position up one row, if the position exists on the board;
	<code>&#39;D&#39;</code> moves our position down one row, if the position exists on the board;
	<code>&#39;L&#39;</code> moves our position left one column, if the position exists on the board;
	<code>&#39;R&#39;</code> moves our position right one column, if the position exists on the board;
	<code>&#39;!&#39;</code>adds the character <code>board[r][c]</code> at our current position <code>(r, c)</code>to theanswer.
</ul>

(Here, the only positions that exist on the board are positions with letters on them.)

Return a sequence of moves that makes our answer equal to <code>target</code>in the minimum number of moves. You may return any path that does so.


<strong>Example 1:</strong>
<pre><strong>Input:</strong> target = "leet"
<strong>Output:</strong> "DDR!UURRR!!DDD!"
</pre><strong>Example 2:</strong>
<pre><strong>Input:</strong> target = "code"
<strong>Output:</strong> "RR!DDRR!UUL!R!"
</pre>

<strong>Constraints:</strong>

<ul>
	<code>1 &lt;= target.length &lt;= 100</code>
	<code>target</code> consists only of English lowercase letters.
</ul>