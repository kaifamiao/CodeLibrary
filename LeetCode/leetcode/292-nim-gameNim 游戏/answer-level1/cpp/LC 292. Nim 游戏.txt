思路：
- 1 2 3 ，都是P，因为可以直接拿走
- 4是N，因为自己无论怎么拿，剩下的对方总可以一次拿完
- 5 6 7 是P，因为可以拿1 2 3 个，转换成N状态的4，对手N状态，则自己就是P状态

数归证明:n=4k是N状态
- 起始状态就是上面的1 2 3 4
- 假设4*k是N状态
- 对于4k+4
    - 如果自己拿走1个，还剩，4k+3，对手拿走3个，自己面对4k个，是N状态
    - 如果自己拿走2个，还剩，4k+2，对手拿走2个，自己面对4k个，是N状态
    - 如果自己拿走3个，还剩，4k+1，对手拿走1个，自己面对4k个，是N状态
- 综上：4k+4是N状态
    - N状态的一个特点：N状态怎么变化都是N状态
- 所以只要n是4的倍数，那么显手必败

```
class Solution {
public:
    bool canWinNim(int n) {
        return n%4;
    }
};
/*
1: P
2: P
3: P
4: N
5: P
6: P

*/
```
