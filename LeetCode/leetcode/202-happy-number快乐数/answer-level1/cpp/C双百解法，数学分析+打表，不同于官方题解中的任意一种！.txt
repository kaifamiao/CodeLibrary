![微信图片_20200402181705.png](https://pic.leetcode-cn.com/71acd62e9b2216fc6fb74269a76ef67036de68acc9a4a9343fe0cc4d1bdbd5aa-%E5%BE%AE%E4%BF%A1%E5%9B%BE%E7%89%87_20200402181705.png)

### 解题思路
The question: given an integer x and a functoin f, where f(x) equals to sum of sqrare of x's digits, check whether x will become 1 after the iteration of x = f(x)?

题目，给定一个x和一个运算，问不断迭代最后会不会到1。

This method is based on mathematical property of the function f. From intuition we can gues x declines quickly when its big, but how quickly and how big?

这个方法比较偏数学。直觉上我们可以感受到一个大数应该是降得很快的，那么有多快呢？

Suppose x has (k + 1) digits, then we have x > 10^k. From another perpective, each digit is not greater than 9, so f(x) < 81k. Therefore, we have f(x)/x < 81k/10^k, which, when k eqals to 3, is less than 0.25 and even smaller when k is larger. (In fact, since x < 10^(k + 1), we have f(x) < 810k, it is extremely small, and we can consume the iteration from 810k to a three-digit-number is an exponential decline). Iteration times in this step is O(logk). For x in [1, 999], we can easily calculate the result offline and check it in O(1). However, the first iteration require us to calculate f(x) for the queried x, whose time cost is O(logx). This limits the time complexity of the whole process.

假设x有（k+1）位，经过一顿分析我们可以看到f(x)/x < 81k/10^k 且 f(x) < 810k。也就是说，一个非常大的数（甚至几十几百位），经过一两次之后会变成只有四五位，之后会以指数下降的速度降到三位（因为81k/10^k < 0.25）。对于三位数，打个表就好了。

时间复杂度： O(logx) (算第一个x需要log的时间，后面只用log(log(x)))的时间就会降到三位数。
空间复杂度： O(1) (需要开个1000的布尔数组)

### 代码

```c
const int sqr[10] = {0, 1, 4, 9, 16, 25, 36, 49, 64, 81};
const bool ans[1000] = {false, true, false, false, false, false, false, true, false, false, true, false, false, true, false, false, false, false, false, true, false, false, false, true, false, false, false, false, true, false, false, true, true, false, false, false, false, false, false, false, false, false, false, false, true, false, false, false, false, true, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, true, false, true, false, false, false, false, false, false, false, false, true, false, false, true, false, false, false, true, false, false, false, false, true, false, false, true, false, false, true, false, false, true, false, false, true, false, false, false, false, false, true, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, true, true, false, false, true, false, false, false, false, false, true, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, true, false, false, false, false, false, false, false, false, true, false, false, false, false, false, false, false, false, false, false, false, true, false, true, false, true, true, false, false, false, false, false, false, false, false, false, true, false, false, false, false, true, false, false, false, false, false, false, false, false, false, false, true, false, false, false, false, false, false, true, false, false, false, true, false, false, false, false, false, true, false, false, true, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, true, true, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, true, false, false, false, false, false, false, false, false, false, false, true, false, true, false, false, false, false, false, false, false, true, true, false, false, false, false, false, false, false, true, false, false, true, false, false, false, false, false, true, true, false, false, false, false, false, true, false, false, true, false, true, false, false, false, false, false, false, true, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, true, false, false, false, false, false, true, false, false, true, false, true, true, false, false, false, false, false, false, false, true, false, false, true, false, false, false, true, false, false, true, false, false, false, false, true, true, false, false, false, false, true, false, false, false, false, false, false, true, false, false, false, false, true, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, true, false, false, false, false, false, true, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, true, false, false, false, false, true, false, false, false, false, false, false, false, false, true, false, false, false, false, false, false, false, false, true, false, false, true, false, false, false, false, false, true, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, true, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, true, false, false, false, false, false, false, true, false, true, true, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, true, false, false, false, false, false, false, false, false, true, false, false, false, false, true, true, false, false, false, false, false, false, false, false, true, false, false, true, false, true, true, false, false, false, false, false, true, false, false, false, false, true, false, false, false, true, false, true, true, false, false, false, false, false, false, false, false, true, false, false, false, false, false, true, false, true, false, false, false, false, false, false, true, false, false, true, false, false, false, false, false, false, false, false, false, false, true, false, false, false, false, false, true, false, false, false, false, false, false, false, false, true, false, false, false, false, false, false, true, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, true, false, false, true, false, false, false, false, false, false, false, false, true, false, false, false, false, false, false, false, false, false, false, false, false, true, false, true, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, true, false, false, false, false, false, true, false, false, true, false, false, false, false, false, false, false, false, true, false, false, false, true, false, false, false, false, false, false, false, false, false, false, false, true, false, true, false, false, false, false, false, false, false, false, false, false, false, false, true, false, false, true, false, false, false, false, false, false, false, false, false, false, true, false, false, false, false, false, false, false, false, false, false, false, false, true, false, false, true, false, false, false, false, false, false, false, false, false, false, true, false, false, false, false, false, false, true, false, false, false, false, false, false, true, false, false, false, false, false, false, false, false, false, false, true, false, true, false, false, true, false, false, true, false, false, true, false, true, true, false, false, false, false, false, false, false, true, false, true, false, false, false, false, false, false, false, true, true, false, false, false, false, true, false, false, true, false, false, false, false, false, true, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, true, false, false, false, false, false, true, false, false, true, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, true, false, false, false, false, false, false, false, false, true, false};

bool isHappy(int n){
    while (n >= 1000) {
        int next_n = 0;
        while (n > 0) {
            next_n += sqr[n % 10];
            n /= 10;
        }
        n = next_n;
    }
    return ans[n];
}
```