### 解题思路
题目：给定一个整数 n，计算所有小于等于 n 的非负整数中数字 1 出现的个数。

统计每个数的各个位出现1的次数，简单来看就是统计n在减小到0前个位、十位、百位等各个位置上出现1的次数的总和。
不过各个位置上出现1后，其代表的数出现1的次数也不同。
个位上出现1，则代表1出现次数为1.
十位上出现1，则代表1出现次数为10。（10，11，12，13，14，15，16，17，18，19）。

位置i上出现1的次数 = 循环出现的次数 * 位置i上1代表的次数（1ei)。
如果i位置上出现的是1 则还要加上 n % (1ei)

### 代码

```cpp
class Solution {
public:
    int countDigitOne(int n) {
        int tmp = n;
        int ret = 0;
        long k = 1;
        while(tmp){
            int yu = tmp % 10;
            ret += tmp/10 * k;
            if(yu > 1) ret+= k;
            else if(yu == 1){
                ret+= n%k + 1;
            }
            k = k*10;
            tmp = tmp/10;
        }
        return ret;
    }
};
```