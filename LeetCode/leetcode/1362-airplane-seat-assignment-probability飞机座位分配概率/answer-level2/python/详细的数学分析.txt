
## 和某些计数问题的解法非常相似

假设T(n)表示规模为n的情况下的概率，那么我们按照第一个人的情况来分类

1. 当第一个人选择了自己的位置，有$\frac{1}{n} \times 1$
2. 当第一个人选择了第$n$个位置，有$\frac{1}{n} \times 0$
3. 当第一个人选择了其余$n-2$个位置时，可做如下分析：

> 假设其选择了第j个位置，那么之后在j之前的人都能够做对自己的位置，到了j的时候，j需要随机选择一个位置，这个时候可以把第1个人留下的位置看做j的位置，那么问题就转化为了规模为$n-i+1$的问题。

由上面的分析可有：
$T(n)=\frac{1}{n}+\frac{1}{n}\sum_{i=2}^{n-1}T(n-i+1), \quad n \geq 2$
$T(1) = 1, T(2) = \frac{1}{2}$

然后利用动态规划就可以求解了。时间复杂度为$O(n)$, 空间复杂度为$O(1)$.

但是进一步分析，可以发现，有下面的结论：

$T(1) =1$
$T(2) = 0.5$
$T(3) = \frac{1}{3} + \frac{1}{3}\times 0.5 = 0.5$
假设$T(i) = 0.5$对应任意2到k均成立。
那么就有$T(k+1) = \frac{1}{k+1} + \frac{1}{k+1} (0.5) * (k+1-2) = 0.5$
所以任意$k \geq 2, T(k) = 0.5$


```python[]

def solution(n):
    if n == 1:
        return 1.0
    else:
        return 0.5
```