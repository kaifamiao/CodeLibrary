**这道题在助教和几位大佬xgg的帮助下终于明白了dp推理的方法**
下面具体来讲一下状态转移方程的推出：
首先我们进行简单的模拟：一共100个人
①当1（序号代表的是第几位乘客）占了1号的位子时（由于是随便选所以也可以选1）,100号的乘客一定可以做到自己的位置上面,所以此时概率为1
②如果1坐到了2上面，那么2就会有两类选择：占据1或者3~100之间的任一个位置：
如果2占据了1，那么就可以看做1~2是没有问题的，100也可以坐到100上面
如果2占据了5，那么就可以看做1~4没有问题，继续分析的是（5~100）之间的问题，相当于5号乘客没有自己的位子坐，只能坐前面一个或者6~100之间的一个位子，但是5可以选前面的一个位置，说明该问题又可以等效于5在5~100里面选一个位子，就是1~95里面的问题
如果任选一个k（3 <= k <= 100）那么就要继续分析剩余的子问题
...
直到子问题成为1选1

最后给出一个dp设计：f[i]表示人数为i时i号乘客可以坐上i的概率
```
void nthPersonGetsNthSeat(int n)
{
    f[1] = 1;
    if(n == 1)
        return 1;
    for (int i = 2; i <= n; ++i)
        f[i] = (1 + (i - 2) * f[i - 1]) / (double)i;
    return f[n];
}
```
