### 解题思路
本题运用动态规划解决非常的简单，机器人每次只向右或下走，因此，机器人走到每一个格的方法，就是这个方格的左边那个和上边那个方格的方法和，同理，可以推出左边，和上边方格，由它们各自的上一层求得，最后可以追溯到（0，0）点，我们用一个二维数组dp来记录，机器人从（0，0）出发走过的每一个方格的方法，由此我们可以从dp中直接获取它的左边和上边方格的方法数。

### 代码

```cpp
class Solution {
public:
    int uniquePaths(int m, int n) {
       vector<vector<int>> dp(m+1,vector<int>(n+1,0));//在这里多初始化一行一列，便于边界的计算
       dp[1][1]=1;//初始化开始点
       for(int i=1;i<m+1;i++)
       {
           for(int j=1;j<n+1;j++)
           {
               dp[i][j]+=dp[i-1][j]+dp[i][j-1];
           }
       }
       return dp[m][n];
    }
};
```