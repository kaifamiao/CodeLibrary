split-a-string-in-balanced-strings
在一个「平衡字符串」中，&#39;L&#39; 和 &#39;R&#39; 字符的数量是相同的。

给出一个平衡字符串<code>s</code>，请你将它分割成尽可能多的平衡字符串。

返回可以通过分割得到的平衡字符串的最大数量。



<strong>示例 1：</strong>

<pre><strong>输入：</strong>s = &quot;RLRRLLRLRL&quot;
<strong>输出：</strong>4
<strong>解释：</strong>s 可以分割为 &quot;RL&quot;, &quot;RRLL&quot;, &quot;RL&quot;, &quot;RL&quot;, 每个子字符串中都包含相同数量的 &#39;L&#39; 和 &#39;R&#39;。
</pre>

<strong>示例 2：</strong>

<pre><strong>输入：</strong>s = &quot;RLLLLRRRLR&quot;
<strong>输出：</strong>3
<strong>解释：</strong>s 可以分割为 &quot;RL&quot;, &quot;LLLRRR&quot;, &quot;LR&quot;, 每个子字符串中都包含相同数量的 &#39;L&#39; 和 &#39;R&#39;。
</pre>

<strong>示例 3：</strong>

<pre><strong>输入：</strong>s = &quot;LLLLRRRR&quot;
<strong>输出：</strong>1
<strong>解释：</strong>s 只能保持原样 &quot;LLLLRRRR&quot;.
</pre>



<strong>提示：</strong>

<ul>
	<code>1 &lt;= s.length &lt;= 1000</code>
	<code>s[i] = &#39;L&#39; 或 &#39;R&#39;</code>
</ul>

分割平衡字符串
<i data-stringify-type="italic">Balanced</i>strings are those who have equal quantity of &#39;L&#39; and &#39;R&#39; characters.

Given a balanced string<code data-stringify-type="code">s</code>split it in the maximum amount of balanced strings.

Return the maximum amount of splitted balanced strings.


<strong>Example 1:</strong>

<pre>
<strong>Input:</strong> s = &quot;RLRRLLRLRL&quot;
<strong>Output:</strong> 4
<strong>Explanation: </strong>s can be split into &quot;RL&quot;, &quot;RRLL&quot;, &quot;RL&quot;, &quot;RL&quot;, each substring contains same number of &#39;L&#39; and &#39;R&#39;.
</pre>

<strong>Example 2:</strong>

<pre>
<strong>Input:</strong> s = &quot;RLLLLRRRLR&quot;
<strong>Output:</strong> 3
<strong>Explanation: </strong>s can be split into &quot;RL&quot;, &quot;LLLRRR&quot;, &quot;LR&quot;, each substring contains same number of &#39;L&#39; and &#39;R&#39;.
</pre>

<strong>Example 3:</strong>

<pre>
<strong>Input:</strong> s = &quot;LLLLRRRR&quot;
<strong>Output:</strong> 1
<strong>Explanation: </strong>s can be split into &quot;LLLLRRRR&quot;.
</pre>

<strong>Example 4:</strong>

<pre>
<strong>Input:</strong> s = &quot;RLRRRLLRLL&quot;
<strong>Output:</strong> 2
<strong>Explanation: </strong>s can be split into &quot;RL&quot;, &quot;RRRLLRLL&quot;, since each substring contains an equal number of &#39;L&#39; and &#39;R&#39;
</pre>


<strong>Constraints:</strong>

<ul>
	<code>1 &lt;= s.length &lt;= 1000</code>
	<code>s[i] = &#39;L&#39; or &#39;R&#39;</code>
</ul>
