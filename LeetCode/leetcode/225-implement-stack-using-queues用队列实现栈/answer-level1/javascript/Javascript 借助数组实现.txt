知识点：
- 栈，后进先出的结构

由于自己是通过JS来实现的，所以，首先想到的就是使用数组来模拟队列的操作：
- 入栈：就直接使用数组的`push()`方法
- 出栈：因为是溢出栈顶元素，所以，直接使用`pop()`方法
- 获取栈顶：这个数组没有原生的方法，需要自己构造下，也很简单，就是根据`数组下标[数组长度 -1]`来返回即可
- 返回栈是否为空：这个也很简单，根据数组的长度做个判断，长度0返回true，长度不是0返回false

接下来就是写代码，这里记录下自己犯了个想当然的错误：
- 一上来是这么定义的，导致后面的原型方法都不能定义成功，这也给自己提了个醒，说明对于原型链的原理还是不慎了解，对于构造对象的方法掌握的也不熟练
```js
var MyStack = function () {
    return [];
};
```
- 正确的做法，当然是应该这样
```js
var MyStack = function () {
    this.stack = [];
};
```