divide-two-integers
给定两个整数，被除数<code>dividend</code>和除数<code>divisor</code>。将两数相除，要求不使用乘法、除法和 mod 运算符。

返回被除数<code>dividend</code>除以除数<code>divisor</code>得到的商。

整数除法的结果应当截去（<code>truncate</code>）其小数部分，例如：<code>truncate(8.345) = 8</code> 以及 <code>truncate(-2.7335) = -2</code>



<strong>示例1:</strong>

<pre><strong>输入:</strong> dividend = 10, divisor = 3
<strong>输出:</strong> 3
<strong>解释: </strong>10/3 = truncate(3.33333..) = truncate(3) = 3</pre>

<strong>示例2:</strong>

<pre><strong>输入:</strong> dividend = 7, divisor = -3
<strong>输出:</strong> -2
<strong>解释:</strong> 7/-3 = truncate(-2.33333..) = -2</pre>



<strong>提示：</strong>

<ul>
	被除数和除数均为 32 位有符号整数。
	除数不为0。
	假设我们的环境只能存储 32 位有符号整数，其数值范围是 [&minus;2<sup>31</sup>, 2<sup>31</sup>&minus; 1]。本题中，如果除法结果溢出，则返回 2<sup>31</sup>&minus; 1。
</ul>

两数相除
Given two integers <code>dividend</code> and <code>divisor</code>, divide two integers without using multiplication, division and mod operator.

Return the quotient after dividing <code>dividend</code> by <code>divisor</code>.

The integer division should truncate toward zero, which means losing its fractional part. For example, <code>truncate(8.345) = 8</code> and <code>truncate(-2.7335) = -2</code>.

<strong>Example 1:</strong>

<pre>
<strong>Input:</strong> dividend = 10, divisor = 3
<strong>Output:</strong> 3
<strong>Explanation:</strong> 10/3 = truncate(3.33333..) = 3.
</pre>

<strong>Example 2:</strong>

<pre>
<strong>Input:</strong> dividend = 7, divisor = -3
<strong>Output:</strong> -2
<strong>Explanation:</strong> 7/-3 = truncate(-2.33333..) = -2.
</pre>

<strong>Note:</strong>

<ul>
	Both dividend and divisorwill be32-bitsigned integers.
	The divisor will never be 0.
	Assume we are dealing with an environment which could only store integers within the 32-bit signed integer range: [&minus;2<sup>31</sup>, 2<sup>31</sup> &minus; 1]. For the purpose of this problem, assume that your function <strong>returns 2<sup>31</sup> &minus; 1 when the division resultoverflows</strong>.
</ul>
