```
    /*
    当是奇数时 例如 10111 -> 会+1 得到 11000 然后会一直除2三次
    故而对于一个奇数若最右边有x个连续的1 则需要x+1次操作
    对于偶数 只需要右移一位即可 需要1步操作 如此模拟即可
    */
    int numSteps(string s) {
        int res = 0, n = s.size(),d = 0;
        for(int i = n-1; i >= 0; ){//从低位往高位开始遍历
            if(i==0&&s[i]=='1') break;//模拟完成
            if(s[i]=='1'){
                int x = 0;//最右边连续的1的个数
                while(i>=0&&s[i]=='1') i--,x++;//找到第一个非1位置
                res += x+1;//累加操作步数 
                if(i < 0) break;//即全为1的情况 进位在最前方 经过之前的+1 不断右移 答案就出来了，结束即可
                s[i] = '1';//之前的+1操作的效果
            }
            else res++, i--;//偶数时
        }
        return res;
    }
```
