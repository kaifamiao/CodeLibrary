### 解题思路
对字符串找规律:
- 如果末位是0（偶数），则直接右移（除2）
- 如果末位是1（奇数），则需要加一，反应在二进制串上相当于不断进位，举几个例子
  - 11001 -> 11010 -> 1101
  - 1011 -> 1100 -> 110 -> 11
  - 从以上例子可以看出，我们可以做的一个阶段性操作为：加1后，将末尾的0都去掉 ，总共需要的步骤数为：
     - `1(进位) + 当前位起连续的1的个数(相当于进位后末尾新产生多少个0)`

### 代码

```cpp
class Solution {
public:
    int numSteps(string s) {
        int idx = s.size() - 1;
        int ans = 0;
        while(idx > 0){//第一位最后肯定剩1，不另计算
            if(s[idx] == '0'){
                ans++;
                idx--;
            }
            else{
                ans++;//进位的+1
                while(idx >= 0 && s[idx] == '1'){//进位后，连续的1产生连续的0
                    ans++;
                    idx--;
                }
                if(idx > 0)
                    s[idx] = '1';
            }
        }
        return ans;
    }
};
```