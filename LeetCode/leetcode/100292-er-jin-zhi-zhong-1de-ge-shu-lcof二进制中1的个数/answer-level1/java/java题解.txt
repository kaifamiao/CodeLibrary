### 解题思路

判断最低位是否为1，如果为1计数一次。无符号右位移一次，继续重复直到该数变成0终止循环。

// you need to treat n as an unsigned value
由题意可知，n的十进制数可能为正数也有可能是负数（二进制最高位为1），
因此采用无符号右移，空位补0，n为负数时不能补1。

1. 和1按位与运算
按位与运算&，两个整形数据对应为为1，结果对应位为1，否则对应为0。
例如：
1111 0011 & 0000 0001 结果：0000 0001
1111 0010 & 0000 0001 结果：0000 0000

2. java中右移">>"和无符号右移">>>"的区分：
无符号右移：最高位为0或为1，右移空位都填0。
右移：最高位为0，右移空位填0；最高位为1右移空位填1。
注意：最高位为符号位。
### 代码

```java
public class Solution {
    // you need to treat n as an unsigned value
    public int hammingWeight(int n) {
        int res = 0;
        while(n != 0){
            res += n & 1;
            n = n>>>1;
        }
        return res;
    }
}
```