smallest-rectangle-enclosing-black-pixels
图片在计算机处理中往往是使用二维矩阵来表示的。

假设，这里我们用的是一张黑白的图片，那么<code>0</code>代表白色像素，<code>1</code>代表黑色像素。

其中黑色的像素他们相互连接，也就是说，图片中只会有一片连在一块儿的黑色像素（像素点是水平或竖直方向连接的）。

那么，给出某一个黑色像素点<code>(x, y)</code>的位置，你是否可以找出包含全部黑色像素的最小矩形（与坐标轴对齐）的面积呢？

<img src="https://assets.leetcode-cn.com/aliyun-lc-upload/original_images/302_smallest_rectangle_enclosing_black_pixels.png" style="width: 100px;">

<strong>示例:</strong>

<pre><strong>输入:</strong>
[
  &quot;0010&quot;,
  &quot;0110&quot;,
  &quot;0100&quot;
]
<code>和 x = 0, </code><code>y = 2</code>

<strong>输出:</strong> 6
</pre>



包含全部黑色像素的最小矩形
An image is represented by a binary matrix with <code>0</code> as a white pixel and <code>1</code> as a black pixel. The black pixels are connected, i.e., there is only one black region. Pixels are connected horizontally and vertically. Given the location <code>(x, y)</code> of one of the black pixels, return the area of the smallest (axis-aligned) rectangle that encloses all black pixels.

<strong>Example:</strong>

<pre>
<strong>Input:</strong>
[
  &quot;0010&quot;,
  &quot;0110&quot;,
  &quot;0100&quot;
]
and <code>x = 0<font face="sans-serif, Arial, Verdana, Trebuchet MS">, </font></code><code>y = 2</code>

<strong>Output:</strong> 6
</pre>
