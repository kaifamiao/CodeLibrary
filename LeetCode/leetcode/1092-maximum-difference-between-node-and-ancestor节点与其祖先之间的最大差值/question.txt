maximum-difference-between-node-and-ancestor
给定二叉树的根节点<code>root</code>，找出存在于不同节点<code>A</code> 和<code>B</code>之间的最大值 <code>V</code>，其中<code>V = |A.val - B.val|</code>，且<code>A</code>是<code>B</code>的祖先。

（如果 A 的任何子节点之一为 B，或者 A 的任何子节点是 B 的祖先，那么我们认为 A 是 B 的祖先）



<strong>示例：</strong>

<img alt="" src="https://assets.leetcode-cn.com/aliyun-lc-upload/uploads/2019/04/12/2whqcep.jpg" style="height: 230px; width: 300px;">

<pre><strong>输入：</strong>[8,3,10,1,6,null,14,null,null,4,7,13]
<strong>输出：</strong>7
<strong>解释： </strong>
我们有大量的节点与其祖先的差值，其中一些如下：
|8 - 3| = 5
|3 - 7| = 4
|8 - 1| = 7
|10 - 13| = 3
在所有可能的差值中，最大值 7 由 |8 - 1| = 7 得出。
</pre>



<strong>提示：</strong>

<ol>
	树中的节点数在<code>2</code>到<code>5000</code>之间。
	每个节点的值介于<code>0</code>到<code>100000</code>之间。
</ol>

节点与其祖先之间的最大差值
Given the <code>root</code> of a binary tree, find the maximum value <code>V</code> for which there exists <strong>different</strong> nodes <code>A</code> and <code>B</code> where <code>V = |A.val - B.val|</code>and <code>A</code> is an ancestor of <code>B</code>.

(A node A is an ancestor of B if either: any child of A is equal to B, or any child of A is an ancestor of B.)



<strong>Example 1:</strong>

<img alt="" src="https://assets.leetcode.com/uploads/2019/09/09/2whqcep.jpg" style="height: 230px; width: 300px;" />

<pre>
<strong>Input: </strong><span id="example-input-1-1">[8,3,10,1,6,null,14,null,null,4,7,13]</span>
<strong>Output: </strong><span id="example-output-1">7</span>
<strong>Explanation: </strong>
We have various ancestor-node differences, some of which are given below :
|8 - 3| = 5
|3 - 7| = 4
|8 - 1| = 7
|10 - 13| = 3
Among all possible differences, the maximum value of 7 is obtained by |8 - 1| = 7.
</pre>



<strong>Note:</strong>

<ol>
	The number of nodes in the tree is between <code>2</code> and <code>5000</code>.
	Each node will have value between <code>0</code> and <code>100000</code>.
</ol>
