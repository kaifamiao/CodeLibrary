single-number
给定一个<strong>非空</strong>整数数组，除了某个元素只出现一次以外，其余每个元素均出现两次。找出那个只出现了一次的元素。

<strong>说明：</strong>

你的算法应该具有线性时间复杂度。 你可以不使用额外空间来实现吗？

<strong>示例 1:</strong>

<pre><strong>输入:</strong> [2,2,1]
<strong>输出:</strong> 1
</pre>

<strong>示例2:</strong>

<pre><strong>输入:</strong> [4,1,2,1,2]
<strong>输出:</strong> 4</pre>

只出现一次的数字
Given a <strong>non-empty</strong>array of integers, every element appears <em>twice</em> except for one. Find that single one.

<strong>Note:</strong>

Your algorithm should have a linear runtime complexity. Could you implement it without using extra memory?

<strong>Example 1:</strong>

<pre>
<strong>Input:</strong> [2,2,1]
<strong>Output:</strong> 1
</pre>

<strong>Example 2:</strong>

<pre>
<strong>Input:</strong> [4,1,2,1,2]
<strong>Output:</strong> 4
</pre>
