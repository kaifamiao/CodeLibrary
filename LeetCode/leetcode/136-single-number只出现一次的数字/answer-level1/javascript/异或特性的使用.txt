下面仿照大神的使用reduce方法,增加了一些文字描述

这里主要用了异或的2个特性，异或有1：交换律，和2： 0 ^ n => n
e.g 4^2^3^3^2 交换率后 2^2^3^3^4
js中数字的异或会转换为对应的2进制运算，不过这个中间过度计算我们可以不用考虑，不影响最后的结果。
所以，本题成对儿出现数字，进行交换率后，结果为0， 0 ^ 最后的一个数字n，结果为n,就是我们想要的值