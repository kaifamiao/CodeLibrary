### 53 最大子序列

这道题我一开始完全不会，所以直接看的答案，下面是我对答案的理解。

答案的一种解法是：
```java
public int maxSubArray (int[] nums) {
    int sum = 0;
    int ans = nums[0];
    for (int num: nums) {
        if (sum > 0)
            sum += num;
        else
            sum = num;
        ans = Math.max(sum, ans);
    }
    return ans;
}
```
首先是我们注意到`Math.max`函数的使用，意味着我们始终保存了最大值。

那么接下来的任务就是判断边界条件，不停的举出所有的情况。

这道题需要注意一下边界条件。

假设有一个子序列目前的和是正值，那么这个子序列尽管往后一个一个加，只要和不变成负的，那么这个子序列永远对后面的数是一个增量的作用。但一旦出现这个和变成负值，那么就可以直接抛弃这个子序列，从下一个数从新开始，重新开始计算子序列和。