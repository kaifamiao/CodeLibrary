### 解题思路
此处撰写解题思路
##### 1、判断x是否在其数值范围为 [−2^31,  2^31 − 1]范围内，不在返回0
##### 2、循环判断x是否大于0，然后除出10取余
    x除以10取余，x/10 取余，记录余数到y;记录x=/10的结果。上次余数进十(也就是乘10)加上这次余的个位数
    例如： x=1234     t=0
    //循环1
    y:= x%10    ->   y= 1234%10   ->  y=4
    x= x/10     ->   x= 1234/10   ->  x=123 //正数类型除以只能得正数
    t= t*10+y   ->   t= 0*10+4    ->  t=4
    //循环2
    y:= x%10    ->   y= 123%10    ->  y=3
    x= x/10     ->   x= 123/10    ->  x=12
    t= t*10+y   ->   t= 4*10+3    ->  t=43
    //循环3
    y:= x%10    ->   y= 12%10     ->  y=2
    x= x/10     ->   x= 12/10     ->  x=1 
    t= t*10+y   ->   t= 43*10+2   ->  t=432
    //循环4
    y:= x%10    ->   y= 1%10      ->  y=1
    x= x/10     ->   x= 1/10      ->  x=0 
    t= t*10+y   ->   t= 432*10+1  ->  t=4321
##### 3、反转后的t是否在其数值范围为 [−2^31,  2^31 − 1]范围内，不在返回0

### 代码

```golang
func reverse(x int) int {
    var t int
    for x!=0{
        y:= x % 10
        x /= 10
        t= t*10 + y
    }
    maxInt32 := 1<<31 - 1
	minInt32 := -1 << 31
    if minInt32>=x  ||  minInt32>=t || x>maxInt32 ||  t>maxInt32 {
        return 0
    }
    return t

}
```