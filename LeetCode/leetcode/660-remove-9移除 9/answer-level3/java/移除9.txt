#### 方法：数学

**想法**

让我们首先将需要的数字都写出来然后看是否需有规律。这些数字为：

```
1, 2, 3, 4, 5, 6, 7, 8,
10, 11, 12, 13, 14, 15, 16, 17, 18,
20, 21, 22, 23, 24, 25, 26, 27, 28,
...
80, 81, 82, 83, 84, 85, 86, 87, 88,
100, 101, 102, ...
```

这些数字看起来就是 9 进制数字！

确实，每个 9 进制数字都能对应这个序列中的一个数字，且这个序列中的每个数字都可以对应一个 9 进制数字。所有 9 进制数字和这个序列中的数字都是递增的，所以答案就是第 n 个 9 进制数字。

```Python []
class Solution(object):
    def newInteger(self, n):
        ans = ''
        while n:
            ans = str(n%9) + ans
            n /= 9
        return int(ans)
```

```Java []
class Solution {
    public int newInteger(int n) {
        return Integer.parseInt(Integer.toString(n, 9));
    }
}
```

**复杂度分析**

* 时间复杂度度：$O(1)$，因为 $N$ 最多有 9 位。

* 空间复杂度： $O(1)$。
