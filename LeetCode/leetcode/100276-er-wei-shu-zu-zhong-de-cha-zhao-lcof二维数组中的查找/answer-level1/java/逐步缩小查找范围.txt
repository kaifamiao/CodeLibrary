## 4.二维数组中的查找

### Information

* TIME: 2020/02/27
* LINK: [Click Here](https://leetcode-cn.com/problems/er-wei-shu-zu-zhong-de-cha-zhao-lcof/)
* TAG: 

### Description

> 在一个 n * m 的二维数组中，每一行都按照从左到右递增的顺序排序，每一列都按照从上到下递增的顺序排序。请完成一个函数，输入这样的一个二维数组和一个整数，判断数组中是否含有该整数。

### Example

```text
现有矩阵 matrix 如下：

[
  [1,   4,  7, 11, 15],
  [2,   5,  8, 12, 19],
  [3,   6,  9, 16, 22],
  [10, 13, 14, 17, 24],
  [18, 21, 23, 26, 30]
]
给定 target = 5，返回 true。

给定 target = 20，返回 false。
```

### My Answer

> 最基本的思想：**找到最后一行第一个元素小于target的行，向内找到第一个大于target的元素，该元素及它的左上子矩阵都是查找范围**
>
> `target > matrix[i][j]`，当前列肯定不存在`target`，向右查找
>
> `target < matrix[i][j]` 当前行都大于`target`,向上查找

```java
class Solution {
    public boolean findNumberIn2DArray(int[][] matrix, int target) {
        if(matrix == null || matrix.length == 0) return false;
        int row = matrix.length;
        int col = matrix[0].length;
        int i = row - 1;
        int j = 0;
        while(i >= 0 && j < col){
            if(target > matrix[i][j]){
                j++;
            }else if(target < matrix[i][j]){
                i--;
            }else{
                //equal
                return true;
            }
        }
        return false;
    }
}
```

### Extend & Reference

> 来源：力扣（LeetCode）
> 链接：https://leetcode-cn.com
> 著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。

### More

> **更多题解，请访问我的GitHub仓库：[LeetCode 刷题日记](https://github.com/ZhuoZhuoCrayon/my-Nodes/blob/master/Daily/README_2020.md)**
>
> ![alt](https://pic.leetcode-cn.com/f8f81971ebd38df6a86ae0860f8faa2f83020c796b00df34aeee262d83daeacd-file_1582779293032)
>
> [**更多笔记**](https://github.com/ZhuoZhuoCrayon/my-Nodes)：**`Vue` `Java SSM 框架` `阿里云服务器` `JavaScript/HTML/CSS`   `数据库` ...**
>
> **我的GitHub主页 -> [ZhuoZhuoCrayon](https://github.com/ZhuoZhuoCrayon)**
>
> 共勉~

