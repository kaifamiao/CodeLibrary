这题其实是取巧的题，思路是找到二进制中不变的高位即可，剩下的低位全是0。
比如4,5,6,7这四个数

```
100
101
110
111
```

最高位的1是一直不变的，低位从00变到了11，也就是说低位中每一位都经历过至少一个0。根据题目条件，每一位中只要出现过一个0，那么最终结果这个位上就一定是0。
所以，我们只需要找出不变的高位，那么剩下的低位就一定是0。


```
int rangeBitwiseAnd(int m, int n) {
    int  count=0;
    while(m!=n){
        m>>=1;
        n>>=1;
        count++;
    }
    return m<<count;
}
```
