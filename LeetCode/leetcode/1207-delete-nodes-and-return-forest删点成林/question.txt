delete-nodes-and-return-forest
给出二叉树的根节点<code>root</code>，树上每个节点都有一个不同的值。

如果节点值在<code>to_delete</code>中出现，我们就把该节点从树上删去，最后得到一个森林（一些不相交的树构成的集合）。

返回森林中的每棵树。你可以按任意顺序组织答案。



<strong>示例：</strong>

<strong><img alt="" src="https://assets.leetcode-cn.com/aliyun-lc-upload/uploads/2019/07/05/screen-shot-2019-07-01-at-53836-pm.png" style="height: 150px; width: 237px;"></strong>

<pre><strong>输入：</strong>root = [1,2,3,4,5,6,7], to_delete = [3,5]
<strong>输出：</strong>[[1,2,null,4],[6],[7]]
</pre>



<strong>提示：</strong>

<ul>
	树中的节点数最大为<code>1000</code>。
	每个节点都有一个介于<code>1</code> 到<code>1000</code>之间的值，且各不相同。
	<code>to_delete.length &lt;= 1000</code>
	<code>to_delete</code> 包含一些从<code>1</code> 到<code>1000</code>、各不相同的值。
</ul>

删点成林
Given the <code>root</code>of a binary tree, each node in the tree has a distinct value.

After deletingall nodes with a value in <code>to_delete</code>, we are left with a forest (adisjoint union of trees).

Return the roots of the trees in the remaining forest. You may return the result in any order.


<strong>Example 1:</strong>

<strong><img alt="" src="https://assets.leetcode.com/uploads/2019/07/01/screen-shot-2019-07-01-at-53836-pm.png" style="width: 237px; height: 150px;" /></strong>

<pre>
<strong>Input:</strong> root = [1,2,3,4,5,6,7], to_delete = [3,5]
<strong>Output:</strong> [[1,2,null,4],[6],[7]]
</pre>


<strong>Constraints:</strong>

<ul>
	The number of nodes in the given tree is at most <code>1000</code>.
	Each node has a distinct value between <code>1</code> and <code>1000</code>.
	<code>to_delete.length &lt;= 1000</code>
	<code>to_delete</code> contains distinct values between <code>1</code> and <code>1000</code>.
</ul>