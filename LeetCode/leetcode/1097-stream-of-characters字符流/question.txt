stream-of-characters
按下述要求实现 <code>StreamChecker</code> 类：

<ul>
	<code>StreamChecker(words)</code>：构造函数，用给定的字词初始化数据结构。
	<code>query(letter)</code>：如果存在某些 <code>k &gt;= 1</code>，可以用查询的最后 <code>k</code>个字符（按从旧到新顺序，包括刚刚查询的字母）拼写出给定字词表中的某一字词时，返回 <code>true</code>。否则，返回 <code>false</code>。
</ul>



<strong>示例：</strong>

<pre>StreamChecker streamChecker = new StreamChecker([&quot;cd&quot;,&quot;f&quot;,&quot;kl&quot;]); // 初始化字典
streamChecker.query(&#39;a&#39;);          // 返回 false
streamChecker.query(&#39;b&#39;);          // 返回 false
streamChecker.query(&#39;c&#39;);          // 返回 false
streamChecker.query(&#39;d&#39;);          // 返回 true，因为 &#39;cd&#39; 在字词表中
streamChecker.query(&#39;e&#39;);          // 返回 false
streamChecker.query(&#39;f&#39;);          // 返回 true，因为 &#39;f&#39; 在字词表中
streamChecker.query(&#39;g&#39;);          // 返回 false
streamChecker.query(&#39;h&#39;);          // 返回 false
streamChecker.query(&#39;i&#39;);          // 返回 false
streamChecker.query(&#39;j&#39;);          // 返回 false
streamChecker.query(&#39;k&#39;);          // 返回 false
streamChecker.query(&#39;l&#39;);          // 返回 true，因为 &#39;kl&#39; 在字词表中。</pre>



<strong>提示：</strong>

<ul>
	<code>1 &lt;= words.length &lt;= 2000</code>
	<code>1 &lt;= words[i].length &lt;= 2000</code>
	字词只包含小写英文字母。
	待查项只包含小写英文字母。
	待查项最多 40000 个。
</ul>

字符流
Implement the <code>StreamChecker</code> class as follows:

<ul>
	<code>StreamChecker(words)</code>: Constructor, init the data structure with the given words.
	<code>query(letter)</code>: returns true if and only if for some <code>k &gt;= 1</code>, the last <code>k</code>characters queried (in order from oldest to newest, including this letter just queried) spell one of the words in the given list.
</ul>



<strong>Example:</strong>

<pre>
StreamChecker streamChecker = new StreamChecker([&quot;cd&quot;,&quot;f&quot;,&quot;kl&quot;]); // init the dictionary.
streamChecker.query(&#39;a&#39;);          // return false
streamChecker.query(&#39;b&#39;);          // return false
streamChecker.query(&#39;c&#39;);          // return false
streamChecker.query(&#39;d&#39;);          // return true, because &#39;cd&#39; is in the wordlist
streamChecker.query(&#39;e&#39;);          // return false
streamChecker.query(&#39;f&#39;);          // return true, because &#39;f&#39; is in the wordlist
streamChecker.query(&#39;g&#39;);          // return false
streamChecker.query(&#39;h&#39;);          // return false
streamChecker.query(&#39;i&#39;);          // return false
streamChecker.query(&#39;j&#39;);          // return false
streamChecker.query(&#39;k&#39;);          // return false
streamChecker.query(&#39;l&#39;);          // return true, because &#39;kl&#39; is in the wordlist
</pre>



<strong>Note:</strong>

<ul>
	<code>1 &lt;= words.length &lt;= 2000</code>
	<code>1 &lt;= words[i].length &lt;= 2000</code>
	Words will only consist of lowercase English letters.
	Queries will only consist of lowercase English letters.
	The number of queries is at most40000.
</ul>
