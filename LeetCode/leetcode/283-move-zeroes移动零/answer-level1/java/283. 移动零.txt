题目要求:
    1. 写一个函数将所有 0 移动到数组的末尾
    1. 同时保持非零元素的相对顺序

题解中的数组特点: 
    1. 数字的元素为0 或不为0

解决方法：
  对非零的元素的处理
    1.使用一个全局变量j记录当前要被覆盖的元素的索引，当值为非零元素的时候，进行覆盖，并j++,由于因为有非零元素，j的可能会比i增长的慢一些
    ,即使数组中的元素全部为非零元素，j和i的值也是相等速度的增长
  对值为零的元素，
    1.由于求得前面非零元素个数，利用循环直接将数组后半部分赋值为0 即可

总结 
    遇到非零元素  先赋值 再j增加 进行下一次for循环(i++)
    遇到零元素   i自增  j不进行任何操作   
    由于有非零元素，每一次j都会滞后，指向要被覆盖的元素

```
class Solution {
    public void moveZeroes(int[] nums) {
        int j=0;
        for(int i=0;i<nums.length;i++){
          if(nums[i]!=0){
              nums[j]=nums[i];
              j++;
          }
        }
          for(int i=j;i<nums.length;i++){
          nums[i]=0;
        }

    }

}
```


 [0,1,0,3,12]
第一次  遇到0  不处理  j指向数组第一个元素0  =>  [0,1,0,3,12]        进行下一次循环
第二次  遇到1          j指向的第一个0 进行赋值后 => [1,1,0,3,12]     j自增，j指向数组第二个元素1
第三次  遇到0  不处理  j指向数组第二个元素1  =>  [1,1,0,3,12]        进行下一次循环
第四次  遇到3         j指向数组第二个元素1  =>[1,3,0,3,12]  j自增，j指向数组第三个元素0
第五次  遇到12        j指向的数组第三个元素0 => [1,3,12,3,12]   j自增，j指向数组第四个元素3

此时的j指向的数组的第四个元素 将该元素以及数组后边的元素赋值为0





