### 解题思路
快排的核心思想是找第一个中间枢纽,作为分割,将左右两边以枢纽值分隔开.
用i记录非零元素的正确位置,然后通过遍历j和i指向位置的元素互换
来达到排序的目的.
### 代码

```c
 void moveZeroes(int* nums, int numsSize){
    if(numsSize == 0) 
    {
        return;
    }
    // 定义一个指向前面位置的标记元素
    int i = 0;
    // 注意j也是从0开始查找的
    for(int j = 0; j < numsSize; ++j) 
    {
        // 如果j位置元素不为0,那么就将j位置的元素向i位置移动
        if(nums[j] != 0) 
        {   
            // 因为循环中后置位有语句 i++ 
            // 此时i应该指向正常顺序的后一位
            // 记录此时后一位的值保存为临时变量
            int temp = nums[i];
            // 记录 i 位置的值重新赋值为 j 上的非0值
            nums[i] = nums[j];
            nums[j] = temp;
            // 完成换位之后,需要将 i 重新指向正确的位置
            ++i;
        }
    }

}

```