先上代码：
```
void moveZeroes(int* nums, int numsSize){
    int zn = 0;//记录零的数量。
    int*p = nums;//用于记录慢指针位置。
    int i = 0;
    for(;i<numsSize;i++)
        zn+=((nums[i] == 0)||!(*(p++) = nums[i]));
    while(zn--)
        *(p++)=0;
}
```
思路是这样的，慢指针 p 从0开始，将快指针检测到的非零元素前置，然后慢指针向前移动；快指针遍历完整个数组后，此时所有的非零元素已经按照原本顺序前置了，剩下的就是将数组剩下位置补零了。

PS：我觉得我这个补零可以优化一下，但现在脑壳卡起了想不出来，望告知。