单词之间以空格相隔，但是麻烦的是字符串的两端可能有空格，这样s就有四种情况：
1. 字符串左端有空格，右端没有空格，如"  Hello,  world!"，即字符串以空格开始，以单词结束。
2. 字符串左端没有空格，右端有空格，如"Hello,  world!  "，即字符串以单词开始，以空格结束。
3. 字符串左端有空格，右端也有空格，如"  Hello,  world!  "，即字符串以空格开始，以空格结束。
4. 字符串左端无空格，右端也无空格，如"Hello,  world!"，即字符串以单词开始，以单词结束。

嗯，我觉得算法题吧，最好不要使用库函数啦！
惭愧地是，我第一次做的时候就是使用的库函数，len(s.split(' '))。
看到有同学在字符串左右两端添加空格的做法，应该是想把这四种情况都统一成情况3，再处理。
其实可以不这么做的。

我们可以指定一种分割单词的标准，比如：
1. 当前字符不为空格，且前一字符为空格，这时情况2（单词作为字符串的开始）作为一种特殊情况单独考虑。
2. 当前字符不为空格，且后一字符为空格，这时情况1（单词作为字符串的结束）作为一种特殊情况单独考虑。

其中情况4是情况2和情况3的特殊情况！

下面的代码，用的就是标准1的解法。
```python
class Solution:
    def countSegments(self, s: str) -> int:
        slen = len(s)
        nw = 0
        for i in range(slen):
            if (i == 0 and s[i] != ' ') or (s[i] != ' ' and s[i-1] == ' '):
                nw += 1
        return nw
