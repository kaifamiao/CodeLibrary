用dp与from分别记录最小值与对应的最小路径
代码如下：
```
class Solution1 {
public:
    const int INF = 100000000;
    vector<int> cheapestJump(vector<int>& A, int B) {
        int N = A.size();
        vector<int> dp(N, INF);
        vector<vector<int> > from(N);
        dp[0] = A[0];
        from[0] = {1};
        for (int i = 1; i < N; ++i) {
            if (A[i] == -1) continue;
            for (int j = 1; j <= min(i, B); ++j) {
                if (A[i - j] == -1) continue;
                if (dp[i - j] + A[i] < dp[i]) {
                    dp[i] = dp[i - j] + A[i];
                    from[i] = from[i - j];
                    from[i].push_back(i + 1);
                } else if (dp[i - j] + A[i] == dp[i]) {
                    auto t = from[i - j];
                    t.push_back(i + 1);
                    if (t < from[i]) from[i] = t;
                }
            }
        }
        if (dp[N - 1] == INF) return {};
        return from[N - 1];
    }
};
```
![image.png](https://pic.leetcode-cn.com/e722fc493810ca7862eb3b5794f6b2d014b1844b58ab53fd79fa209a7b076d81-image.png)
