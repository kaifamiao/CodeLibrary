### 解题思路

本题解运算的时间为948ms，主要是有三层循环，时间复杂度较大，但这也是我第一时间想到的解题方法。本题解虽耗时比较长，但我写完代码后立马提交也立马通过啦！这一点还是值得鼓励的，毕竟我还是新手。

本代码代码通俗易懂，适合新手参考，后面我还会改进算法。
下面对代码简单的讲解

第一个for循环为大循环，第二个循环判断第一个循环中的元素的下一个元素及整个数组是否等于第一个循环中的元素，等于就做相关的操作及将数组后面的元素整体移动如此重复。且每相等一次count--，因为等于该元素的第二个for循环中的元素被覆盖啦！又数组整体元素向左移动，故count--

### 代码

```c
int removeDuplicates(int* nums, int numsSize){
    int i,j,k;
    int count=numsSize;
    for(i=0;i<count;i++)
    {
        for(j=i+1;j<count;j++)
        {
            if(nums[j]==nums[i])
            {
                k=j;
                while(k<count-1)
                {
                    nums[k]=nums[k+1];
                    k++;
                }
                count--;
                j--;
            }
        }
    }
    return count;
}
```
有什么不懂的也可以私聊我！谢谢！大家相互进步！