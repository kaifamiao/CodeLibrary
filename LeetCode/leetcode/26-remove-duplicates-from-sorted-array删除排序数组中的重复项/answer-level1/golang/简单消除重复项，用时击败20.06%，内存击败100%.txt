### 解题思路
这是一个简单的消除重项题目，思路如下：
1. 首先重点是已经排好序的数组，即重复项必定是相邻的2个或多个，不会散乱分布
2. 这样的话只需要一次循环最多循环n-1（n为元素个数）次，如果有重复循环更少
3. 从头开始循环比对相邻的元素是否相同，相同则删除一个并且循环下标-1
4. 题目还有个重点是，必须在原数组上操作不能有新建数组（根据题目的个人理解），因此有以下代码
5. 如果是最后一位了，则不需要比较直接跳出循环，因为最后一个元素肯定在前一个元素已经比较过了

### 代码

```golang
func removeDuplicates(nums []int) int {
    for i := 0; i < len(nums); i++ {
		if i + 1 >= len(nums) {
			break
		}

		if nums[i] == nums[i + 1] {
			nums = append(nums[:i], nums[i+1:]...)
			i--
		}
	}
	return len(nums)
}
```