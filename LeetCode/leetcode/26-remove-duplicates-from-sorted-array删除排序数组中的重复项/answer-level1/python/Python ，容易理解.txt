### 解题思路
小白第一次发解题思路，大家多多包涵，也不知道我这个是什么方法，好像就是按逻辑解题😄。
1. 想象一个按顺序排列的数组，有些数字有重复，大体逻辑是从左往右一个个去比对，我们用i来跟踪当前的判断位置。
2. 从0开始，每次用第 i 个数跟第 i+1 个数比较，如果相同，表明这是个重复的数，因此我们将第 i 个数移出数组，移出第 i 个数以后，后面的数会都往前移一位，所以我们不用变索引 i，继续从 i 开始判断。
3. 只有当第 i 个数与第 i+1 个数不同的时候，说明第 i 个数这个数字已经没有重复的了，因此我们将索引 i+1，继续判断下面一个新的数字。

以下是代码，用时52ms, 击败85.62%。内存消耗13MB，击败100%。
### 代码

```python
class Solution(object):
    def removeDuplicates(self, nums):
        i = 0
        #遍历数组的每个数
        while(i != len(nums)):
            if i==len(nums)-1:      #考虑到最后一位数  
                return len(nums)
            if nums[i] == nums[i+1]: #比较当前位跟后一位是否相同
                nums.pop(i)          #相同的话将当前位移出
            else:                    #不同的话将i+1，开始比较下一位数
                i += 1
        return len(nums)             #循环结束后return nums的长度
```