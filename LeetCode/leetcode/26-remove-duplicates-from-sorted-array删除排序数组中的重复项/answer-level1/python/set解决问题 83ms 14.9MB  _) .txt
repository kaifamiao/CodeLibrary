### 解题思路
看到题目就想到set这个东西，自动排序加上删除重复元素。可惜set会生成一个元组，而非列表。在试了几遍之后，发现系统在判断输出的时候似乎是截取了它提供的输入列表的指定位数，而清空列表或者用新的数据去覆盖列表似乎都会让系统判定这已经不是原来的那个列表，所以我就想了个方法绕开了这个设定--就是先把元组中的元素添加到列表尾端，再把前端多余的元素删除即可。这个方法虽然会牺牲内存，因为需要一个变量和一个新的列表，变量用于储存添加元素前的列表长度（删除多余元素是需要），列表则用于元组的转化（元组内部默认将负值置于正值后方，不符合题意），但却能够有效地提升程序的执行速度。:)

### 代码

```python3
class Solution:
    def removeDuplicates(self, nums: List[int]) -> int:
        j=len(nums)
        k=list(set(nums))
        k.sort()
        for i in k:
            nums.append(i)
        del nums[0:j]
        return len(nums)
```