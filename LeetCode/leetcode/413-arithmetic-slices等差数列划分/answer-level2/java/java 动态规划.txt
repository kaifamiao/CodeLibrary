### 解题思路
根据题目意思，如果数组A是一个等差数组，不难得出
当A有 3个元素最大子数组数为1,4个元素最大子数组为3,5个元素最大子数组数6，6个元素时最大子数组为10
归纳：i个元素为 dp[i]=dp[i-1]+i-2;  //注意：此时下标i是从1开始
那如果A 不是连续的等差数列呢？
比如 1,2,3,4,6,7 显然按照上面的解答不行
我们可以 将A分解为连续的小段和不连续的小段，不连续的情况下 dp[i]=dp[i-1];
做到这里我们发现还有这种情况  A中有多个等差数列的时候,我们可以记录当前最新的连续数组起始位来重复前面的步骤
dp[i]=dp[i-1]+i-2-start; //注意：此时下标i是从1开始
-
### 代码

```java
class Solution {
    public int numberOfArithmeticSlices(int[] A) {
        //元素少于3不构成等差数列
         if(A.length<3){
             return 0;
         }
         //记录最新的等差数列的起始位置
         int start=0,n=A[1]-A[0];
         //dp[i]:当前的最大等差子数组数
         int[] dp = new int [A.length];
         dp[0]=0;
         dp[1]=0;
         for(int i=2;i<A.length;i++){
             //判断当前元素是否符合等差数列要求
             //①判断n是否相等
             //②如果是新的等差数列判断元素个数是否满足大于等于3
             if(n==A[i]-A[i-1]&&(i-start)>=2){
                 dp[i]=dp[i-1]+i-1-start;  //下标从0开始
             }else{
                 dp[i]=dp[i-1];
                 n=A[i]-A[i-1];
                 start=i-1;
             }
         }
         return dp[A.length-1];
    }
}
```