![image.png](https://pic.leetcode-cn.com/a27e5694301afa749d36d3de749b4e54e339679b9f55c7aa931de01be96c4abc-image.png)

模拟长除还是挺恶心的
```
class Solution:
    def fractionToDecimal(self, a: int, b: int) -> str:
        if a%b==0:return str(a//b)#整除
        
        if a*b>0:t=''#处理符号
        elif a*b<0:t='-'
        else:return '0'
        a=abs(a)
        b=abs(b)
        
        c=str(a//b)#整数部分
        
        d=a%b
        z={}#余数字典
        s=''#小数部分
        k=0#小数位置计数
        flag=False#循环小数标记
        
        while True:
            d*=10#长除补0
            if d not in z:
                z[d]=k#记录第一次出现该余数的位置
                k+=1
            else:#余数重复了
                flag=True
                break
            i=d//b
            d%=b
            s+=str(i)
            if d==0:#除尽
                break
                
        if flag:#出现循环时
            s=s[:z[d]]+'('+s[z[d]:]+')'#以重复余数为界分离小数部分
        
        return t+c+'.'+s
```
