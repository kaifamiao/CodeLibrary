## 前言

如果您觉得我的题解尚可，欢迎给我一个赞和一个星星表情

这个题还是我大一面我们学校一个团队的时候一个学长给我出过，真是怀念

## 代码

```python 
class Solution:
    def rand10(self):
        """
        :rtype: int
        """
        num = (rand7() - 1) * 7 + rand7()
        while num > 40:
            num = (rand7() - 1) * 7 + rand7()
        return 1 + (num - 1) % 10
```

## 解释

这个问题有两个形式：

- rand 大数生成小数
- rand 小数生成大数

### 第一种

譬如 rand10得到rand7

思路很简单，如果得到8-10，就继续调用，直到处于1-7为止

但是遇到 rand50得到rand7 呢？

做个取余就好1-49 映射到 1-7很容易，50就继续循环调用

你会发现这个题目的核心就是 **等概率映射，映射不到的就继续调用**

### 第二种

小数生成大数，核心也是一样，等概率映射

我们自然而然就会想到，乘以一个数试试

譬如 rand7得到rand10

把7乘以2,得到14，不就大于10了吗？Ok搞定！！

等等，你会发现，1-14这个范围是有问题的，1根本不会出现！

而像 5，有多重出现方式 1+4，2+3

也就是说，我们的数没有等概率出现。

我们最好是让每个数，只能有且一种组合方式出现

rand7 + (rand7 - 1) * 7

1-10，11-20，21-30，31-40

都是等概率出现的，每个数只能有且一种组合方式出现

这个是怎么想到的呢，核心在于**不能这个数不能有多种组合（加法）**

**每个函数都是一个骰子**

每投一次，那就是加上一个1-7，那么我不能让数可以溢出（必须保持得到方式唯一），那我就以7为一个层的容量！

你会发现，这就是一个7进制！！

进一个 1就对应一个新数，因为这个7位数，1-7就代表一个数，进一位 1 (也就是7) ，就是对于另外一个数




