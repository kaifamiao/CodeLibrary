closest-leaf-in-a-binary-tree
给定一个 <strong>每个结点的值互不相同</strong>的二叉树，和一个目标值 <code>k</code>，找出树中与目标值 <code>k</code> 最近的叶结点。

这里，与叶结点 <em>最近 </em>表示在二叉树中到达该叶节点需要行进的边数与到达其它叶结点相比最少。而且，当一个结点没有孩子结点时称其为叶结点。

在下面的例子中，输入的树以逐行的平铺形式表示。实际上的有根树 <code>root</code> 将以TreeNode对象的形式给出。

<strong>示例 1：</strong>

<pre><strong>输入：</strong>
root = [1, 3, 2], k = 1
二叉树图示：
          1
         / \
        3   2

<strong>输出：</strong> 2 (或 3)

<strong>解释：</strong> 2 和 3 都是距离目标 1 最近的叶节点。
</pre>



<strong>示例 2：</strong>

<pre><strong>输入：</strong>
root = [1], k = 1
<strong>输出：</strong>1

<strong>解释：</strong> 最近的叶节点是根结点自身。
</pre>



<strong>示例 3：</strong>

<pre><strong>输入：</strong>
root = [1,2,3,4,null,null,null,5,null,6], k = 2
二叉树图示：
             1
            / \
           2   3
          /
         4
        /
       5
      /
     6

<strong>输出：</strong>3
<strong>解释：</strong> 值为 3（而不是值为 6）的叶节点是距离结点 2 的最近结点。
</pre>



<strong>注：</strong>

<ol>
	<code>root</code>表示的二叉树最少有<code>1</code> 个结点且最多有<code>1000</code> 个结点。
	每个结点都有一个唯一的<code>node.val</code>，范围为<code>[1, 1000]</code>。
	给定的二叉树中有某个结点使得<code>node.val == k</code>。
</ol>



二叉树最近的叶节点
Given a binary tree <b>where every node has a unique value</b>, and a target key <code>k</code>, find the value of the nearest leaf node to target <code>k</code> in the tree.

Here, <i>nearest</i> to a leaf means the least number of edges travelled on the binary tree to reach any leaf of the tree.  Also, a node is called a <i>leaf</i> if it has no children.

In the following examples, the input tree is represented in flattened form row by row.
The actual <code>root</code> tree given will be a TreeNode object.

<b>Example 1:</b>
<pre>
<b>Input:</b>
root = [1, 3, 2], k = 1
Diagram of binary tree:
          1
         / \
        3   2

<b>Output:</b> 2 (or 3)

<b>Explanation:</b> Either 2 or 3 is the nearest leaf node to the target of 1.
</pre>

<b>Example 2:</b>
<pre>
<b>Input:</b>
root = [1], k = 1
<b>Output:</b> 1

<b>Explanation:</b> The nearest leaf node is the root node itself.
</pre>



<b>Example 3:</b>
<pre>
<b>Input:</b>
root = [1,2,3,4,null,null,null,5,null,6], k = 2
Diagram of binary tree:
             1
            / \
           2   3
          /
         4
        /
       5
      /
     6

<b>Output:</b> 3
<b>Explanation:</b> The leaf node with value 3 (and not the leaf node with value 6) is nearest to the node with value 2.
</pre>


<b>Note:</b><br>
<ol>
<code>root</code> represents a binary tree with at least <code>1</code> node and at most <code>1000</code> nodes.
Every node has a unique <code>node.val</code> in range <code>[1, 1000]</code>.
There exists some node in the given binary tree for which <code>node.val == k</code>.
</ol>
