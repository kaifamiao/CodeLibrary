employee-free-time
给定员工的 <code>schedule</code> 列表，表示每个员工的工作时间。

每个员工都有一个非重叠的时间段 <code>Intervals</code> 列表，这些时间段已经排好序。

返回表示 <em>所有 </em>员工的 <strong>共同，正数长度的空闲时间 </strong>的有限时间段的列表，同样需要排好序。

<strong>示例 1：</strong>

<pre><strong>输入：</strong>schedule = [[[1,2],[5,6]],[[1,3]],[[4,10]]]
<strong>输出：</strong>[[3,4]]
<strong>解释：</strong>
共有 3 个员工，并且所有共同的
空间时间段是 [-inf, 1], [3, 4], [10, inf]。
我们去除所有包含 inf 的时间段，因为它们不是有限的时间段。
</pre>



<strong>示例 2：</strong>

<pre><strong>输入：</strong>schedule = [[[1,3],[6,7]],[[2,4]],[[2,5],[9,12]]]
<strong>输出：</strong>[[5,6],[7,9]]
</pre>



（尽管我们用 <code>[x, y]</code> 的形式表示 <code>Intervals</code> ，内部的对象是 <code>Intervals</code> 而不是列表或数组。例如，<code>schedule[0][0].start = 1, schedule[0][0].end = 2</code>，并且 <code>schedule[0][0][0]</code>是未定义的）

而且，答案中不包含 [5, 5] ，因为长度为 0。



<strong>注：</strong>

<ol>
	<code>schedule</code> 和<code>schedule[i]</code>为长度范围在<code>[1, 50]</code>的列表。
	<code>0 &lt;= schedule[i].start &lt; schedule[i].end &lt;= 10^8</code>。
</ol>

<strong>注：</strong>输入类型于2019 年4 月 15 日 改变。请重置为默认代码的定义以获取新方法。



员工空闲时间
We are given a list <code>schedule</code> of employees, which represents the working time for each employee.

Each employee has a list of non-overlapping <code>Intervals</code>, and these intervals are in sorted order.

Return the list of finite intervals representing <b>common, positive-length free time</b> for <i>all</i> employees, also in sorted order.

(Even though we are representing <code>Intervals</code> in the form <code>[x, y]</code>, the objects inside are <code>Intervals</code>, not lists or arrays. For example, <code>schedule[0][0].start = 1</code>, <code>schedule[0][0].end = 2</code>, and <code>schedule[0][0][0]</code> is not defined). Also, we wouldn&#39;t include intervals like [5, 5] in our answer, as they have zero length.


<strong>Example 1:</strong>

<pre>
<strong>Input:</strong> schedule = [[[1,2],[5,6]],[[1,3]],[[4,10]]]
<strong>Output:</strong> [[3,4]]
<strong>Explanation:</strong> There are a total of three employees, and all common
free time intervals would be [-inf, 1], [3, 4], [10, inf].
We discard any intervals that contain inf as they aren&#39;t finite.
</pre>

<strong>Example 2:</strong>

<pre>
<strong>Input:</strong> schedule = [[[1,3],[6,7]],[[2,4]],[[2,5],[9,12]]]
<strong>Output:</strong> [[5,6],[7,9]]
</pre>


<strong>Constraints:</strong>

<ul>
	<code>1 &lt;= schedule.length , schedule[i].length &lt;= 50</code>
	<code>0 &lt;= schedule[i].start &lt; schedule[i].end &lt;= 10^8</code>
</ul>
