insufficient-nodes-in-root-to-leaf-paths
给定一棵二叉树的根 <code>root</code>，请你考虑它所有<strong>从根到叶的路径</strong>：从根到任何叶的路径。（所谓一个叶子节点，就是一个没有子节点的节点）

假如通过节点 <code>node</code> 的每种可能的 &ldquo;根-叶&rdquo; 路径上值的总和全都小于给定的 <code>limit</code>，则该节点被称之为「不足节点」，需要被删除。

请你删除所有不足节点，并返回生成的二叉树的根。



<strong>示例 1：</strong>

<pre><strong><img alt="" src="https://assets.leetcode-cn.com/aliyun-lc-upload/uploads/2019/06/08/insufficient-1.png" style="height: 200px; width: 482px;">
输入：</strong>root = [1,2,3,4,-99,-99,7,8,9,-99,-99,12,13,-99,14], limit = 1
<strong><img alt="" src="https://assets.leetcode-cn.com/aliyun-lc-upload/uploads/2019/06/08/insufficient-2.png" style="height: 200px; width: 258px;">
输出：</strong>[1,2,3,4,null,null,7,8,9,null,14]
</pre>

<strong>示例 2：</strong>

<pre><strong><img alt="" src="https://assets.leetcode-cn.com/aliyun-lc-upload/uploads/2019/06/08/insufficient-3.png" style="height: 200px; width: 292px;">
输入：</strong>root = [5,4,8,11,null,17,4,7,1,null,null,5,3], limit = 22
<strong><img alt="" src="https://assets.leetcode-cn.com/aliyun-lc-upload/uploads/2019/06/08/insufficient-4.png" style="height: 200px; width: 264px;">
输出：</strong>[5,4,8,11,null,17,4,7,null,null,null,5]</pre>

<strong>示例 3：</strong>

<pre><strong><img alt="" src="https://assets.leetcode-cn.com/aliyun-lc-upload/uploads/2019/06/08/insufficient-5.png" style="height: 100px; width: 140px;">
输入：</strong>root = [5,-6,-6], limit = 0<strong>
输出：</strong>[]</pre>



<strong>提示：</strong>

<ol>
	给定的树有<code>1</code>到<code>5000</code>个节点
	<code>-10^5&lt;= node.val &lt;= 10^5</code>
	<code>-10^9 &lt;= limit&lt;= 10^9</code>
</ol>



根到叶路径上的不足节点
Given the <code>root</code>of a binary tree, consider all <em>root to leaf paths</em>: paths from the rootto any leaf. (A leaf is a node with no children.)

A <code>node</code> is <em>insufficient</em> if<strong>every</strong> such root to leaf path intersecting this <code>node</code> has sum strictly less than<code>limit</code>.

Delete all insufficient nodes simultaneously, and return the root of the resultingbinary tree.



<strong>Example 1:</strong>

<pre>
<strong><img alt="" src="https://assets.leetcode.com/uploads/2019/06/05/insufficient-11.png" style="width: 482px; height: 200px;" />
Input: </strong>root = <span id="example-input-1-1">[1,2,3,4,-99,-99,7,8,9,-99,-99,12,13,-99,14]</span>, limit = <span id="example-input-1-2">1</span>
<strong><img alt="" src="https://assets.leetcode.com/uploads/2019/06/05/insufficient-2.png" style="width: 258px; height: 200px;" />
Output: </strong><span id="example-output-1">[1,2,3,4,null,null,7,8,9,null,14]</span>
</pre>

<div>
<strong>Example 2:</strong>

<pre>
<strong><img alt="" src="https://assets.leetcode.com/uploads/2019/06/05/insufficient-3.png" style="width: 292px; height: 200px;" />
Input: </strong>root = <span id="example-input-2-1">[5,4,8,11,null,17,4,7,1,null,null,5,3]</span>, limit = <span id="example-input-2-2">22</span>
<strong><img alt="" src="https://assets.leetcode.com/uploads/2019/06/05/insufficient-4.png" style="width: 264px; height: 200px;" />
Output: </strong><span id="example-output-2">[5,4,8,11,null,17,4,7,null,null,null,5]</span></pre>



<strong>Example 3:</strong>

<pre>
<strong><img alt="" src="https://assets.leetcode.com/uploads/2019/06/11/screen-shot-2019-06-11-at-83301-pm.png" style="width: 188px; height: 150px;" />
Input: </strong>root = <span>[1,2,-3,-5,null,4,null]</span>, limit = -1
<img alt="" src="https://assets.leetcode.com/uploads/2019/06/11/screen-shot-2019-06-11-at-83517-pm.png" style="width: 122px; height: 150px;" /><strong>
Output: </strong><span>[1,null,-3,4]</span></pre>
</div>



<strong>Note:</strong>

<ol>
	The given tree will have between <code>1</code> and <code>5000</code> nodes.
	<code>-10^5&lt;= node.val &lt;= 10^5</code>
	<code>-10^9 &lt;= limit&lt;= 10^9</code>
</ol>

<div>
<div></div>
</div>
