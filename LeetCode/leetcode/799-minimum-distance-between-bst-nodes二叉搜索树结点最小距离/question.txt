minimum-distance-between-bst-nodes
给定一个二叉搜索树的根结点<code>root</code>，返回树中任意两节点的差的最小值。



<strong>示例：</strong>

<pre><strong>输入:</strong> root = [4,2,6,1,3,null,null]
<strong>输出:</strong> 1
<strong>解释:</strong>
注意，root是树结点对象(TreeNode object)，而不是数组。

给定的树 [4,2,6,1,3,null,null] 可表示为下图:

          4
        /   \
      2      6
     / \    
    1   3  

最小的差值是 1, 它是节点1和节点2的差值, 也是节点3和节点2的差值。</pre>



<strong>注意：</strong>

<ol>
	二叉树的大小范围在 <code>2</code> 到<code>100</code>。
	二叉树总是有效的，每个节点的值都是整数，且不重复。
	本题与 530：<a href="https://leetcode-cn.com/problems/minimum-absolute-difference-in-bst/">https://leetcode-cn.com/problems/minimum-absolute-difference-in-bst/</a> 相同
</ol>

二叉搜索树结点最小距离
Given a Binary Search Tree (BST) with the root node <code>root</code>, returnthe minimum difference between the values of any two different nodes in the tree.

<strong>Example :</strong>

<pre>
<strong>Input:</strong> root = [4,2,6,1,3,null,null]
<strong>Output:</strong> 1
<strong>Explanation:</strong>
Note that root is a TreeNode object, not an array.

The given tree [4,2,6,1,3,null,null] is represented by the following diagram:

          4
        /   \
      2      6
     / \    
    1   3  

while the minimum difference in this tree is 1, it occurs between node 1 and node 2, also between node 3 and node 2.
</pre>

<strong>Note:</strong>

<ol>
	The size of the BST will be between 2 and<code>100</code>.
	The BST is always valid, each node&#39;s value is an integer, and each node&#39;s value is different.
	This question is the same as 530:<a href="https://leetcode.com/problems/minimum-absolute-difference-in-bst/">https://leetcode.com/problems/minimum-absolute-difference-in-bst/</a>
</ol>
