smallest-string-starting-from-leaf
给定一颗根结点为<code>root</code>的二叉树，树中的每一个结点都有一个从<code>0</code> 到<code>25</code>的值，分别代表字母<code>&#39;a&#39;</code> 到<code>&#39;z&#39;</code>：值<code>0</code> 代表<code>&#39;a&#39;</code>，值<code>1</code>代表<code>&#39;b&#39;</code>，依此类推。

找出按字典序最小的字符串，该字符串从这棵树的一个叶结点开始，到根结点结束。

<em>（小贴士：字符串中任何较短的前缀在字典序上都是较小的：例如，在字典序上<code>&quot;ab&quot;</code> 比<code>&quot;aba&quot;</code>要小。叶结点是指没有子结点的结点。）</em>



<ol>
</ol>

<strong>示例 1：</strong>

<strong><img alt="" src="https://assets.leetcode-cn.com/aliyun-lc-upload/uploads/2019/02/02/tree1.png" style="height: 107px; width: 160px;"></strong>

<pre><strong>输入：</strong>[0,1,2,3,4,3,4]
<strong>输出：</strong>&quot;dba&quot;
</pre>

<strong>示例 2：</strong>

<strong><img alt="" src="https://assets.leetcode-cn.com/aliyun-lc-upload/uploads/2019/02/02/tree2.png" style="height: 107px; width: 160px;"></strong>

<pre><strong>输入：</strong>[25,1,3,1,3,0,2]
<strong>输出：</strong>&quot;adz&quot;
</pre>

<strong>示例 3：</strong>

<strong><img alt="" src="https://assets.leetcode-cn.com/aliyun-lc-upload/uploads/2019/02/02/tree3.png" style="height: 180px; width: 172px;"></strong>

<pre><strong>输入：</strong>[2,2,1,null,1,0,null,0]
<strong>输出：</strong>&quot;abc&quot;
</pre>



<strong>提示：</strong>

<ol>
	给定树的结点数介于<code>1</code> 和<code>8500</code>之间。
	树中的每个结点都有一个介于<code>0</code>和<code>25</code>之间的值。
</ol>

从叶结点开始的最小字符串
Given the <code>root</code> of a binary tree, each node has a value from <code>0</code> to <code>25</code> representing the letters <code>&#39;a&#39;</code> to <code>&#39;z&#39;</code>: a value of <code>0</code> represents <code>&#39;a&#39;</code>, a value of <code>1</code> represents <code>&#39;b&#39;</code>, and so on.

Find the lexicographically smallest string that starts at a leaf of this tree and ends at the root.

<em>(As a reminder, any shorter prefix of a string is lexicographically smaller: for example, <code>&quot;ab&quot;</code> is lexicographically smaller than <code>&quot;aba&quot;</code>. A leaf of a node is a node that has no children.)</em>

<div>
<div>


<ol>
</ol>
</div>
</div>

<div>
<strong>Example 1:</strong>

<strong><img alt="" src="https://assets.leetcode.com/uploads/2019/01/30/tree1.png" style="width: 160px; height: 107px;" /></strong>

<pre>
<strong>Input: </strong><span id="example-input-1-1">[0,1,2,3,4,3,4]</span>
<strong>Output: </strong><span id="example-output-1">&quot;dba&quot;</span>
</pre>

<div>
<strong>Example 2:</strong>

<strong><img alt="" src="https://assets.leetcode.com/uploads/2019/01/30/tree2.png" style="width: 160px; height: 107px;" /></strong>

<pre>
<strong>Input: </strong><span id="example-input-2-1">[25,1,3,1,3,0,2]</span>
<strong>Output: </strong><span id="example-output-2">&quot;adz&quot;</span>
</pre>

<div>
<strong>Example 3:</strong>

<strong><img alt="" src="https://assets.leetcode.com/uploads/2019/02/01/tree3.png" style="height: 170px; width: 172px;" /></strong>

<pre>
<strong>Input: </strong><span id="example-input-3-1">[2,2,1,null,1,0,null,0]</span>
<strong>Output: </strong><span id="example-output-3">&quot;abc&quot;</span>
</pre>



<strong>Note:</strong>

<ol>
	The number of nodes in the given tree will be between <code>1</code> and <code>8500</code>.
	Each node in the tree will have a value between <code>0</code> and <code>25</code>.
</ol>
</div>
</div>
</div>