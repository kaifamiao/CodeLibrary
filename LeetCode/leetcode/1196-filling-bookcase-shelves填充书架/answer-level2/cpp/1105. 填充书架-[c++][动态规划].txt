记第 $i$ 本书的高度为 $h_i$，宽度为 $w_i$，当第 $i$ 本书排在书架某一层第一个位置的时候，第 $i$ 本到最后一本书形成的最小高度为 $dp_i$. 递推公式为：
$$
dp_i = min\{max(h_i)+dp_{i+1},max(h_i,h_{i+1})+dp_{i+2},...,max(h_i,...,h_j)+dp_{j+1}\}
\\ s.t.\sum_{k=i}^{j}{w_k}<=shelf
\_width
$$

思路的含义非常简单，就是不断的把第 $i$ 本书后面的书拿到和 $i$ 本书同层的位置（如果这一层放的下的话），计算这种情况下 $dp_i$ 形成的高度。

```cpp [-c++]
int minHeightShelves(vector<vector<int>>& books, int shelf_width) {
    vector<int> dp(books.size() + 1, INT_MAX);
    dp[books.size()] = 0;
    for (int i = books.size() - 1; i >= 0; --i) {
        int max_book_height = 0;
        int left_width = shelf_width;
        // 把第 j 本书拿到第 i 本书后面
        for (int j = i; j < books.size() && left_width >= books[j][0]; ++j) {
            max_book_height = max(max_book_height, books[j][1]);
            dp[i] = min(dp[i], max_book_height + dp[j+1]);
            left_width -= books[j][0];
        }
    }
    return dp[0];
}
```
