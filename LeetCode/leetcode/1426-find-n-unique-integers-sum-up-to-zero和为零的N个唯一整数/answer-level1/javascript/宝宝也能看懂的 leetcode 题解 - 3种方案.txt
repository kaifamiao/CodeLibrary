# 1304. 和为零的N个唯一整数

Hi 大家好，我是张小猪。欢迎来到『宝宝也能看懂』系列之 leetcode 周赛题解。

这里是第 169 期的第 1 题，也是题目列表中的第 1304 题 -- 『和为零的N个唯一整数』

## 题目描述

给你一个整数 `n`，请你返回 **任意** 一个由 `n` 个 **各不相同** 的整数组成的数组，并且这 `n` 个数相加和为 `0`。

示例 1：

```shell
输入：n = 5
输出：[-7,-1,1,3,4]
解释：这些数组也是正确的 [-5,-1,1,2,3]，[-3,-1,2,-2,4]。
```

示例 2：

```shell
输入：n = 3
输出：[-1,0,1]
```

示例 3：

```shell
输入：n = 1
输出：[0]
```

提示：

- `1 <= n <= 1000`

## 官方难度

EASY

## 解决思路

题目内容很简单，返回一个符合要求的数组即可，要求包含几点：

- 长度是 `n`
- 不能有重复的数字
- 所有数字和为 0

看完要求之后，我第一反应就是，一正一负不就正好是 0 咯。

### 直接方案

基于以上思路，我们可以得到一个直接的解题方案。需要注意的是，对于奇数来说，再额外补充一个 0 即可。

我这里的代码额外做了一点小优化，即通过一个定长的数组来避免数组自动伸缩带来的开销。

```js
const sumZero = n => {
  const ret = new Int16Array(n);
  for (let i = 1; i <= Math.floor(n / 2); ++i) {
    ret[i - 1] = i;
    ret[n - i] = -i;
  }
  return ret;
};
```

### 换个思路

我们回看一下题目的限制条件，`n` 的取值范围是 `[1,1000]`，全部加在一起求和是 500500，是一个安全的 int32 整数。于是一个方案孕育而生，我们直接添加 `n - 1` 个连续的数字，然后把它们求和的负数放进去即可。

```js
const sumZero = n => {
  const ret = new Int32Array(n);
  for (let i = 1; i < n; ++i) {
    ret[i] = i;
  }
  ret[0] = -((1 + n) * n / 2 - n);
  return ret;
};
```

### 再换个思路

我们尝试写几组可能的解来看看：

```shell
n = 1, [0]
n = 2, [-1, 1]
n = 3, [-2, 0, 2]
n = 4, [-3, -1, 1, 3]
n = 5, [-4, -2, 0, 2, 4]
```

有没有觉得这是一个很熟悉的数组，反正我是印象在大学 C++ 教材里有题目要求输出这个数组，哈哈哈哈。

对于这个数组，我们尝试找一下规律应该就能发现，每个数字其实是符合这个公式的：

```shell
ret[i] = i * 2 - n + 1;
```

有了公式那么就直接写进代码即可。

```js
const sumZero = n => {
  const ret = new Int16Array(n);
  for (let i = 0; i < n; ++i) {
    ret[i] = i * 2 - n + 1;
  }
  return ret;
};
```

## 总结

第 169 期周赛的第一题，想得到 Accepted 是很简单的。所以这里尝试给出了几种不同的思路方向。当然我相信大家还会有更有意思的思路。>.<

## 相关链接

- [Weekly Contest 169 题目列表](https://github.com/poppinlp/leetcode#weekly-contest-169)
- [系列题解 repo](https://github.com/poppinlp/leetcode)
- [我的 segmentfault 专栏](https://segmentfault.com/blog/zxzfbz)
- [我的知乎专栏](https://zhuanlan.zhihu.com/zxzfbz)

![qrcode_green.jpeg](https://pic.leetcode-cn.com/f09ca2cdd008861947e1b4cda266c8d82e8d78c35674274b29b9d60b9546fae3-qrcode_green.jpeg)
