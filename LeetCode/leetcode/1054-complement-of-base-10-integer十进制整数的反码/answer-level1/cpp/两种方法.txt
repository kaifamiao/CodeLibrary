方法1： 异或运算法

```
class Solution {
public:
    int bitwiseComplement(int N) {
        
        if(N==0)
            return 1;
        
        int temp1 = 1;
        int temp2 = N;
        
        while(temp2>0){//不停用temp1对原整数进行异或运算，每次运算结束后将temp1朝左移动1位
            
            N ^= temp1;
            temp1 = temp1 << 1;
            temp2 = temp2 >> 1;
        }

        
        return N;
    }
};
```


方法2： 高位差值法

方法2是看评论学会的，很巧妙～

```
class Solution {
public:
    int bitwiseComplement(int N) {
        
        int temp = 2;
        
        while(temp<=N){
            
            temp = temp << 1;
        }
        
        return temp - N - 1;
        
    }
};
```

