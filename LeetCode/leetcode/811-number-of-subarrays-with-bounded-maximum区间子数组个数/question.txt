number-of-subarrays-with-bounded-maximum
给定一个元素都是正整数的数组<code>A</code>，正整数 <code>L</code>以及<code>R</code>(<code>L &lt;= R</code>)。

求连续、非空且其中最大元素满足大于等于<code>L</code>小于等于<code>R</code>的子数组个数。

<pre><strong>例如 :</strong>
<strong>输入:</strong> 
A = [2, 1, 4, 3]
L = 2
R = 3
<strong>输出:</strong> 3
<strong>解释:</strong> 满足条件的子数组: [2], [2, 1], [3].
</pre>

<strong>注意:</strong>

<ul>
	L, R 和<code>A[i]</code> 都是整数，范围在<code>[0, 10^9]</code>。
	数组<code>A</code>的长度范围在<code>[1, 50000]</code>。
</ul>

区间子数组个数
We are given an array <code>A</code> of positive integers, and two positive integers <code>L</code> and <code>R</code> (<code>L &lt;= R</code>).

Return the number of (contiguous, non-empty) subarrays such that the value of the maximum array element in that subarray is at least <code>L</code> and at most <code>R</code>.

<pre>
<strong>Example :</strong>
<strong>Input:</strong> 
A = [2, 1, 4, 3]
L = 2
R = 3
<strong>Output:</strong> 3
<strong>Explanation:</strong> There are three subarrays that meet the requirements: [2], [2, 1], [3].
</pre>

<strong>Note:</strong>

<ul>
	L, R and <code>A[i]</code> will be an integer in the range <code>[0, 10^9]</code>.
	The length of <code>A</code> will be in the range of <code>[1, 50000]</code>.
</ul>
