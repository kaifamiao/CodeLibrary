这道题是一个典型的背包问题，当前正整数n的结果对应于n去掉一个完全平方数之后的子问题结果加一，但是去掉哪一个完全平方数才能达到最佳结果呢，这就需要我们自己去进行一个遍历，然后取最小的值即可。

动态规划递推公式如下：
```
dp[i] = min(dp[i], dp[i-j*j]+1)
```
全部代码如下：
```
dp = [i for i in range(n+1)]
for i in range(1, n+1):
    j = 1
    while i-j*j >= 0:
        dp[i] = min(dp[i], dp[i-j*j]+1)
        j += 1
return dp[n]
```

