### 解题思路
这道题在剑指上的解法使用了C++的一些语言特性，比如构造函数、虚函数等，但是现在主要用Python没有这些特征，而且我又想能不能通过位运算得到答案也没有想出来，我更以为这道题没法用Python做，结果看到了题解中一位大哥的代码。

最开始我是用C和C++的，对于基础的掌握还是比较熟练，对于与运算&&也是基础中的一个小重点，转战Python的时候也没有想过太多，但是刚看到下面这行代码的时候，我第一反应就是逻辑表达式返回的难道不是True或者False吗？或者说难道不是1或者0吗？跑了一下程序确实能够输出正确答案，那么做了一些小实验发现Python中的与运算并不像C和C++中那样，Python（2或3）的与运算的返回值是这样的：
（1）如果多个变量均非0（包括None、False等），那么返回最后一个变量的值。如`3 and 2 and 'a'`的返回值为`'a'`；
（2）如果多个变量中存在0值，则返回第一个0值。如`1 and 'a' and 0 and None`的返回值为0。

细节决定成败，与君共勉。

### 代码

```python
class Solution(object):
    def sumNums(self, n):
        """
        :type n: int
        :rtype: int
        """
        def get_res(n):
            return n and n + get_res(n - 1)
        return get_res(n)
```