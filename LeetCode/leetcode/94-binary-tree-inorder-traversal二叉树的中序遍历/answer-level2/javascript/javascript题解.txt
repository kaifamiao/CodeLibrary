[94.二叉树的层序遍历](https://leetcode-cn.com/problems/binary-tree-inorder-traversal/submissions/)   

[力扣 JS 题解。](https://github.com/GuYueJiaJie/blog/blob/master/%E7%AE%97%E6%B3%95%E4%B8%8E%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/README.md)  

二叉树的遍历应该是基础中的基础。

## 方法一

递归。

```javascript
/**
 * Definition for a binary tree node.
 * function TreeNode(val) {
 *     this.val = val;
 *     this.left = this.right = null;
 * }
 */
/**
 * @param {TreeNode} root
 * @return {number[]}
 */
var inorderTraversal = function(root) {
    let res = [];
    help(root, res);
    return res
};

function help(root, res) {
    if (root !== null) {
        help(root.left, res);
        res.push(root.val);
        help(root.right, res);
    }
}
```

## 方法二   

非递归

```javascript
/**
 * Definition for a binary tree node.
 * function TreeNode(val) {
 *     this.val = val;
 *     this.left = this.right = null;
 * }
 */
/**
 * @param {TreeNode} root
 * @return {number[]}
 */
var inorderTraversal = function(root) {
    let res = [];
    let node = root;
    let stack = [];
    while (stack.length > 0 || node !== null) {
        if (node) {
            stack.push(node);
            node = node.left
        } else {
            node = stack.pop();
            res.push(node.val);
            node = node.right;
        }
    }
    return res;
};
```