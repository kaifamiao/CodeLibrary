### 解题思路
此处撰写解题思路

### 代码

```java
class Solution {
   public int minMalwareSpread(int[][] graph, int[] initial) {
        if(initial==null || initial.length==0)
            return 0;
        if(initial.length==1)
            return initial[0];
        int minIndex = Integer.MIN_VALUE;
        int maxValue = Integer.MIN_VALUE;
        for(int i=0; i<initial.length; i++){
            int current = sparedCount(graph, initial[i]);
            if(current != 0){
                if(maxValue <= current){
                    if(maxValue == current)
                        minIndex = Math.min(minIndex, initial[i]);
                    else
                        minIndex = initial[i];
                    maxValue = current;
                }
            }
            //System.out.println(initial[i]+" "+current);
        }
        return minIndex==Integer.MIN_VALUE?0:minIndex;
    }

    private int sparedCount(int[][] graph, int p) {
        int sum = 0;
        int[] visited = new int[graph.length];
        Queue<Integer> queue = new LinkedList<>();
        queue.add(p);
        visited[p] = 1;
        while(!queue.isEmpty()){
            int cur = queue.poll();
            for(int i=0; i<graph[0].length; i++){
                if(p!=i && graph[cur][i] == 1 && visited[i]==0){
                    sum++;
                    queue.add(i);
                    visited[i] = 1;
                }
            }
        }
        return sum;
    }
}
```