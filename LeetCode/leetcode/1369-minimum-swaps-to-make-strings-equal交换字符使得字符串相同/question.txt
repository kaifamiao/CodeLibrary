minimum-swaps-to-make-strings-equal
有两个长度相同的字符串<code>s1</code> 和<code>s2</code>，且它们其中<strong>只含有</strong>字符<code>&quot;x&quot;</code> 和<code>&quot;y&quot;</code>，你需要通过「交换字符」的方式使这两个字符串相同。

每次「交换字符」的时候，你都可以在两个字符串中各选一个字符进行交换。

交换只能发生在两个不同的字符串之间，绝对不能发生在同一个字符串内部。也就是说，我们可以交换<code>s1[i]</code> 和<code>s2[j]</code>，但不能交换<code>s1[i]</code> 和<code>s1[j]</code>。

最后，请你返回使 <code>s1</code> 和 <code>s2</code> 相同的最小交换次数，如果没有方法能够使得这两个字符串相同，则返回<code>-1</code> 。



<strong>示例 1：</strong>

<pre><strong>输入：</strong>s1 = &quot;xx&quot;, s2 = &quot;yy&quot;
<strong>输出：</strong>1
<strong>解释：
</strong>交换 s1[0] 和 s2[1]，得到 s1 = &quot;yx&quot;，s2 = &quot;yx&quot;。</pre>

<strong>示例 2：</strong>

<pre><strong>输入：</strong>s1 = &quot;xy&quot;, s2 = &quot;yx&quot;
<strong>输出：</strong>2
<strong>解释：
</strong>交换 s1[0] 和 s2[0]，得到 s1 = &quot;yy&quot;，s2 = &quot;xx&quot; 。
交换 s1[0] 和 s2[1]，得到 s1 = &quot;xy&quot;，s2 = &quot;xy&quot; 。
注意，你不能交换 s1[0] 和 s1[1] 使得 s1 变成 &quot;yx&quot;，因为我们只能交换属于两个不同字符串的字符。</pre>

<strong>示例 3：</strong>

<pre><strong>输入：</strong>s1 = &quot;xx&quot;, s2 = &quot;xy&quot;
<strong>输出：</strong>-1
</pre>

<strong>示例 4：</strong>

<pre><strong>输入：</strong>s1 = &quot;xxyyxyxyxx&quot;, s2 = &quot;xyyxyxxxyx&quot;
<strong>输出：</strong>4
</pre>



<strong>提示：</strong>

<ul>
	<code>1 &lt;= s1.length, s2.length &lt;= 1000</code>
	<code>s1, s2</code>只包含<code>&#39;x&#39;</code>或<code>&#39;y&#39;</code>。
</ul>

交换字符使得字符串相同
You are given two strings<code>s1</code>and<code>s2</code>of equal lengthconsisting of letters <code>&quot;x&quot;</code> and <code>&quot;y&quot;</code> <strong>only</strong>. Your task is tomake these two strings equal to each other. You can swap any two characters that belong to <strong>different</strong> strings,which means: swap <code>s1[i]</code> and <code>s2[j]</code>.

Returnthe minimum number of swaps requiredto make<code>s1</code>and <code>s2</code> equal, or return<code>-1</code>if it isimpossible to do so.


<strong>Example 1:</strong>

<pre>
<strong>Input:</strong> s1 = &quot;xx&quot;, s2 = &quot;yy&quot;
<strong>Output:</strong> 1
<strong>Explanation: 
</strong>Swap s1[0] and s2[1], s1 = &quot;yx&quot;, s2 = &quot;yx&quot;.</pre>

<strong>Example 2:</strong>

<pre>
<strong>Input:</strong> s1 = &quot;xy&quot;, s2 = &quot;yx&quot;
<strong>Output:</strong> 2
<strong>Explanation: 
</strong>Swap s1[0] and s2[0], s1 = &quot;yy&quot;, s2 = &quot;xx&quot;.
Swap s1[0] and s2[1], s1 = &quot;xy&quot;, s2 = &quot;xy&quot;.
Note that you can&#39;t swap s1[0] and s1[1] to make s1 equal to &quot;yx&quot;, cause we can only swap chars in different strings.</pre>

<strong>Example 3:</strong>

<pre>
<strong>Input:</strong> s1 = &quot;xx&quot;, s2 = &quot;xy&quot;
<strong>Output:</strong> -1
</pre>

<strong>Example 4:</strong>

<pre>
<strong>Input:</strong> s1 = &quot;xxyyxyxyxx&quot;, s2 = &quot;xyyxyxxxyx&quot;
<strong>Output:</strong> 4
</pre>


<strong>Constraints:</strong>

<ul>
	<code>1 &lt;= s1.length, s2.length &lt;= 1000</code>
	<code>s1, s2</code>only contain <code>&#39;x&#39;</code> or <code>&#39;y&#39;</code>.
</ul>
