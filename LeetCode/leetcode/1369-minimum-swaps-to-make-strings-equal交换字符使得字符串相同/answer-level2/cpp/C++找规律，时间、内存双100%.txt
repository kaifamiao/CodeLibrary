这次周赛的第一题，如同往常一样是个找规律的问题。首先分析一下可能出现的情况：
    1两个字符串x或者y的和为奇数，那么一定没解。
    2xx,yy型。xx ,yy 不是简单的xx,yy而是*x*x*,*y*y*他是可以在任意位置的。这种只需一次交换。
    3xy,yx型，和2一样他也是可以在任意位置的。这种需要两次交换。
    4两字串同位置相同，这种当它不存在就行了。
    但是出现两次3，其实就是两个2，也就是说3最多只会出现一次。将2的数目/2加上3的数目乘2即可。
那么其实我们只要获得第一组'X'的次数N1，'Y'的次数M1，第二组'X'的次数N2，'Y'的次数M2. 即可获得2和3的数目。看代码：
class Solution {
public:
    int minimumSwap(string s1, string s2) {
        int n1=0;
        int n2=0;
        int m1=0;
        int m2=0;
        for(int i=0;i<s1.size();i++)
        {
            if(s1[i]=='x'&&s1[i]!=s2[i])
            {
                n1++;
            }
             if(s1[i]=='y'&&s1[i]!=s2[i])
            {
                m1++;
            }
             if(s2[i]=='x'&&s1[i]!=s2[i])
            {
                n2++;
            }
             if(s2[i]=='y'&&s1[i]!=s2[i])
            {
                m2++;
            }
           
        }
        if((n1+n2)%2==1||(m1+m2)%2==1)
        {
            return -1;
        }
        int cha=n1%2;
        int res=n1/2+n2/2+cha*2;
        return res;
    }
};
图片无法上传，时间4MS，内存8.5MB都是100%击败。第一次写题解，蜜汁感觉我写的最好理解。