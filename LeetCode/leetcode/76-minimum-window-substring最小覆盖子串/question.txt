minimum-window-substring
给你一个字符串 S、一个字符串 T，请在字符串 S 里面找出：包含 T 所有字母的最小子串。

<strong>示例：</strong>

<pre><strong>输入: S</strong> = &quot;ADOBECODEBANC&quot;, <strong>T</strong> = &quot;ABC&quot;
<strong>输出:</strong> &quot;BANC&quot;</pre>

<strong>说明：</strong>

<ul>
	如果 S 中不存这样的子串，则返回空字符串 <code>&quot;&quot;</code>。
	如果 S 中存在这样的子串，我们保证它是唯一的答案。
</ul>

最小覆盖子串
Given a string S and a string T, find the minimum window in S which will contain all the characters in T in complexity O(n).

<strong>Example:</strong>

<pre>
<strong>Input: S</strong> = &quot;ADOBECODEBANC&quot;, <strong>T</strong> = &quot;ABC&quot;
<strong>Output:</strong> &quot;BANC&quot;
</pre>

<strong>Note:</strong>

<ul>
	If there is no such window in S that covers all characters in T, return the empty string <code>&quot;&quot;</code>.
	If there is such window, you are guaranteed that there will always be only one unique minimum window in S.
</ul>
