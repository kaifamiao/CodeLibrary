```javascript []
var minDepth = function (root) {
    if (root == null) {
        return 0
    }
    if (root.left == null && root.right != null) {
        return minDepth(root.right) + 1
    }
    if (root.right == null && root.left != null) {
        return minDepth(root.left) + 1
    }
    let left = minDepth(root.left)
    let right = minDepth(root.right)
    return Math.min(left, right) + 1
};


/**
 * 解题思路：
 * 
 * 1. 最小深度是指根节点到叶子节点之间为null的节点
 * 2. 为了计算空，我们需要排除非空的节点
 * 3. 如果左树为空，我们深层遍历计算右树
 * 4. 如果右树为空，我们深层遍历计算左树
 * 5. 直到两树都为空的情况下，我们去两树的最小值 + 1
 */
```
