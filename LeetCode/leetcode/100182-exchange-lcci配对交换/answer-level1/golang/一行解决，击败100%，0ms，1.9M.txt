### 解题思路
1.num右移一位，相当于将奇位放到偶位上，然后和偶位掩码相与，只保留新的偶位（如果先和奇掩码相与再移位的话，最左边那一位可能会出问题）；   
2.num左移一位，然后和奇位掩码相与，得到把偶位放到奇位上的结果；   
3.然后两个结果相或即可。   

### 代码

```golang
func exchangeBits(num int) int {
    // num右移一位，相当于将奇位放到偶位上，然后和偶位掩码相与，只保留新的偶位（如果先和奇掩码相与再移位的话，最左边那一位可能会出问题）
    // num左移一位，然后和奇位掩码相与，得到把偶位放到奇位上的结果
    // 然后两个结果相或即可
    return (num>>1 & 0x55555555) | (num<<1 & 0xaaaaaaaa)
}
```