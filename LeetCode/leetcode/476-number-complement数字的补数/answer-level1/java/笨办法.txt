这道题我的思路比较笨吧，思路大体就是取出每一位，然后将其取反后转化为对应的十进制数字，然后求和，返回结果，这里举一个例子，例如对于5，我的程序的逻辑就是

```
5(101)
第一步，取出1将其取反为0，然后乘以2^0
将5向右移一位
5(10)
第二次，取出0，将其取反为1，然后乘以2^1
将5向右移一位
5(1)
第三次，取出1，将其取反为0，乘以2^2
再将这个数字向右移一位，数字变为0，跳出循环
最后返回这三次的和就是最后的结果
```
```
class Solution {
    public int findComplement(int num) {
        //设置一个b用来表示2对应位数的指数
        int b=0;
        //设置res保存结果
    	int res=0;
        //表示当前的这一位取反后的结果
    	int x=0;
        while(num!=0){
            //首先获得当前的这一位的取反后的二进制数字
            x=((num&1)^1)*(1<<b);
            //将num的二进制数向右移一位
            num>>=1;
            //将2的指数维护一下
            b++;
            //res加上当前的这一位转化为10进制的结果
            res+=x;
        }
        return res;
    }
}
```

