### 解题思路
此处撰写解题思路
这道题将原数二进制表示中的1变为0变为1即可，可以使用异或位运算来完成。 异或运算相同为0，不同为1。 例如：10101^11111 = 01010 所以这题可以将N与比他大的二进制所有位都为1的数进行异或运算，即为结果。 所以先求这个比N大且所有位都为1的数。 通过<<左移运算符来计算，<<1等于乘以2，二进制中等于在原数后加一个0。 1 << 1 = 10 + 1 = 11 11 << 1 = 110 +1 = 111 ...... 求的大于N且每位都为1的数，与N异或即可。
### 代码

```cpp
class Solution {
public:
    int findComplement(int num) {
        int n=1;
        while(n<num)
        {
            n=(n<<1)+1;
        }
        return num^n;
    }
};
```