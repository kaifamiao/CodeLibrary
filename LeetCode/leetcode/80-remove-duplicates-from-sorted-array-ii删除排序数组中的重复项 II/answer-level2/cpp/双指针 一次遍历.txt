使用两个指针
pre指向一种数字可以出现的最后位置，i用来遍历
这样理解：一开始pre=0,表示在0的位置这个数字当前最后出现的位置是0，如果在1的位置是不同的数，pre就可以向前，表示是在位置1处的数字最后可以出现的位置  
但比如数组[1,1,0]那么1可以出现的最后位置是索引1，第二个位置处  
但是在数组[1,1,1,1,1,0]中，代表1可以出现的最后的位置就是索引1，再往后的1就是不符合要求不该出现的，可以直接重写掉的  
而遍历的两一个指针i就是向后，直到找到了这里的0，此时pre=1表示第一个数字出现了两遍，最后出现在索引1处，那么i此时位置上出现了新的数字，所以pre++，在索引2处可以写入新的数字0，此时的pre=2表示的是数字0出现的合理的索引位置  
希望我说明白了
这里每个数字可以出现2次，用一个count来记录同一个数字出现了几次  
代码如下
```
int removeDuplicates(vector<int>& nums) {
		if (nums.size() <= 0)
			return 0;
		int ans = 1;
		int count = 1;
		int pre = 0;
		for (int i = 1; i < nums.size(); i++) {
			if (nums[i] == nums[pre] && count<2) { //同一个数字第二次出现
				count++;
				pre++;
				nums[pre] = nums[i];
				ans++;
			}
			else if (nums[i] != nums[pre]) {  //出现不同的数字
				count = 1;
				pre++;
				nums[pre] = nums[i]; //覆盖重写
				ans++;
			}
		}
		return ans;
	}
```


