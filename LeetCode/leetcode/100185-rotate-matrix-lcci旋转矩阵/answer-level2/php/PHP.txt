### 解题思路
此处撰写解题思路
由于本题有进阶的要求，所以直接按照此要求进行解题，题中要求空间复杂度为O(1),其实也就暗示了本题只能按照交换的思路来处理；
解题思路也就需要从数学的方式入手，找到本题的规律，再进行编码；
由于是旋转90度，结合我们生活中经常进行照片旋转的经历，从图像角度来看是每个边都旋转90度，再到本题中的数组，其实就是每个点进行90的旋转，按照一个正方形来看，顺时针旋转
我的思路是两层循环，第一层循环按照从外到内的相当于遍历；第二场循环从顺时针旋转，相当于交换位置。上下左右四个方向转一圈进行交换。
### 代码

```php
class Solution {

    /**
     * @param Integer[][] $matrix
     * @return NULL
     */
    function rotate(&$matrix) {
        //[3,0]-[2,1]
        //[2,0]-[1,1]
        //外层循环，[N,0]-[N--,$j++](i<=j)
        //swap[3,0]-[0,0]-[0,3]-[3,3]-[3,0]
        //[2,0]-[0,1]-[1,3]-[3,2]-[2,0]
        //[1,0]-[0,2]-[2,3]-[3,1]-[1,0]
        //[$i--,$j] ($i,$j++) ($i++, $i) ($i, $j--)
        //[2,1]-[1,1]-[1,2]-[2,2]-[2,1]
        
        $i = $n = count($matrix) - 1;
        $j = 0;
        while ($i >= $j) {
            $x = $i;
            $y = $j;
            //记录起始x,y位置
            for ($x = $i; $x > $j; $x --) {
                //四个位置的交换
                $tmp = $matrix[$x][$y];
                $matrix[$x][$y] = $matrix[$i][$x];
                $matrix[$i][$x] = $matrix[$n - $x][$i];
                $matrix[$n - $x][$i] = $matrix[$j][$n - $x];
                $matrix[$j][$n - $x] = $tmp;
            }

            $i --;
            $j ++;
        }
    }
}
```