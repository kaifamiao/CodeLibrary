## 56-I.数组中数字出现的次数

### Information

* TIME: 2020/02/23
* LINK: [Click Here](https://leetcode-cn.com/problems/shu-zu-zhong-shu-zi-chu-xian-de-ci-shu-lcof/)
* TAG: `bit`

### Description

> 一个整型数组 `nums` 里除两个数字之外，其他数字都出现了两次。请写程序找出这两个只出现一次的数字。要求时间复杂度是O(n)，空间复杂度是O(1)。

### Example

```text
输入：nums = [4,1,4,6]
```

> 输出：[1,6] 或 [6,1]

### My Answer

> 有两个数出现了一次，其他数都是出现2次
>
> 根据异或运算同数相消为0的性质
>
> 对于该序列，累异或结果不为0
>
> 得出累异或结果，然后从右往左找出第一个`1`，1代表两个不同的数它们之间的**最低不同位**
>
> 然后根据这个不同位对序列进行划分，分别求累异或
>
> * **因为其他数都是成对出现，也会被成对抵消为0**
> * 所以每个分类剩下的结果，就是那两个只出现一次的数

```java
class Solution {
    public int[] singleNumbers(int[] nums) {
        int[] res = new int[2];
        int common = 1;
        int sum = 0;
        for(int num : nums){
            sum ^= num;
        }
        while((common & sum) == 0){
            common <<= 1;
        }
        for(int num : nums){
            if((num & common) == 0){
                res[0] ^= num;
            }else{
                res[1] ^= num;
            }
        }
        return res;
    }
}
```

### Extend & Reference

> 来源：力扣（LeetCode）
> 链接：https://leetcode-cn.com
> 著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。

### More

> **更多题解，请访问我的GitHub仓库：[LeetCode 刷题日记](https://github.com/ZhuoZhuoCrayon/my-Nodes/blob/master/Daily/README_2020.md)**
>
> ![alt](https://pic.leetcode-cn.com/3c16b6e4f3cd6b34fe07f8420bfd1855e926e1f2169d74eb0d494550096484e1-file_1582444623640)
>
> [**更多笔记**](https://github.com/ZhuoZhuoCrayon/my-Nodes)：**`Vue` `Java SSM 框架` `阿里云服务器` `JavaScript/HTML/CSS`   `数据库` ...**
>
> **我的GitHub主页 -> [ZhuoZhuoCrayon](https://github.com/ZhuoZhuoCrayon)**
>
> 共勉~

