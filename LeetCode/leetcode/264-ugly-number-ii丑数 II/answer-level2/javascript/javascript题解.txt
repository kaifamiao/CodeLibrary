[264.丑数二](https://leetcode-cn.com/problems/ugly-number-ii/submissions/)

[力扣 JS 题解。](https://github.com/GuYueJiaJie/blog/blob/master/%E7%AE%97%E6%B3%95%E4%B8%8E%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/README.md) 


## 动态规划(三指针)

```javascript
/**
 * @param {number} n
 * @return {number}
 */
var nthUglyNumber = function(n) {
    let i2 = 0,
        i3 = 0,
        i5 = 0;
    
    let dp = [1];
    for (let i = 1; i < n; i++) {
        let min = Math.min(dp[i2] * 2, dp[i3] * 3, dp[i5] * 5);
        if (min === dp[i2] * 2) i2++;
        if (min === dp[i3] * 3) i3++;
        if (min === dp[i5] * 5) i5++;
        dp.push(min);
    }
    return dp[n-1];
};
```