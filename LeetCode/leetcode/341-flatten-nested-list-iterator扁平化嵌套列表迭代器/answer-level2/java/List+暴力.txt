### 解题思路
1.将数字全部读取出来存入list中
2.然后进行判断取出

### 代码

```java
/**
 * // This is the interface that allows for creating nested lists.
 * // You should not implement it, or speculate about its implementation
 * public interface NestedInteger {
 *
 *     // @return true if this NestedInteger holds a single integer, rather than a nested list.
 *     public boolean isInteger();
 *
 *     // @return the single integer that this NestedInteger holds, if it holds a single integer
 *     // Return null if this NestedInteger holds a nested list
 *     public Integer getInteger();
 *
 *     // @return the nested list that this NestedInteger holds, if it holds a nested list
 *     // Return null if this NestedInteger holds a single integer
 *     public List<NestedInteger> getList();
 * }
 */
public class NestedIterator implements Iterator<Integer> {
    private List<NestedInteger> nestedIntegerList;
    private List<Integer> list = new ArrayList<>();
    private int index;
    public NestedIterator(List<NestedInteger> nestedList) {
        this.nestedIntegerList = nestedList;
        list = this.integerIterator(nestedIntegerList);
        index = -1;
    }

    @Override
    public Integer next() {
        if (this.hasNext()) return list.get(++index);
        return null;
    }

    @Override
    public boolean hasNext() {
        if (index+1 < list.size()) return true;
        return false;
    }

    public List<Integer> integerIterator(List<NestedInteger> nestedIntegerList){
        ArrayList<Integer> list = new ArrayList<>();
        for (NestedInteger temp:nestedIntegerList){
            if (temp.isInteger()){
                list.add(temp.getInteger());
            }else {
                list.addAll(integerIterator(temp.getList()));
            }
        }
        return list;
    }
}

/**
 * Your NestedIterator object will be instantiated and called as such:
 * NestedIterator i = new NestedIterator(nestedList);
 * while (i.hasNext()) v[f()] = i.next();
 */
```