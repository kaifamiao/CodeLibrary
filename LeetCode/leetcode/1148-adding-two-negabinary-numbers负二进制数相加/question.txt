adding-two-negabinary-numbers
给出基数为 <strong>-2</strong>的两个数<code>arr1</code> 和<code>arr2</code>，返回两数相加的结果。

数字以<strong>数组形式</strong>给出：数组由若干 0 和 1 组成，按最高有效位到最低有效位的顺序排列。例如，<code>arr= [1,1,0,1]</code>表示数字<code>(-2)^3+ (-2)^2 + (-2)^0 = -3</code>。<strong>数组形式</strong>的数字也同样不含前导零：以 <code>arr</code> 为例，这意味着要么<code>arr == [0]</code>，要么<code>arr[0] == 1</code>。

返回相同表示形式的 <code>arr1</code> 和 <code>arr2</code> 相加的结果。两数的表示形式为：不含前导零、由若干 0 和 1 组成的数组。



<strong>示例：</strong>

<pre><strong>输入：</strong>arr1 = [1,1,1,1,1], arr2 = [1,0,1]
<strong>输出：</strong>[1,0,0,0,0]
<strong>解释：</strong>arr1 表示 11，arr2 表示 5，输出表示 16 。
</pre>



<strong>提示：</strong>

<ol>
	<code>1 &lt;= arr1.length &lt;= 1000</code>
	<code>1 &lt;= arr2.length &lt;= 1000</code>
	<code>arr1</code> 和<code>arr2</code>都不含前导零
	<code>arr1[i]</code> 为<code>0</code>或<code>1</code>
	<code>arr2[i]</code>为<code>0</code> 或<code>1</code>
</ol>

负二进制数相加
Given two numbers <code>arr1</code> and <code>arr2</code> in base <strong>-2</strong>, return the result of adding them together.

Each number is given in <em>array format</em>: as an array of 0s and 1s, from most significant bit to least significant bit. For example, <code>arr = [1,1,0,1]</code> represents the number <code>(-2)^3+ (-2)^2 + (-2)^0 = -3</code>. A number <code>arr</code> in <em>array format</em> is also guaranteed to have no leading zeros: either<code>arr == [0]</code> or <code>arr[0] == 1</code>.

Return the result of adding <code>arr1</code> and <code>arr2</code> in the same format: as an array of 0s and 1s with no leading zeros.



<strong>Example 1:</strong>

<pre>
<strong>Input: </strong>arr1 = <span id="example-input-1-1">[1,1,1,1,1]</span>, arr2 = <span id="example-input-1-2">[1,0,1]</span>
<strong>Output: </strong><span id="example-output-1">[1,0,0,0,0]
</span><strong>Explanation: </strong>arr1 represents 11, arr2 represents 5, the output represents 16.
</pre>



<strong>Note:</strong>

<ol>
	<code>1 &lt;= arr1.length &lt;= 1000</code>
	<code>1 &lt;= arr2.length &lt;= 1000</code>
	<code>arr1</code> and <code>arr2</code> have no leading zeros
	<code>arr1[i]</code> is <code>0</code> or <code>1</code>
	<code>arr2[i]</code> is <code>0</code> or <code>1</code>
</ol>
