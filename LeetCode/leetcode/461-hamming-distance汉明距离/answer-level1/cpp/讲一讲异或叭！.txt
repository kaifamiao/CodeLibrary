> 如果用的是C++，可以直接使用标准库里的bitset<32>。但是自己手写一个也很好。

异或：两个输入不同时为1，相同里时为0，即：

input A | input B | output
:-:     |   :-:   |   :-:
0 | 0 | 0
0 | 1 | 1
1 | 0 | 1
1 | 1 | 0

异或可以用作「不等于」，即 `if(a ^ b)` 等价于 `if (a != b)`，不过其实没多大实用价值……大概是少一个字符？

此外，对常数异或，为「1」的位相当于「switch」，即把这个位切换一下；为「0」的位则不变。如：`(10111 ^ 00010) == (10101)`；如果把后面的 `00010` 看作是控制用的常数，那么这就像是「打开从右往左数第二个开关」一样。
类似地，「与」一个常数，则意为关闭所有「0」位对应的开关；「或」一个常数，则意为打开所有「1」位的开关。



```cpp
    int hammingDistance(int x, int y) {
        int a = 0;
        for (int i = x ^ y; i; i >>= 1)
            if (i & 1)
                ++a;
        return a;
    }
```
