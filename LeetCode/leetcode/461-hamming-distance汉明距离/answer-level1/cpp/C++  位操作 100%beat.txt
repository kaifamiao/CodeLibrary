## 代码思路
**位操作**是效率最高的
汉明距离的实质是把两个32位数里的相同位置处的不同数字的个数，数出来
这就想到**异或**——相同得0，不同得1
异或后数出1的个数即可
数1，最快捷高效的方法是位操作法
不断算术右移，拿最低位和1进行与操作
```
int hammingDistance(int x, int y) {
        int count=0;
        int xor1=x^y;//异或后，不同的位留下的都是1
        while(xor1>0)
        {
            if(xor1&1==1)//把所有的1数出来，用与的方法
            {
                ++count; 
            }
            xor1>>=1; //算术右移一位
        }
        return count;
    }
```
