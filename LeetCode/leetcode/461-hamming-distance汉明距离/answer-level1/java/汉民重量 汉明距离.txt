汉明重量：二进制中1的个数
汉明距离：两个二进制中 位数不同的个数

汉明重量计算： n &= n - 1

- 这个操作对比当前操作位高的位没有影响，对低位则完全清零。

- 拿6（110）来做例子，

- 第一次 110&101=100，这次操作成功的把从低位起第一个1消掉了，同时计数器加1。

- 第二次100&011=000，同理又统计了高位的一个1，此时n已变为0，不需要再继续了，于是110中有2个1。

汉明距离计算：
- 先将两个数进行异或^（相同为0不同为1）运算
- 再将异或完的数 计算汉明重量，也就是计算有多少个不同的数， 计算共多少个1

__# 代码：__
```
class Solution {
    public int hammingDistance(int x, int y) {
        int count = 0;        
        y = x ^ y;
        while(y != 0){
            y &= y -1;
            count++;
        }    
        return count;    
    }
}
```
