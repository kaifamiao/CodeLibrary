### 解题思路
此处撰写解题思路
字母异位词：也就是两个字符串中的相同字符的数量要对应相等
解法：
1、判断两个字符串长度是否相等，不相等则直接返回 false
2、若相等，则初始化 26 个字母哈希表，遍历字符串 s 和 t
3、s 负责在对应位置增加，t 负责在对应位置减少
4、如果哈希表的值都为 0，则二者是字母异位词
### 代码

```c
bool isAnagram(char * s, char * t)
{
    //判断两个字符串长度是否相等，不相等则直接返回 false
    if(strlen(s) != strlen(t))
        return 0;
    //若相等，则初始化 26 个字母哈希表，遍历字符串 s 和 t
    int A[26] = {0};  //哈希映射
    int i;
    printf("%d",strlen(s));
    while(*s != '\0')
    {
        //s 负责在对应位置增加，t 负责在对应位置减少
        A[*s - 'a']++;
        A[*t - 'a']--;
        s++;
        t++;
    }
    //如果哈希表的值都为 0，则二者是字母异位词
    for(i = 0; i < 26; i++)
    {
        if(A[i] != 0)
            return 0;
    }
    return 1;
}
```