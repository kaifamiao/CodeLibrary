[113.路径总和二](https://leetcode-cn.com/problems/path-sum-ii/submissions/)

[力扣 JS 题解。](https://github.com/GuYueJiaJie/blog/blob/master/%E7%AE%97%E6%B3%95%E4%B8%8E%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/README.md)  


递归DFS，与112题的区别就是需要把过程进行保存。


```javascript
/**
 * Definition for a binary tree node.
 * function TreeNode(val) {
 *     this.val = val;
 *     this.left = this.right = null;
 * }
 */
/**
 * @param {TreeNode} root
 * @param {number} sum
 * @return {number[][]}
 */
var pathSum = function(root, sum) {
    let res = [];
    help(root, sum, res, []);
    return res;
};

function help(root, sum, res, arr) {
    if (root === null) return;
    arr.push(root.val);
    if (root.left === null && root.right === null && root.val === sum) {
        // 注意这里不能直接存放arr
        // 直接存放arr的话这里存的是数组的引用
        res.push([...arr]);
    }
    help(root.left, sum-root.val, res, arr);
    help(root.right, sum-root.val, res, arr);
    // 上面两步都结束之后要把arr出栈进行回溯
    arr.pop();
}
```