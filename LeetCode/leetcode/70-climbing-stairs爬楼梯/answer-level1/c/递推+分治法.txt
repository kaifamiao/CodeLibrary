### 解题思路
//递推法+分治思想
/*
假设已知阶梯数为n和n-1的方法个数。
则阶梯数为n+1的问题可以分解成两类
- 1、最后一步走一个楼梯，前面n阶的方法个数（已知）就是这一类的方法个数。
- 2、最后一步走两个楼梯，前面n-1阶的方法个数（已知）就是这一类的方法个数。
显然，n+1的问题的解就是这两类问题的方法个数之和。
显然，当n=1时，方法个数为1，当n=2时，方法个数为2。
所以，当n=3时，可分为2+1和1+2两种情况，两种情况相加方法个数为2+1=3；
      当n=4时，可分为3+1和2+2两种情况，两种情况相加方法个数为3+2=5；
      依次类推。。。
      （这不就是斐波那契额？？？）
*/
### 代码

```c

int climbStairs(int n){
    if(n<=2)
        return n;
    else
    {
        int k1=1;
        int k2=2;
        for(int i=3;i<=n;i++)
        {
            int t=k1+k2;
            k1=k2;
            k2=t;
        }
        return k2;
    }
}
```