### 解题思路
上0层台阶有0种方法，对应f。
上1层台阶有1种方法，对应g。
上2层可以从第0层上来，也可以从第1层上来，总的方法数等于上到第0层的方法数加上到第1层的方法数。
同理，上第3层的方法数等于上到第1层的方法数加上到第二层的方法数，以此类推。
则g1表示当前层的下一层，f表示当前层的下两层。
更新后的g2（g2=g1+f)为上到当前层的方法数，当前层变成上一层，g2又变为当前层的下一层。
更新f为之前的g1（f=g2-f)

### 代码

```cpp
class Solution {
public:
    int climbStairs(int n) {
        int f=0,g=1;
        while(n--)
        {
            g=g+f;
            f=g-f;
        }
        return g;
    }
};
```