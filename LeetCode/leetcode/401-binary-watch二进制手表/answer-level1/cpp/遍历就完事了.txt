

执行用时 :4 ms, 在所有 C++ 提交中击败了71.09%的用户
内存消耗 :7.8 MB, 在所有 C++ 提交中击败了100.00%的用户
  
  

```c++
class Solution {
public:
    //这里直接放一个静态表这届判断二进制数字中1的个数
    unsigned int table[256]{
        0, 1, 1, 2, 1, 2, 2, 3, 1, 2, 2, 3, 2, 3, 3, 4,
        1, 2, 2, 3, 2, 3, 3, 4, 2, 3, 3, 4, 3, 4, 4, 5,
        1, 2, 2, 3, 2, 3, 3, 4, 2, 3, 3, 4, 3, 4, 4, 5,
        2, 3, 3, 4, 3, 4, 4, 5, 3, 4, 4, 5, 4, 5, 5, 6,
        1, 2, 2, 3, 2, 3, 3, 4, 2, 3, 3, 4, 3, 4, 4, 5,
        2, 3, 3, 4, 3, 4, 4, 5, 3, 4, 4, 5, 4, 5, 5, 6,
        2, 3, 3, 4, 3, 4, 4, 5, 3, 4, 4, 5, 4, 5, 5, 6,
        3, 4, 4, 5, 4, 5, 5, 6, 4, 5, 5, 6, 5, 6, 6, 7,
        1, 2, 2, 3, 2, 3, 3, 4, 2, 3, 3, 4, 3, 4, 4, 5,
        2, 3, 3, 4, 3, 4, 4, 5, 3, 4, 4, 5, 4, 5, 5, 6,
        2, 3, 3, 4, 3, 4, 4, 5, 3, 4, 4, 5, 4, 5, 5, 6,
        3, 4, 4, 5, 4, 5, 5, 6, 4, 5, 5, 6, 5, 6, 6, 7,
        2, 3, 3, 4, 3, 4, 4, 5, 3, 4, 4, 5, 4, 5, 5, 6,
        3, 4, 4, 5, 4, 5, 5, 6, 4, 5, 5, 6, 5, 6, 6, 7,
        3, 4, 4, 5, 4, 5, 5, 6, 4, 5, 5, 6, 5, 6, 6, 7,
        4, 5, 5, 6, 5, 6, 6, 7, 5, 6, 6, 7, 6, 7, 7, 8,
    };

    vector<string> readBinaryWatch(int num) {
        int hour,minute;
        vector<string> out;
        char temp[10];
        for(int i=0;i<=num;i++){
            hour = i; //小时亮灯个数
            minute = num - i; //分钟亮灯个数
            for(int h=0;h< 12;h++){
                if(table[h] == hour){
                    for(int m=0;m<60;m++){
                        if(table[m]==minute){
                            sprintf(temp,"%d:%02d",h,m);
                            out.push_back(temp);
                        }
                    }
                }
            }

        }
        return out;

    }
};
```