as-far-from-land-as-possible
你现在手里有一份大小为N x N 的「地图」（网格）<code>grid</code>，上面的每个「区域」（单元格）都用<code>0</code>和<code>1</code>标记好了。其中<code>0</code>代表海洋，<code>1</code>代表陆地，请你找出一个海洋区域，这个海洋区域到离它最近的陆地区域的距离是最大的。

我们这里说的距离是「曼哈顿距离」（Manhattan Distance）：<code>(x0, y0)</code> 和<code>(x1, y1)</code>这两个区域之间的距离是<code>|x0 - x1| + |y0 - y1|</code>。

如果我们的地图上只有陆地或者海洋，请返回<code>-1</code>。



<strong>示例 1：</strong>

<strong><img alt="" src="https://assets.leetcode-cn.com/aliyun-lc-upload/uploads/2019/08/17/1336_ex1.jpeg" style="height: 87px; width: 185px;"></strong>

<pre><strong>输入：</strong>[[1,0,1],[0,0,0],[1,0,1]]
<strong>输出：</strong>2
<strong>解释： </strong>
海洋区域 (1, 1) 和所有陆地区域之间的距离都达到最大，最大距离为 2。
</pre>

<strong>示例 2：</strong>

<strong><img alt="" src="https://assets.leetcode-cn.com/aliyun-lc-upload/uploads/2019/08/17/1336_ex2.jpeg" style="height: 87px; width: 184px;"></strong>

<pre><strong>输入：</strong>[[1,0,0],[0,0,0],[0,0,0]]
<strong>输出：</strong>4
<strong>解释： </strong>
海洋区域 (2, 2) 和所有陆地区域之间的距离都达到最大，最大距离为 4。
</pre>



<strong>提示：</strong>

<ol>
	<code>1 &lt;= grid.length == grid[0].length&lt;= 100</code>
	<code>grid[i][j]</code>不是<code>0</code>就是<code>1</code>
</ol>

地图分析
Given an N x N <code>grid</code>containing only values <code>0</code> and <code>1</code>, where<code>0</code> represents waterand <code>1</code> represents land, find a water cell such that its distance to the nearest land cell is maximized and return the distance.

The distance used in this problem is the <em>Manhattan distance</em>:the distance between two cells <code>(x0, y0)</code> and <code>(x1, y1)</code> is <code>|x0 - x1| + |y0 - y1|</code>.

If no land or water exists in the grid, return <code>-1</code>.



<strong>Example 1:</strong>

<strong><img alt="" src="https://assets.leetcode.com/uploads/2019/05/03/1336_ex1.JPG" style="width: 185px; height: 87px;" /></strong>

<pre>
<strong>Input: </strong><span id="example-input-1-1">[[1,0,1],[0,0,0],[1,0,1]]</span>
<strong>Output: </strong><span id="example-output-1">2</span>
<strong>Explanation: </strong>
The cell (1, 1) is as far as possible from all the land with distance 2.
</pre>

<strong>Example 2:</strong>

<strong><img alt="" src="https://assets.leetcode.com/uploads/2019/05/03/1336_ex2.JPG" style="width: 184px; height: 87px;" /></strong>

<pre>
<strong>Input: </strong><span id="example-input-2-1">[[1,0,0],[0,0,0],[0,0,0]]</span>
<strong>Output: </strong><span id="example-output-2">4</span>
<strong>Explanation: </strong>
The cell (2, 2) is as far as possible from all the land with distance 4.
</pre>



<span><strong>Note:</strong></span>

<ol>
	<span><code>1 &lt;= grid.length == grid[0].length&lt;= 100</code></span>
	<span><code>grid[i][j]</code>is <code>0</code> or <code>1</code></span>
</ol>
