# 思路：
1，当`str1 == str2`时显然可以转化
2，如果`str1 != str2`，如果`str2`包含所有的26个字母，则没有了操作空间，因此肯定不能转化
3，如果`str1`某两个下标`i, j`对应的字符相同，则必须要求`str2`中的相同下标也必须相同
如果判断以上情况后没有问题，则可以转化成功
```C++ []
class Solution {
public:
    bool canConvert(string str1, string str2) {
        if (str1 == str2) return true;
        vector<int> chars(26, 0);
        int count = 0;
        for (auto c : str2) {
            if (chars[c - 'a'] == 0) {
                ++count;
                chars[c - 'a'] = 1;
            }
        }
        if (count == 26) return false;
        vector<int> ends(26, -1);
        for (int i = 0; i < str1.size(); ++i) {
            int ind = str1[i] - 'a';
            if (ends[ind] != -1 && str2[ends[ind]] != str2[i]) {
                return false;
            }
            ends[ind] = i;
        }
        return true;
    }
};
```

![image.png](https://pic.leetcode-cn.com/6bc0f89da518c744c85cbf3733a24d90d8fed0463ce6aae39952b3662a1e1793-image.png)
