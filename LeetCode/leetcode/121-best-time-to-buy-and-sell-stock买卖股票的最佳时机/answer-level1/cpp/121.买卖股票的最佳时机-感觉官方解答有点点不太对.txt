最近美股市场比较动荡，看着不太明白的K线，我领会了一件事情。股票赚钱与否并不在于绝对价值为多少，而在于能不能在相对低的价格买入，相对高的价格卖出，在这两者之间创造尽可能大的差值即可。
如果我们开了上帝视角买股票，肯定希望的是知道了某一天的价格，向前回溯到这一天之前所有天里价格最低的那一天，然后买入就行了。官方解答说，是在最低点买入，然后考虑持有，在最高点能卖多少钱，感觉是不太对的。例如[7,1,5,2,4],看的应该是在第二天买了以后，从第二天开始价格最高的那一天卖出。
因此需要维护一个从当前天之后的最大值序列
```
        int maxN[100000];//最大值维护序列
        memset(maxN,0,sizeof(maxN));//重置为0

        int num = prices.size();
        if(!num)    return 0;//被空集坑了一把
        
        maxN[num-1]=prices[num-1];//开始维护
        for(int i=num-1;i>=0;i--)
            maxN[i] = max(maxN[i+1],prices[i]);//线性dp
        int pro=0;
        for(int i=0;i<num;i++)
            pro=max(pro,maxN[i]-prices[i]);
```
