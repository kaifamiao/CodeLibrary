![image.png](https://pic.leetcode-cn.com/0ad087ce57bd4629dd3f8220ae4ed5b179ce2de2f73a83c44b51b493edbd806d-image.png)

##### 题目给了数组元素的最大值为10000，应该就提示要使用布隆过滤器吧

我们先来看一个例子，对于数组` arr = [0,0,0,3,8,5,5]`
我们知道这个数组有7个元素，且最大值为8，我们申请一个8个元素的数组，初始化的时候全是0如下
`nums = [0,0,0,0,0,0,0,0]`
布隆过滤器什么意思呢？ 我们把arr里面元素的值当做nums的下标，比如arr里面的8，我们可以在`nums里把nums[8]置为1`，如果8在arr里出现两次呢？那就再+1
所以，nums经过处理后，把arr里面的值处理为如下
`[3,0,0,1,0,2,0,0,1]`
即：0出现3次，2没有出现，3出现1次... 5出现两次，6没有出现... 8出现1次
接下来应该知道怎么做了吧。如果k=4，那么只需把nums里面前4次出现的元素下标返回即可。即`[0,0,0,3]`


##### 有了思路再来写代码就很简单了
```python
# 布隆过滤器原理，因为知道数组的最大值
def get_least_numbers(arr, k):
    nums = [0] * 10000  # 申请一个包含最大值个数的元素
    for a in arr:
        nums[a] += 1  # 对重复元素计数
    output = []
    i = 0  # 从0开始遍历（从最小值开始遍历）
    while len(output) < k:
        if nums[i] >= 1:  # 如果该索引处的值大于1，则说明该值存在至少1次，循环往output里面写
            for j in range(nums[i]):
                output.append(i)
        i += 1
    return output[:k]  # 一定要注意单个重复的元素多余k个的情况
```
