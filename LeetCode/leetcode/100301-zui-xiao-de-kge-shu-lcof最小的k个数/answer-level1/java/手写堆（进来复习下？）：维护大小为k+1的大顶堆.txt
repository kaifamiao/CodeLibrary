## 40.最小的k个数

### Information

* TIME: 2020/02/18
* LINK: [Click Here](https://leetcode-cn.com/problems/zui-xiao-de-kge-shu-lcof/)
* TAG: `heap`

### Description

> 输入整数数组 `arr` ，找出其中最小的 `k` 个数。例如，输入4、5、1、6、2、7、3、8这8个数字，则最小的4个数字是1、2、3、4。

### Example

```text
输入：arr = [3,2,1], k = 2
输出：[1,2] 或者 [2,1]
```

### My Answer

> 维护一个大小为`k+1`的最大堆，遍历`arr`，当`size > k` 时，丢弃堆的顶端（也就是最大值）
>
> 这样就能保证大的值逐步被丢弃，剩下的就是k+1个最小值

```java
class Solution {
    private int[] data;
    private int size;
    public int[] getLeastNumbers(int[] arr, int k) {
        data = new int[k + 2];      //use 1 - k + 1
        size = 0;

        for(int num : arr){
            insert(num);
            if(size > k){
                deleteTop();
            }
        }
        return Arrays.copyOfRange(data, 1, k + 1);
    }
    private void insert(int num){
        size++;
        data[size] = num;
        swim(size);
    }
    private void deleteTop(){
        swap(1, size);
        size = size - 1;
        sink(1);
    }
    private int top(){
        return data[1];
    }
    private void swap(int i, int j){
        int tmp = data[i];
        data[i] = data[j];
        data[j] = tmp;
    }
    private boolean isPriority(int i, int j){
        return data[i] > data[j];
    }
    private void sink(int i){
        while((i<<1) <= size){
            int j = i<<1;
            if(j < size && isPriority(j + 1, j)){
                j++;
            }
            if(isPriority(i, j)) break;

            swap(i, j);
            i = j;
        }
    }
    private void swim(int i){
        while(i > 1 && isPriority(i, i>>1)){
            swap(i, i>>1);
            i >>= 1;
        }
    }
}
```

### Extend & Reference

> 来源：力扣（LeetCode）
> 链接：https://leetcode-cn.com
> 著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。

### More

> **更多题解，请访问我的GitHub仓库：[LeetCode 刷题日记](https://github.com/ZhuoZhuoCrayon/my-Nodes/blob/master/Daily/README_2020.md)**
>
> ![alt](https://pic.leetcode-cn.com/d464857f113fb2508745beec8fda5f82feaa61b0e823f23ad92b1b15d405db90-file_1582019104679)
>
> [**更多笔记**](https://github.com/ZhuoZhuoCrayon/my-Nodes)：**`Vue` `Java SSM 框架` `阿里云服务器` `JavaScript/HTML/CSS`   `数据库` ...**
>
> **我的GitHub主页 -> [ZhuoZhuoCrayon](https://github.com/ZhuoZhuoCrayon)**
>
> 共勉~

