Python一行代码，直接推到出数学公式。基础知识：等差数列和、最优化（思想）、二次函数（高中知识）

首先，硬币按照题意摆放可以形成一个等差数列，到第i层共需要i(i+1)/2个硬币；
然后，需要求得最大的i，同时i(i+1)/2<=n，也就是距离d=n-i(i+1)/2的距离最小,同时d>=0;
接着，d=n-i(i+1)/2可以看做是i的函数，还是一个开口向下的二次函数；
同时，还要d>=0，暂时抛开i是整数这一限定，根据二次函数求根公式可知 i=[-b±√(b^2-4ac)]/(2a) 使得d为0；
最后，因为i>=0 的限定，所以i一定是[-b+√(b^2-4ac)]/(2a)领域内的整数，此处应当向下取整（原因各位大佬自己想一想吧）
```
from math import sqrt, floor
class Solution:
    def arrangeCoins(self, n: int) -> int:
        return floor( sqrt(1/4+2*n)-1/2 )
```
