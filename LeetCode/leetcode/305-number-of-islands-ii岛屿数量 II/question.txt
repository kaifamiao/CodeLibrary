number-of-islands-ii
假设你设计一个游戏，用一个<code>m</code>行<code>n</code>列的2D 网格来存储你的游戏地图。

起始的时候，每个格子的地形都被默认标记为「水」。我们可以通过使用<code>addLand</code>进行操作，将位置 <code>(row, col)</code> 的「水」变成「陆地」。

你将会被给定一个列表，来记录所有需要被操作的位置，然后你需要返回计算出来<strong>每次<em>addLand </em>操作后岛屿的数量</strong>。

注意：一个岛的定义是被「水」包围的「陆地」，通过水平方向或者垂直方向上相邻的陆地连接而成。你可以假设地图网格的四边均被无边无际的「水」所包围。

请仔细阅读下方示例与解析，更加深入了解岛屿的判定。

<strong>示例:</strong>

<pre><strong>输入:</strong> m = 3, n = 3, positions = [[0,0], [0,1], [1,2], [2,1]]
<strong>输出:</strong> [1,1,2,3]
</pre>

<strong>解析:</strong>

起初，二维网格<code>grid</code>被全部注入「水」。（0 代表「水」，1 代表「陆地」）

<pre>0 0 0
0 0 0
0 0 0
</pre>

操作#1：<code>addLand(0, 0)</code> 将<code>grid[0][0]</code> 的水变为陆地。

<pre>1 0 0
0 0 0   Number of islands = 1
0 0 0
</pre>

操作#2：<code>addLand(0, 1)</code> 将<code>grid[0][1]</code> 的水变为陆地。

<pre>1 1 0
0 0 0   岛屿的数量为 1
0 0 0
</pre>

操作#3：<code>addLand(1, 2)</code> 将<code>grid[1][2]</code> 的水变为陆地。

<pre>1 1 0
0 0 1   岛屿的数量为 2
0 0 0
</pre>

操作#4：<code>addLand(2, 1)</code> 将<code>grid[2][1]</code> 的水变为陆地。

<pre>1 1 0
0 0 1   岛屿的数量为 3
0 1 0
</pre>

<strong>拓展：</strong>

你是否能在 O(k log mn) 的时间复杂度程度内完成每次的计算？（k 表示<code>positions</code>的长度）

岛屿数量 II
A 2d grid map of <code>m</code> rows and <code>n</code> columns is initially filled with water. We may perform an <i>addLand</i> operation which turns the water at position (row, col) into a land. Given a list of positions to operate, <b>count the number of islands after each <i>addLand</i> operation</b>. An island is surrounded by water and is formed by connecting adjacent lands horizontally or vertically. You may assume all four edges of the grid are all surrounded by water.

<b>Example:</b>

<pre>
<b>Input:</b> m = 3, n = 3, positions = [[0,0], [0,1], [1,2], [2,1]]
<b>Output:</b> [1,1,2,3]
</pre>

<b>Explanation:</b>

Initially, the 2d grid <code>grid</code> is filled with water. (Assume 0 represents water and 1 represents land).

<pre>
0 0 0
0 0 0
0 0 0
</pre>

Operation #1: addLand(0, 0) turns the water at grid[0][0] into a land.

<pre>
1 0 0
0 0 0   Number of islands = 1
0 0 0
</pre>

Operation #2: addLand(0, 1) turns the water at grid[0][1] into a land.

<pre>
1 1 0
0 0 0   Number of islands = 1
0 0 0
</pre>

Operation #3: addLand(1, 2) turns the water at grid[1][2] into a land.

<pre>
1 1 0
0 0 1   Number of islands = 2
0 0 0
</pre>

Operation #4: addLand(2, 1) turns the water at grid[2][1] into a land.

<pre>
1 1 0
0 0 1   Number of islands = 3
0 1 0
</pre>

<b>Follow up:</b>

Can you do it in time complexity O(k log mn), where k is the length of the <code>positions</code>?
