###### 怎么做：
设置两个指针a，b，两个指针的游走方式相同，都是先遍历自身所在的链表，到尾部后跳转到另一个链表的头部继续遍历。
当a==b且不为none，就是不是尾部时，说明是链表的相交点，返回其中一个即可
当a==b且为none时，说明两者同时到达了两个链表的尾部，也就是两个链表不相交，返回空

###### 为什么这么做：
两个链表首尾相接的遍历方式，如果相交，那么两个指针遍历过程中一定会相遇，并且如果是每次遍历一个节点的话，相遇的位置一定就是相交的位置；如果不相交，两个指针遍历 两个链表长度最大公倍数 长度 后就会分别到达两个链表的尾部，即none


