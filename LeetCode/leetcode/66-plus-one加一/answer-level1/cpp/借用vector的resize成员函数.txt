### 解题思路
解题思路：先分析情况，大情况就分三种：
1.末尾没有进位，如[1，2，3，4]  则输出[1,2,3,5]
2.末尾有进位，但是这个数的长度不增加。如[1,2,9,9,9],输出[1,3,0,0,0]
3.末尾有进位，直到数的首位，需要增加长度。如[9,9,9,9],输出[1,0,0,0,0]

开始遍历从尾部开始，判断+1之后是否需要进位，如果需要将此时的下标位置置为0。这时再增加
一个判断，判断此时的下标是否等于0即是否已经遍历到了首部，如果是，使用C++容器库的知识，
改变此时这个容器的大小，在此时的vector尾部添加一个1，此时长度也增加了1，然后调换首部
和尾部即可。如果不需要进位，只需将该位置的数+1，直接跳出循环。

### 代码

```cpp
class Solution {
public:
    vector<int> plusOne(vector<int>& digits) {
        int len = (int)digits.size();
	    for (int i = len - 1; i > -1; i--)
    	{
		    if (digits[i] + 1 > 9)
		    {
			    digits[i] = 0;
			    if (i == 0)
			    {
			    	digits.resize(len + 1, 1);
			    	swap(digits[0],digits[len]);
			    }
		    }
		    else
		    {
		    	digits[i] += 1;
			    break;
	    	}
    	}
	    return digits;
    }
};
```