### 解题思路
思路：这个题叫“加1”，这个1很重要，由于是低位+1，所以只有9的时候，+1才会发生进位。不为9的话，直接+1返回就完事了。
那么我们分析一下进位后的情况：
1. 进位后不增位：由于位数足够，所以我们只需要将当前低位置为0，for循环会循环到高一位上进行相同的判断，以此类推...
2. 进位后需要增位：由于位数不够，for循环会跳出，这个时候我们发现，增位后的结果是一个最高位是1，低位都是0的形式。
例如：9+1=10； 99+1=100；999+ 1=1000。所以就好办了，跳出for循环我们创建一个比原始数组长度多一位的数组arr，同时赋值arr[0] = 1 即可。

### 代码

```java
class Solution {
    public int[] plusOne(int[] digits) {
        // 思路：这个题叫“加1”，这个1很重要，因为只有9的时候，+1才会发生进位，而且进位之后是一个最高位是1，低位都是0的形式。
        for(int i = digits.length - 1; i >= 0; i--){
            if(digits[i] != 9){ // 如果低位不是9，则 +1 之后直接返回
                digits[i]++;
                return digits;
            }else digits[i] = 0; // 如果低位是9，需要就将低位置为0。同时循环会判断进位之后，是否需要增位，不需要增位时：则进入高一位的判断是否为9；需要增位的话，则会跳出循环循环，位数(数组大小) +1 ，最高位置为1，其他位都为0
        }
        digits = new int[digits.length + 1]; // 增位，最高位置为1 ，其他位都为0
        digits[0] = 1;
        return digits;
    }
}
```