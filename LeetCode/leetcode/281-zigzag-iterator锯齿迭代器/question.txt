zigzag-iterator
给出两个一维的向量，请你实现一个迭代器，交替返回它们中间的元素。

<strong>示例:</strong>

<pre><strong>输入:</strong>
v1 = [1,2]
v2 = [3,4,5,6] 

<strong>输出:</strong> <code>[1,3,2,4,5,6]

<strong>解析:</strong></code>通过连续调用 <em>next</em> 函数直到 <em>hasNext</em> 函数返回 <code>false，</code>
    <em>next</em> 函数返回值的次序应依次为: <code>[1,3,2,4,5,6]。</code></pre>

<strong>拓展：</strong>假如给你<code>k</code>个一维向量呢？你的代码在这种情况下的扩展性又会如何呢?

<strong>拓展声明：</strong><br>
&ldquo;锯齿&rdquo; 顺序对于<code>k &gt; 2</code>的情况定义可能会有些歧义。所以，假如你觉得 &ldquo;锯齿&rdquo; 这个表述不妥，也可以认为这是一种&ldquo;循环&rdquo;。例如：

<pre><strong>输入:</strong>
[1,2,3]
[4,5,6,7]
[8,9]

<strong>输出: </strong><code>[1,4,8,2,5,9,3,6,7]</code>.
</pre>

锯齿迭代器
Given two 1d vectors, implement an iterator to return their elements alternately.



<strong>Example:</strong>

<pre>
<strong>Input:</strong>
v1 = [1,2]
v2 = [3,4,5,6] 
<strong>Output:</strong> <code>[1,3,2,4,5,6]
<strong>Explanation:</strong></code>By calling <i>next</i> repeatedly until <i>hasNext</i> returns <code>false</code>, the order of elements returned by <i>next</i> should be: <code>[1,3,2,4,5,6]</code>.</pre>



<b>Follow up</b>:

What if you are given <code>k</code> 1d vectors? How well can your code be extended to such cases?

<strong>Clarification </strong><b>for the follow up question</b><strong>:</strong><br />
The &quot;Zigzag&quot; order is not clearly defined and is ambiguous for <code>k &gt; 2</code> cases. If &quot;Zigzag&quot; does not look right to you, replace &quot;Zigzag&quot; with &quot;Cyclic&quot;. For example:

<pre>
<strong>Input:</strong>
[1,2,3]
[4,5,6,7]
[8,9]

<strong>Output: </strong><code>[1,4,8,2,5,9,3,6,7]</code>.
</pre>
