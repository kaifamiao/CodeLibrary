## 55 - II. 平衡二叉树

### Information

* TIME: 2020/02/22
* LINK: [Click Here](https://leetcode-cn.com/problems/ping-heng-er-cha-shu-lcof/)
* TAG: `Tree`

### Description

> 输入一棵二叉树的根节点，判断该树是不是平衡二叉树。如果某二叉树中任意节点的左右子树的深度相差不超过1，那么它就是一棵平衡二叉树。

### Example

```text
给定二叉树 [3,9,20,null,null,15,7]

    3
   / \
  9  20
    /  \
   15   7
返回 true 。
```

### My Answer

> 分别求子树的深度，比较高度差，如果大于1，则返回-1
>
> * 遇到子树深度为`-1`的，说明子树不符合平衡规则，直接返回-1

```java
/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
class Solution {
    public boolean isBalanced(TreeNode root) {
        if(dfs(root) == -1) return false;
        return true;
    }
    private int dfs(TreeNode root){
        if(root == null) return 0;
        int leftDepth = dfs(root.left);
        int rightDepth = dfs(root.right);

        if(leftDepth == -1 || rightDepth == -1) return -1;
        if(Math.abs(leftDepth - rightDepth) > 1) return -1;
        return Math.max(leftDepth, rightDepth) + 1;
    }
}
```

### Extend & Reference

> 来源：力扣（LeetCode）
> 链接：https://leetcode-cn.com
> 著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。

### More

> **更多题解，请访问我的GitHub仓库：[LeetCode 刷题日记](https://github.com/ZhuoZhuoCrayon/my-Nodes/blob/master/Daily/README_2020.md)**
>
> ![alt](https://pic.leetcode-cn.com/ad13e18e6c9c45fc468b80f2d8a1b9299c44bb6f3c1ec584e472f09a569012fc-file_1582359072536)
>
> [**更多笔记**](https://github.com/ZhuoZhuoCrayon/my-Nodes)：**`Vue` `Java SSM 框架` `阿里云服务器` `JavaScript/HTML/CSS`   `数据库` ...**
>
> **我的GitHub主页 -> [ZhuoZhuoCrayon](https://github.com/ZhuoZhuoCrayon)**
>
> 共勉~

