### 解题思路
##### 简单概括题目在说什么
把给定的一串包含合法括号的字符串分成两部分，要保证两部分的括号深度最小
- 什么是括号深度?直接看例子
"" 深度是 0
"()"深度是1
"()()"深度也是1
"(())"深度是2
- 方法要返回什么？
返回一个数组，数组中下标为i的元素取值0表示seq.charAt(i)分配到第一部分，如果数组元素取值为1，表示分配到第二部分

#### 思路
读懂题目后，可以多试验几次，找到规律如下：
尽可能的把相邻的两个相同括号分隔在不同部分，如果相邻的两个括号不同，直接放在同一部分，具体而言：
- "(("
这种情况，两个括号必须分在两部分
- "()"
这种情况，两个括号放在同一部分即可

### 代码
- 如何实现上述思路？使用一个flag来标明是第一部分还是第二部分即可，如果前后两个符号相同，对flag取反，代码如下
```java
class Solution {
    public int[] maxDepthAfterSplit(String seq) {
        int flag = 0;
        char p = 0;
        int[] arr = new int[seq.length()];
        arr[0] = 0;
        for (int i = 1; i < seq.length(); i ++,p++){
            if (seq.charAt(p) == seq.charAt(i)){
                flag ^= 1;
            }
                arr[i] = flag;
        }
        return arr;
    }
}
```