longest-common-subsequence
给定两个字符串<code>text1</code> 和<code>text2</code>，返回这两个字符串的最长公共子序列。

一个字符串的<em>子序列</em>是指这样一个新的字符串：它是由原字符串在不改变字符的相对顺序的情况下删除某些字符（也可以不删除任何字符）后组成的新字符串。<br>
例如，&quot;ace&quot; 是 &quot;abcde&quot; 的子序列，但 &quot;aec&quot; 不是 &quot;abcde&quot; 的子序列。两个字符串的「公共子序列」是这两个字符串所共同拥有的子序列。

若这两个字符串没有公共子序列，则返回 0。



<strong>示例 1:</strong>

<pre><strong>输入：</strong>text1 = &quot;abcde&quot;, text2 = &quot;ace&quot; 
<strong>输出：</strong>3  
<strong>解释：</strong>最长公共子序列是 &quot;ace&quot;，它的长度为 3。
</pre>

<strong>示例 2:</strong>

<pre><strong>输入：</strong>text1 = &quot;abc&quot;, text2 = &quot;abc&quot;
<strong>输出：</strong>3
<strong>解释：</strong>最长公共子序列是 &quot;abc&quot;，它的长度为 3。
</pre>

<strong>示例 3:</strong>

<pre><strong>输入：</strong>text1 = &quot;abc&quot;, text2 = &quot;def&quot;
<strong>输出：</strong>0
<strong>解释：</strong>两个字符串没有公共子序列，返回 0。
</pre>



<strong>提示:</strong>

<ul>
	<code>1 &lt;= text1.length &lt;= 1000</code>
	<code>1 &lt;= text2.length &lt;= 1000</code>
	输入的字符串只含有小写英文字符。
</ul>

最长公共子序列
Given two strings <code>text1</code> and <code>text2</code>, return the length of their longest common subsequence.

A <em>subsequence</em> of a string is a new string generated from the original string with some characters(can be none) deleted without changing the relative order of the remaining characters. (eg, &quot;ace&quot; is a subsequence of &quot;abcde&quot; while &quot;aec&quot; is not).A <em>common subsequence</em>of two strings is a subsequence that is common to both strings.



If there is no common subsequence, return 0.


<strong>Example 1:</strong>

<pre>
<strong>Input:</strong> text1 = &quot;abcde&quot;, text2 = &quot;ace&quot; 
<strong>Output:</strong> 3  
<strong>Explanation:</strong> The longest common subsequence is &quot;ace&quot; and its length is 3.
</pre>

<strong>Example 2:</strong>

<pre>
<strong>Input:</strong> text1 = &quot;abc&quot;, text2 = &quot;abc&quot;
<strong>Output:</strong> 3
<strong>Explanation:</strong> The longest common subsequence is &quot;abc&quot; and its length is 3.
</pre>

<strong>Example 3:</strong>

<pre>
<strong>Input:</strong> text1 = &quot;abc&quot;, text2 = &quot;def&quot;
<strong>Output:</strong> 0
<strong>Explanation:</strong> There is no such common subsequence, so the result is 0.
</pre>


<strong>Constraints:</strong>

<ul>
	<code>1 &lt;= text1.length &lt;= 1000</code>
	<code>1 &lt;= text2.length &lt;= 1000</code>
	The input strings consist of lowercase English characters only.
</ul>
