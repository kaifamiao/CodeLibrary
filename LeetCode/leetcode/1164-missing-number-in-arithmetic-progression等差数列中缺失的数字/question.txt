missing-number-in-arithmetic-progression
有一个数组，其中的值符合等差数列的数值规律，也就是说：

<ul>
	在<code>0 &lt;= i &lt; arr.length - 1</code>的前提下，<code>arr[i+1] - arr[i]</code>的值都相等。
</ul>

我们会从该数组中删除一个 <strong>既不是第一个 </strong>也<strong>不是最后一个的值</strong>，得到一个新的数组<code>arr</code>。

给你这个缺值的数组<code>arr</code>，请你帮忙找出被删除的那个数。



<strong>示例 1：</strong>

<pre><strong>输入：</strong>arr = [5,7,11,13]
<strong>输出：</strong>9
<strong>解释：</strong>原来的数组是 [5,7,<strong>9</strong>,11,13]。
</pre>

<strong>示例 2：</strong>

<pre><strong>输入：</strong>arr = [15,13,12]
<strong>输出：</strong>14
<strong>解释：</strong>原来的数组是 [15,<strong>14</strong>,13,12]。</pre>



<strong>提示：</strong>

<ul>
	<code>3 &lt;= arr.length &lt;= 1000</code>
	<code>0 &lt;= arr[i] &lt;= 10^5</code>
</ul>

等差数列中缺失的数字
In some array <code>arr</code>, the values were in arithmetic progression: the values<code>arr[i+1] - arr[i]</code>are allequal for every<code>0 &lt;= i &lt; arr.length - 1</code>.

Then, a value from <code>arr</code>was removed that <strong>wasnot the first or last value in the array</strong>.

Return the removed value.


<strong>Example 1:</strong>

<pre>
<strong>Input:</strong> arr = [5,7,11,13]
<strong>Output:</strong> 9
<strong>Explanation: </strong>The previous array was [5,7,<strong>9</strong>,11,13].
</pre>

<strong>Example 2:</strong>

<pre>
<strong>Input:</strong> arr = [15,13,12]
<strong>Output:</strong> 14
<strong>Explanation: </strong>The previous array was [15,<strong>14</strong>,13,12].</pre>


<strong>Constraints:</strong>

<ul>
	<code>3 &lt;= arr.length &lt;= 1000</code>
	<code>0 &lt;= arr[i] &lt;= 10^5</code>
</ul>
