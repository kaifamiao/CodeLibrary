博文地址：[数论](https://blog.csdn.net/weixin_43071838/article/details/104533872)
题目要求：编写一个函数，输入是一个无符号整数，返回其二进制表达式中数字位数为 ‘1’ 的个数（也被称为汉明重量）
题目分析：如字面意思这个真的特别简单，首先哈这是一个无符号整数Python3中可以用bin()直接把数字变成2进制，然后问我们把这个2进制变成字符串，最后数里面的1就好了，代码如下：

```python
    def hammingWeight(self, n: int) -> int:
        return bin(n).count('1')
```
再就是又涉及到位运算，如果是奇数的话最右边一位一定是1，所以n&(n-1)最右边的1位就会变成0。如果是偶数的话最右边一位是0，n&(n-1)一定会向从右向左遇到的第一个1进行借位，在进行与运算的时候只会涉及从右向左数遇到的第一个1，至于其他的1都不会被影响，所以还是会影响最右边的1然后把它变成0，因为从最右边的1借位，从该位向右都会由0变成1，然后做与运算，代码如下：

```python
    def hammingWeight(self, n: int) -> int:
        count = 0
        while n > 0:
            n &= (n - 1)
            count += 1
        return count
```