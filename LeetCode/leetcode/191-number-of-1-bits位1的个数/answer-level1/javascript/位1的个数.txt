*法一：JavaScript中的位运算符：“&”*

当对一对数位执行位运算 AND 时，如果数位均为 1 则返回 1。

|运算|结果|
|---|---|
|0 & 0|0|
|0 & 1|0|
|1 & 0|0|
|1 & 1|1|

**思路：n &= (n – 1) 能清除最右边的1，同时累加计数器，直至n为0**

n相当于在n - 1的最低位加上1。

8（1000）= 7（0111）+ 1（0001），所以8 & 7 = （1000）&（0111）= 0（0000），清除了8最右边的1（其实就是最高位的1，因为8的二进制中只有一个1）。

7（0111）= 6（0110）+ 1（0001），所以7 & 6 = （0111）&（0110）= 6（0110），清除了7的二进制表示中最右边的1（也就是最低位的1）。


```js
var hammingWeight = function(n) {
    let sum = 0;
    while (n) {
        n = n & (n - 1);
        sum++
    }
    return sum;
};
```

