* 思路：此题常规思路就是循环32次，然后依次判断每一位的值。但是这样肯定是不够的。所有有一种更加简便的方法。即，我们只需要将该数字与其减一之后的值进行与运算，然后再次循环，直到为0，其循环的次数就是该数字中1的个数。原理就是n&n-1一定可以消去该数字最后一位的1,，大家可以这样理解，不管对于n中最后一个一的位置如何比如为....1000...（N个）假设1的后面有N个0，对于该数字减一而言就变成了....01111....(N个)后面的0全部就因为借位变成了1，此时将两个数字相与就会把最后一个1之后（包括1）全部变成了0.同理如此循环一定能将所有的1全部变成0，这样循环的次数就变成了消去1的次数，也就是1的个数。此题面试常考（tx考过），大家可以记一记。
```
class Solution {
public:
    int hammingWeight(uint32_t n) {
        int m = 0 ;
        for(;n;m++)
            n &= n-1;
        return m;
    }
};
```