binary-tree-vertical-order-traversal
给定一个二叉树，返回其结点<em>垂直方向</em>（从上到下，逐列）遍历的值。

如果两个结点在同一行和列，那么顺序则为<strong>从左到右</strong>。

<strong>示例 1：</strong>

<pre><strong>输入:</strong> <code>[3,9,20,null,null,15,7]
</code>
   3
  /\
 /  \
9   20
    /\
   /  \
  15   7 

<strong>输出:
</strong>
[
  [9],
  [3,15],
  [20],
  [7]
]
</pre>

<strong>示例2:</strong>

<pre><strong>输入: </strong><code>[3,9,8,4,0,1,7]

</code>     3
    /\
   /  \
  9    8
  /\   /\
 /  \ /  \
4   0 1   7 

<strong>输出:</strong>

[
  [4],
  [9],
  [3,0,1],
  [8],
  [7]
]
</pre>

<strong>示例 3:</strong>

<pre><strong>输入:</strong> <code>[3,9,8,4,0,1,7,null,null,null,2,5]（<strong>注意：</strong></code>0 的右侧子节点为 2，1 的左侧子节点为 5）

     3
    /\
   /  \
   9   8
  /\  /\
 /  \/  \
 4  01   7
    /\
   /  \
   5   2

<strong>输出:</strong>

[
  [4],
  [9,5],
  [3,0,1],
  [8,2],
  [7]
]
</pre>

二叉树的垂直遍历
Given a binary tree, return the <i>vertical order</i> traversal of its nodes&#39; values. (ie, from top to bottom, column by column).

If two nodes are in the same row and column, the order should be from <b>left to right</b>.

<b>Examples 1:</b>

<pre>
<strong>Input:</strong> <code>[3,9,20,null,null,15,7]
</code>
   3
  /\
 /  \
 9  20
    /\
   /  \
  15   7 

<strong>Output:</strong>

[
  [9],
  [3,15],
  [20],
  [7]
]
</pre>

<b>Examples 2:</b>

<pre>
<strong>Input: </strong><code>[3,9,8,4,0,1,7]

</code>     3
    /\
   /  \
   9   8
  /\  /\
 /  \/  \
 4  01   7 

<strong>Output:</strong>

[
  [4],
  [9],
  [3,0,1],
  [8],
  [7]
]
</pre>

<b>Examples 3:</b>

<pre>
<strong>Input:</strong> <code>[3,9,8,4,0,1,7,null,null,null,2,5]</code> (0&#39;s right child is 2 and 1&#39;s left child is 5)

     3
    /\
   /  \
   9   8
  /\  /\
 /  \/  \
 4  01   7
    /\
   /  \
   5   2

<strong>Output:</strong>

[
  [4],
  [9,5],
  [3,0,1],
  [8,2],
  [7]
]
</pre>
