decrease-elements-to-make-array-zigzag
给你一个整数数组<code>nums</code>，每次 <strong>操作</strong>会从中选择一个元素并 <strong>将该元素的值减少1</strong>。

如果符合下列情况之一，则数组<code>A</code>就是 <strong>锯齿数组</strong>：

<ul>
	每个偶数索引对应的元素都大于相邻的元素，即<code>A[0] &gt; A[1] &lt; A[2] &gt; A[3] &lt; A[4] &gt; ...</code>
	或者，每个奇数索引对应的元素都大于相邻的元素，即<code>A[0] &lt; A[1] &gt; A[2] &lt; A[3] &gt; A[4] &lt; ...</code>
</ul>

返回将数组<code>nums</code>转换为锯齿数组所需的最小操作次数。



<strong>示例 1：</strong>

<pre><strong>输入：</strong>nums = [1,2,3]
<strong>输出：</strong>2
<strong>解释：</strong>我们可以把 2 递减到 0，或把 3 递减到 1。
</pre>

<strong>示例 2：</strong>

<pre><strong>输入：</strong>nums = [9,6,1,6,2]
<strong>输出：</strong>4
</pre>



<strong>提示：</strong>

<ul>
	<code>1 &lt;= nums.length &lt;= 1000</code>
	<code>1 &lt;= nums[i] &lt;= 1000</code>
</ul>

递减元素使数组呈锯齿状
Given an array <code>nums</code> of integers, a <em>move</em>consists of choosing any element and <strong>decreasing it by 1</strong>.

An array <code>A</code> is a<em>zigzag array</em>if either:

<ul>
	Every even-indexed element is greater than adjacent elements, ie.<code>A[0] &gt; A[1] &lt; A[2] &gt; A[3] &lt; A[4] &gt; ...</code>
	OR, every odd-indexed element is greater than adjacent elements, ie.<code>A[0] &lt; A[1] &gt; A[2] &lt; A[3] &gt; A[4] &lt; ...</code>
</ul>

Return the minimum number of moves to transform the given array <code>nums</code> into a zigzag array.


<strong>Example 1:</strong>

<pre>
<strong>Input:</strong> nums = [1,2,3]
<strong>Output:</strong> 2
<strong>Explanation:</strong> We can decrease 2 to 0 or 3 to 1.
</pre>

<strong>Example 2:</strong>

<pre>
<strong>Input:</strong> nums = [9,6,1,6,2]
<strong>Output:</strong> 4
</pre>


<strong>Constraints:</strong>

<ul>
	<code>1 &lt;= nums.length &lt;= 1000</code>
	<code>1 &lt;= nums[i] &lt;= 1000</code>
</ul>
