
![image.png](https://pic.leetcode-cn.com/b5a4c5d88e5b327fc7db0866dd2c3079a3e2df7ca86ab8d3166c011f9b53710b-image.png)

审题是最关键的，首先明确以下几点：

1. 正整数的数组A的元素可能存在相同元素
2. 要进行一次交换
3. 找出按字典序排列小于 A 的最大可能排列

根据示例总结规律：

1. 升序排列的数组无需交换

2. 确定需要交换元素的位置：

   对数组元素组成的数据而言，最接近这个数的排列逆序查找，第一次升序的位置，如下图：

![image.png](https://pic.leetcode-cn.com/4a7c5592d64b538b67d2f23e1c5c8f0af000a438df0a16f07ce0c216afda33bf-image.png)


   在第一次升序的位置，左侧元素A[i-1]大于当前元素A[i]，即A[i-1]>A[i]，例如：

   - [3,2,1]中箭头左侧2>1
   - [1,9,4,6,7]中箭头左侧9>4
   - [3,1,1,3]中箭头左侧3>1

   所以一定能构造出比当前字典序列小的数据，左侧的元素A[i-1]就是要要交换的元素，如下图框中元素：
![image.png](https://pic.leetcode-cn.com/67a9d6dc9b41bb262d480bc129bc6679adb0cdc7e0b634e99e474e1da124bd53-image.png)


3. 从箭头所在的位置开始，查找当前位置和右侧所有元素，且这个元素A[j]要满足以下条件：

   

   - 这个元素值最大且小于要交换的元素的值A[i-1]
   - 这个元素最靠近要交换的元素A[i-1]（主要是考虑右侧元素相等的情况，如3113，交换左侧1以保证元素组成的数据最大）

   可以明确的是，箭头右侧的数据是从右向左是降序排列的，所以可以直接逆序查找。如果第一个小于A[i-1]的元素如果满足与他的左侧数据不相等，那么这个元素就是要交换的元素A[j]。
![image.png](https://pic.leetcode-cn.com/a02f5b128e96312bbc40f2440489427cd7df4bf8c73f0ecbac8ac30a9e8b6709-image.png)

4. 找出要交换的两个元素A[i-1]和A[j]后，进行交换，则交换后的学列字典序一定是小于当前字典序，且组成的数据是最大的一条。

python3 代码也很简单，参考如下：

```python
class Solution:
    def prevPermOpt1(self, A: List[int]) -> List[int]:
        lenth = len(A)
        for i in range(lenth-1, 0, -1):
            # 第一次升序的位置，左侧元素A[i-1]大于当前元素A[i]
            if A[i-1] > A[i]:
                # 逆序从结尾向第i-1个索引查找A[j]           
                for j in range(lenth-1, i-1, -1):
                    # 元素要满足小于A[i-1]且与左侧元素不相等就是要找的最大元素
                    if A[j] < A[i-1] and A[j] != A[j-1]:
                        A[i-1],A[j] = A[j],A[i-1]
                        return A
        return A
```

