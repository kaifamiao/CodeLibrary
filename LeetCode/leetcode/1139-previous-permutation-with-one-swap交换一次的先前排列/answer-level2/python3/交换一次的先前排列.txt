假设要交换的两个数字为A[i]和A[j](i < j)，由于要保证交换后的数组的字典序比交换前小，所以A[i]>A[j]。又由于要保证交换后的数组的字典序尽可能的大，所以用于交换的两个数字应该尽量位于数组中靠后的位置。基于这两点，可以得到解题思路为：从数组的末尾开始往前遍历，保证遍历过的子数组从后往前降序排列，找到第一个不满足降序要求的数字。例如对于数组[1,9,4,6,7]，[7,6,4]降序排列，因此找到的第一个数字是9。然后将该数字与它后面小于它的最大数字交换即可。  
```Python
class Solution:
    def prevPermOpt1(self, A: List[int]) -> List[int]:
        n = len(A)
        i = n - 2
        while i >= 0 and A[i] <= A[i+1]:
            i -= 1
        if i < 0:
            return A
        j = n - 1
        while A[j] >= A[i]:
            j -= 1
        A[i],A[j] = A[j],A[i]
        return A
```