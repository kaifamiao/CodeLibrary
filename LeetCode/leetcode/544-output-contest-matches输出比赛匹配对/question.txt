output-contest-matches
在 NBA 季后赛中，我们总是安排较强的队伍对战较弱的队伍，例如用排名第 1 的队伍和第 n 的队伍对决，这是一个可以让比赛更加有趣的好策略。现在，给你<strong>n</strong>支队伍，你需要以字符串格式输出它们的<strong>最终</strong>比赛配对。

<strong>n </strong>支队伍按从 1 到 n 的正整数格式给出，分别代表它们的初始排名（排名 1 最强，排名 n 最弱）。我们用括号（&#39;(&#39;, &#39;)&#39;）和逗号（&#39;,&#39;）来表示匹配对&mdash;&mdash;括号（&#39;(&#39;, &#39;)&#39;）表示匹配，逗号（&#39;,&#39;）来用于分割。在每一轮的匹配过程中，你都需要遵循将强队与弱队配对的原则。



<strong>示例 1：</strong>

<pre><strong>输入:</strong> 2
<strong>输出:</strong> (1,2)
<strong>解析:</strong> 
初始地，我们有队1和队2两支队伍，按照1，2排列。
因此 用 &#39;(&#39;, &#39;)&#39; 和 &#39;,&#39;来将队1和队2进行配对，得到最终答案。
</pre>

<strong>示例 2：</strong>

<pre><strong>输入:</strong> 4
<strong>输出:</strong> ((1,4),(2,3))
<strong>解析:</strong> 
在第一轮，我们将队伍1和4配对，2和3配对，以满足将强队和弱队搭配的效果。得到(1,4),(2,3).
在第二轮，(1,4) 和 (2,3) 的赢家需要进行比赛以确定最终赢家，因此需要再在外面加一层括号。
于是最终答案是((1,4),(2,3))。
</pre>

<strong>示例 3：</strong>

<pre><strong>输入:</strong> 8
<strong>输出:</strong> (((1,8),(4,5)),((2,7),(3,6)))
<strong>解析:</strong> 
第一轮: (1,8),(2,7),(3,6),(4,5)
第二轮: ((1,8),(4,5)),((2,7),(3,6))
第三轮 (((1,8),(4,5)),((2,7),(3,6)))
由于第三轮会决出最终胜者，故输出答案为(((1,8),(4,5)),((2,7),(3,6)))。
</pre>



<strong>注意:</strong>

<ol>
	<strong>n</strong>的范围是[2, 2<sup>12</sup>].
	保证 n 可以写成2<sup>k</sup>的形式，其中 k 是正整数。
</ol>



输出比赛匹配对

During the NBA playoffs, we always arrange the rather strong team to play with the rather weak team, like make the rank 1 team play with the rank n<sub>th</sub> team, which is a good strategy to make the contest more interesting. Now, you're given <b>n</b> teams, you need to output their <b>final</b> contest matches in the form of a string.


The <b>n</b> teams are given in the form of positive integers from 1 to n, which represents their initial rank. (Rank 1 is the strongest team and Rank n is the weakest team.) We'll use parentheses('(', ')') and commas(',') to represent the contest team pairing - parentheses('(' , ')') for pairing and commas(',') for partition. During the pairing process in each round, you always need to follow the strategy of making the rather strong one pair with the rather weak one. 

<b>Example 1:</b><br />
<pre>
<b>Input:</b> 2
<b>Output:</b> (1,2)
<b>Explanation:</b> 
Initially, we have the team 1 and the team 2, placed like: 1,2.
Then we pair the team (1,2) together with '(', ')' and ',', which is the final answer.
</pre>


<b>Example 2:</b><br />
<pre>
<b>Input:</b> 4
<b>Output:</b> ((1,4),(2,3))
<b>Explanation:</b> 
In the first round, we pair the team 1 and 4, the team 2 and 3 together, as we need to make the strong team and weak team together.
And we got (1,4),(2,3).
In the second round, the winners of (1,4) and (2,3) need to play again to generate the final winner, so you need to add the paratheses outside them.
And we got the final answer ((1,4),(2,3)).
</pre>


<b>Example 3:</b><br />
<pre>
<b>Input:</b> 8
<b>Output:</b> (((1,8),(4,5)),((2,7),(3,6)))
<b>Explanation:</b> 
First round: (1,8),(2,7),(3,6),(4,5)
Second round: ((1,8),(4,5)),((2,7),(3,6))
Third round: (((1,8),(4,5)),((2,7),(3,6)))
Since the third round will generate the final winner, you need to output the answer (((1,8),(4,5)),((2,7),(3,6))).
</pre>


<b>Note:</b><br>
<ol>
The <b>n</b> is in range [2, 2<sup>12</sup>].
We ensure that the input <b>n</b> can be converted into the form 2<sup>k</sup>, where k is a positive integer.
</ol>
