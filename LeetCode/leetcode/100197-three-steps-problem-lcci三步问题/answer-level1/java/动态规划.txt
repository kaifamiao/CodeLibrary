### 解题思路
设f(n)为n台阶的上楼方式数，则第n阶台阶可以由迈1步、迈2步、迈3步登上去。当迈1步登上第n阶台阶时有f(n-1)种走法，当迈2步登上第n阶台阶时有f(n-2)种走法，当迈3步登上第n阶台阶时有f(n-3)种走法。因此得出递归关系:
```
f(n) = f(n-1) + f(n-2) + f(n-3) (n > 3)
f(3) = 4
f(2) = 2
f(1) = 1
```
跟斐波那契数列一样，函数增长的非常快，模1000000007后的整数相加中间结果需要用long保存保证不溢出（int最大值为2147483647）。

### 代码

```java
class Solution {
    public int waysToStep(int n) {
        long x3 = 1, x2 = 2, x1 = 4, x = 0;
        if (n == 1) return 1;        
        if (n == 2) return 2;        
        if (n == 3) return 4;        
        for (int i = 4; i <= n; i++) {
            //结果可能很大，你需要对结果模1000000007
            x = (x1 + x2 + x3) % 1000000007;
            x3 = x2;
            x2 = x1;
            x1 = x;
        }
        return (int) x;
    }
}
```