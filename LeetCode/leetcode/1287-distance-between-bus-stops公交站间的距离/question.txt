distance-between-bus-stops
环形公交路线上有<code>n</code>个站，按次序从<code>0</code>到<code>n - 1</code>进行编号。我们已知每一对相邻公交站之间的距离，<code>distance[i]</code>表示编号为<code>i</code>的车站和编号为<code>(i + 1) % n</code>的车站之间的距离。

环线上的公交车都可以按顺时针和逆时针的方向行驶。

返回乘客从出发点<code>start</code>到目的地<code>destination</code>之间的最短距离。



<strong>示例 1：</strong>

<img alt="" src="https://assets.leetcode-cn.com/aliyun-lc-upload/uploads/2019/09/08/untitled-diagram-1.jpg" style="height: 240px; width: 388px;">

<pre><strong>输入：</strong>distance = [1,2,3,4], start = 0, destination = 1
<strong>输出：</strong>1
<strong>解释：</strong>公交站 0 和 1 之间的距离是 1 或 9，最小值是 1。</pre>



<strong>示例 2：</strong>

<img alt="" src="https://assets.leetcode-cn.com/aliyun-lc-upload/uploads/2019/09/08/untitled-diagram-1-1.jpg" style="height: 240px; width: 388px;">

<pre><strong>输入：</strong>distance = [1,2,3,4], start = 0, destination = 2
<strong>输出：</strong>3
<strong>解释：</strong>公交站 0 和 2 之间的距离是 3 或 7，最小值是 3。
</pre>



<strong>示例 3：</strong>

<img alt="" src="https://assets.leetcode-cn.com/aliyun-lc-upload/uploads/2019/09/08/untitled-diagram-1-2.jpg" style="height: 240px; width: 388px;">

<pre><strong>输入：</strong>distance = [1,2,3,4], start = 0, destination = 3
<strong>输出：</strong>4
<strong>解释：</strong>公交站 0 和 3 之间的距离是 6 或 4，最小值是 4。
</pre>



<strong>提示：</strong>

<ul>
	<code>1 &lt;= n&lt;= 10^4</code>
	<code>distance.length == n</code>
	<code>0 &lt;= start, destination &lt; n</code>
	<code>0 &lt;= distance[i] &lt;= 10^4</code>
</ul>

公交站间的距离
A bushas <code>n</code> stops numbered from <code>0</code> to <code>n - 1</code> that forma circle. We know the distance between all pairs of neighboring stops where <code>distance[i]</code> is the distance between the stops number<code>i</code> and <code>(i + 1) % n</code>.

The bus goes along both directionsi.e. clockwise and counterclockwise.

Return the shortest distance between the given<code>start</code>and <code>destination</code>stops.


<strong>Example 1:</strong>

<img alt="" src="https://assets.leetcode.com/uploads/2019/09/03/untitled-diagram-1.jpg" style="width: 388px; height: 240px;" />

<pre>
<strong>Input:</strong> distance = [1,2,3,4], start = 0, destination = 1
<strong>Output:</strong> 1
<strong>Explanation:</strong> Distance between 0 and 1 is 1 or 9, minimum is 1.</pre>



<strong>Example 2:</strong>

<img alt="" src="https://assets.leetcode.com/uploads/2019/09/03/untitled-diagram-1-1.jpg" style="width: 388px; height: 240px;" />

<pre>
<strong>Input:</strong> distance = [1,2,3,4], start = 0, destination = 2
<strong>Output:</strong> 3
<strong>Explanation:</strong> Distance between 0 and 2 is 3 or 7, minimum is 3.
</pre>



<strong>Example 3:</strong>

<img alt="" src="https://assets.leetcode.com/uploads/2019/09/03/untitled-diagram-1-2.jpg" style="width: 388px; height: 240px;" />

<pre>
<strong>Input:</strong> distance = [1,2,3,4], start = 0, destination = 3
<strong>Output:</strong> 4
<strong>Explanation:</strong> Distance between 0 and 3 is 6 or 4, minimum is 4.
</pre>


<strong>Constraints:</strong>

<ul>
	<code>1 &lt;= n&lt;= 10^4</code>
	<code>distance.length == n</code>
	<code>0 &lt;= start, destination &lt; n</code>
	<code>0 &lt;= distance[i] &lt;= 10^4</code>
</ul>