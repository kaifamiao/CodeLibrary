verify-preorder-sequence-in-binary-search-tree
给定一个整数数组，你需要验证它是否是一个二叉搜索树正确的先序遍历序列。

你可以假定该序列中的数都是不相同的。

参考以下这颗二叉搜索树：

<pre>     5
    / \
   2   6
  / \
 1   3</pre>

<strong>示例 1：</strong>

<pre><strong>输入: </strong>[5,2,6,1,3]
<strong>输出: </strong>false</pre>

<strong>示例 2：</strong>

<pre><strong>输入: </strong>[5,2,1,3,6]
<strong>输出: </strong>true</pre>

<strong>进阶挑战：</strong>

您能否使用恒定的空间复杂度来完成此题？

验证前序遍历序列二叉搜索树
Given an array of numbers, verify whether it is the correct preorder traversal sequence of a binary search tree.

You may assume each number in the sequence is unique.

Consider the followingbinary search tree:

<pre>
     5
    / \
   2   6
  / \
 1   3</pre>

<strong>Example 1:</strong>

<pre>
<strong>Input:</strong> [5,2,6,1,3]
<strong>Output:</strong> false</pre>

<strong>Example 2:</strong>

<pre>
<strong>Input:</strong> [5,2,1,3,6]
<strong>Output:</strong> true</pre>

<b>Follow up:</b><br />
Could you do it using only constant space complexity?
