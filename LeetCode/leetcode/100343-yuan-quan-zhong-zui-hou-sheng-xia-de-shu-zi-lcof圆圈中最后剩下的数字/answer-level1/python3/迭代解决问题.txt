### 解题思路
  以前看到过的一个思路
    **计算每次删除一个数字的时候，新的位置和老的位置的关系**
    那么此时，我们知道最后一个位置的新的坐标=0
    那么反过来推导，其上一次被删除之前的坐标为 new = (0 + m)%2
    其中m=每次要删除的第几个数据
    new = (new + m) % i # 迭代公式

### 代码

```python3
class Solution:
    """
    以前看到过的一个思路
    计算每次删除一个数字的时候，新的位置和老的位置的关系
    那么此时，我们知道最后一个位置的新的坐标=0
    那么反过来推导，其上一次被删除之前的坐标为 new = (0 + m)%2
    其中m=每次要删除的第几个数据
    new = (new + m) % i # 迭代公式
    """
    def lastRemaining(self, n: int, m: int) -> int:
        new = 0
        for i in range(2, n+1):
            new = (new + m) % i
        return new
```