design-excel-sum-formula
你的任务是实现 Excel 的求和功能，具体的操作如下：

<code>Excel(int H, char W):</code>这是一个构造函数，输入表明了 Excel 的高度和宽度。H 是一个正整数，范围从 1 到 26，代表高度。W 是一个字符，范围从 &#39;A&#39; 到 &#39;Z&#39;，宽度等于从 &#39;A&#39; 到 W 的字母个数。Excel 表格是一个高度 * 宽度的二维整数数组，数组中元素初始化为 0。第一行下标从 1 开始，第一列下标从 &#39;A&#39; 开始。



<code>void Set(int row, char column, int val):</code>设置<code>C(row, column)</code> 中的值为 val。



<code>int Get(int row, char column):</code> 返回<code>C(row, column)</code>中的值。



<code>int Sum(int row, char column, List of Strings : numbers):</code> 这个函数会将计算的结果放入 <code>C(row, column)</code>中，计算的结果等于在 <code>numbers</code> 中代表的所有元素之和，这个函数同时也会将这个结果返回。求和公式会一直计算更新结果直到这个公式被其他的值或者公式覆盖。

<code>numbers</code>是若干字符串的集合，每个字符串代表单个位置或一个区间。如果这个字符串表示单个位置，它的格式如下：<code>ColRow</code>，例如 &quot;F7&quot; 表示位置(7, F) 。如果这个字符串表示一个区间，它的格式如下：<code>ColRow1:ColRow2</code>。区间就是左上角为 ColRow1 右下角为 ColRow2 的长方形。



<strong>样例 1 ：</strong>



<pre>Excel(3,&quot;C&quot;); 
// 构造一个 3*3 的二维数组，初始化全是 0。
//   A B C
// 1 0 0 0
// 2 0 0 0
// 3 0 0 0

Set(1, &quot;A&quot;, 2);
// 设置 C(1,&quot;A&quot;) 为 2。
//   A B C
// 1 2 0 0
// 2 0 0 0
// 3 0 0 0

Sum(3, &quot;C&quot;, [&quot;A1&quot;, &quot;A1:B2&quot;]);
// 将 C(3,&quot;C&quot;) 的值设为 C(1,&quot;A&quot;) 单点，左上角为 C(1,&quot;A&quot;) 右下角为 C(2,&quot;B&quot;) 的长方形，所有元素之和。返回值 4。 
//   A B C
// 1 2 0 0
// 2 0 0 0
// 3 0 0 4

Set(2, &quot;B&quot;, 2);
// 将 C(2,&quot;B&quot;) 设为 2。 注意 C(3, &quot;C&quot;) 的值也同时改变。
//   A B C
// 1 2 0 0
// 2 0 2 0
// 3 0 0 6
</pre>



<strong>注释 ：</strong>

<ol>
	你可以认为不会出现循环求和的定义，比如说：A1 = sum(B1) ，B1 = sum(A1)。
	测试数据中，字母表示用双引号。
	请记住<strong>清零</strong>Excel 类中的变量，因为静态变量、类变量会在多组测试数据中保存之前结果。详情请看<a href="http://leetcode.com/faq/#different-output" target="_blank">这里</a>。
</ol>



设计 Excel 求和公式
Your task is to design the basic function of Excel and implement the function of sum formula.  Specifically, you need to implement the following functions:



<code>Excel(int H, char W):</code> This is the constructor. The inputs represents the height and width of the Excel form. <b>H</b> is a positive integer, range from 1 to 26. It represents the height. <b>W</b> is a character range from 'A' to 'Z'. It represents that the width is the number of characters from 'A' to <b>W</b>. The Excel form content is represented by a height * width 2D integer array <code>C</code>, it should be initialized to zero. You should assume that the first row of <code>C</code> starts from 1, and the first column of <code>C</code> starts from 'A'.

<br>

<code>void Set(int row, char column, int val):</code> Change the value at <code>C(row, column)</code> to be val.
<br>
<code>int Get(int row, char column):</code> Return the value at <code>C(row, column)</code>.
<br>
<code>int Sum(int row, char column, List of Strings : numbers):</code> This function calculate and set the value at <code>C(row, column)</code>, where the value should be the sum of cells represented by <code>numbers</code>. This function return the sum result at <code>C(row, column)</code>. This sum formula should exist until this cell is overlapped by another value or another sum formula.

<code>numbers</code> is a list of strings that each string represent a cell or a range of cells. If the string represent a single cell, then it has the following format : <code>ColRow</code>. For example, "F7" represents the cell at (7, F). 

If the string represent a range of cells, then it has the following format : <code>ColRow1:ColRow2</code>. The range will always be a rectangle, and ColRow1 represent the position of the top-left cell, and ColRow2 represents the position of the bottom-right cell. 
<br>
<b>Example 1:</b><br />
<pre>
Excel(3,"C"); 
// construct a 3*3 2D array with all zero.
//   A B C
// 1 0 0 0
// 2 0 0 0
// 3 0 0 0

Set(1, "A", 2);
// set C(1,"A") to be 2.
//   A B C
// 1 2 0 0
// 2 0 0 0
// 3 0 0 0

Sum(3, "C", ["A1", "A1:B2"]);
// set C(3,"C") to be the sum of value at C(1,"A") and the values sum of the rectangle range whose top-left cell is C(1,"A") and bottom-right cell is C(2,"B"). Return 4. 
//   A B C
// 1 2 0 0
// 2 0 0 0
// 3 0 0 4

Set(2, "B", 2);
// set C(2,"B") to be 2. Note C(3, "C") should also be changed.
//   A B C
// 1 2 0 0
// 2 0 2 0
// 3 0 0 6
</pre>


<b>Note:</b><br>
<ol>
You could assume that there won't be any circular sum reference. For example, A1 = sum(B1) and B1 = sum(A1).
 The test cases are using double-quotes to represent a character.
Please remember to <b>RESET</b> your class variables declared in class Excel, as static/class variables are <b>persisted across multiple test cases</b>. Please see <a href="https://leetcode.com/faq/#different-output">here</a> for more details.
</ol>
