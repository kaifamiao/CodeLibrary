想象有条这样的贪吃蛇：它的肚子的容量为`K`，每吃掉一块食物（`1`代表食物），肚子的容量不变大也不变小，每吃掉一块石头（`0`代表石头，肚子的容量变小），不管是吃掉食物还是石头，身长都会增加`1`。
每当贪吃蛇无法再吃掉任何东西的时候，就无法再进食了，它必须等待他的肚子容量增加了才能继续吃，每排出来一块石头（`0`代表石头），肚子的容量又恢复了一格。
只要肚子不空，那么就一直吃，直到没得吃了为止。
因此我们可以定义贪吃蛇的头部为：`j`,尾部为`i`,肚子的容量为`left`,最大长度为`res`

```js
var longestOnes = function(A, K) {
    let left = K;
    let i=0,j=0;
    let res=0;
    while(j<A.length){
        if(A[j]===0){       //碰到石头了，需要先判断是否能吃的下
            if(left===0){   //肚子的容量为0，吃不下了
                if(A[i]===0){   //排泄出了的是石头，肚子的容量增加了
                    left++;   
                }               
                i++;            //排泄一次
            }else{
                left--;         //吃下这块石头，肚子的容量减小了
                j++;            //吃一次
            }
        }else{
            j++;                //食物不会导致肚子容量的变化，因此直接吃了
        }
        res=Math.max(res,j-i)   //判断下此时贪吃蛇的长度
    }
    return res;
};
```