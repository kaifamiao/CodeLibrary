### 解题思路
此处撰写解题思路

### 代码

```java
/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
class Solution {
    public boolean isLeaf(TreeNode t){
        return t.left==null&&t.right==null;
    }

    public void AddLeaves(List<Integer> res,TreeNode root){
        if(isLeaf(root))
            res.add(root.val);
        else{
            if(root.left!=null)
                AddLeaves(res,root.left);
            if(root.right!=null)
                AddLeaves(res,root.right);
        }
    }
    public List<Integer> boundaryOfBinaryTree(TreeNode root) {
        List<Integer> res=new ArrayList<>();
        if(root==null)
            return res;
        if(!isLeaf(root))
            res.add(root.val);
        TreeNode t=root.left;
        while(t!=null)
        {
            if(!isLeaf(t))
                res.add(t.val);
            if(t.left!=null)
                t=t.left;
            else
                t=t.right;
        }
        AddLeaves(res,root);
        Stack<Integer> s=new Stack<>();
        t=root.right;
        while(t!=null)
        {
            if(!isLeaf(t)){
                s.push(t.val);
            }
            if(t.right!=null)
                t=t.right;
            else
                t=t.left;
        }
        while(!s.isEmpty())
            res.add(s.pop());
        return res;
    }
}
```