最简单的思路：也就是构不成三角形的条件是，当某一条边的长大于等于另外两条边的和，但是，这个条件计算机实现起来很麻烦

于是第二条思路：构不成三角形，即三个点在一条线上，这样任意两条边的斜率都相同

这个条件怎么实现呢？ (y1-y2)/(x1-x2)==(y3-y2)/(x3-x2)
ok，那么问题来了，y1-y2=1 x1-x2=1 y3-y2=3 x3-x2=2,根据int类型的乘除法规则，上面的条件左边等于1，右边也等于1，但实际上斜率并不相等
况且，x1-x2还有可能等于0，那么除数还不可以为0

这里需要逆向一下，如果除法有限制，那么我们改用乘法不就可以拜托限制了吗？

即满足(y1-y2)*(x3-x2)==(y3-y2)*(x1-x2)

于是一行代码为：

```
return !((points[0][1]-points[1][1])*(points[1][0]-points[2][0])==(points[1][1]-points[2][1])*(points[0][0]-points[1][0]))
```


