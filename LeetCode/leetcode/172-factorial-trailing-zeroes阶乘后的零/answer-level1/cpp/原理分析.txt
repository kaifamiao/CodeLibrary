### 解题思路
	最初的思路是求阶乘中因子为5的个数，方法是从0遍历到n，比较蠢，最终会超时，结合大佬们的解释，记录一下自己的理解。
	按最开始的方法，n！=1*2*3*4*5*6*7*8*9*10*11*12*13*14*15*...*25*...*55*...*n,可以看到其实1、2、3、4、6、7、8、9...是没有因子5的，也就是说每隔5个数至少出现有一个因子5，5有一个，10有一个。
	那么第一次迭代就要看有多少个间隔5，res+=n/5.接着5，10，15，20，25，30，35，40，45，50...中又每隔5个数至少出现2个因子5，如25=5*5，50=5*5*2，共有n=n/5个数。由于第一次迭代已经计算过25，50...的一个因子5了，因此第二次迭代依旧是res+=n/5;就这样每次迭代过后迭代数列就会缩小，当个数小于5时，就不再有多余的因子5了。
	怎么说呢，感觉还挺绕的


### 代码

```cpp
class Solution {
public:
    int trailingZeroes(int n) {
        int res = 0;
	int x1, x2;
	while (n >= 5) {
		res += n / 5;
		n /= 5;
	}
	return res;
    }
};
```