max-consecutive-ones-ii
给定一个二进制数组，你可以最多将1 个 0 翻转为 1，找出其中最大连续 1 的个数。

<strong>示例 1：</strong>

<pre><strong>输入：</strong>[1,0,1,1,0]
<strong>输出：</strong>4
<strong>解释：</strong>翻转第一个 0 可以得到最长的连续 1。
    当翻转以后，最大连续 1 的个数为 4。
</pre>



<strong>注：</strong>

<ul>
	输入数组只包含<code>0</code> 和<code>1</code>.
	输入数组的长度为正整数，且不超过 10,000
</ul>



<strong>进阶：</strong><br>
如果输入的数字是作为<strong> 无限流 </strong>逐个输入如何处理？换句话说，内存不能存储下所有从流中输入的数字。您可以有效地解决吗？

最大连续1的个数 II

Given a binary array, find the maximum number of consecutive 1s in this array if you can flip at most one 0.


<b>Example 1:</b><br />
<pre>
<b>Input:</b> [1,0,1,1,0]
<b>Output:</b> 4
<b>Explanation:</b> Flip the first zero will get the the maximum number of consecutive 1s.
    After flipping, the maximum number of consecutive 1s is 4.
</pre>


<b>Note:</b>
<ul>
The input array will only contain <code>0</code> and <code>1</code>.
The length of input array is a positive integer and will not exceed 10,000
</ul>


<b>Follow up:</b><br />
What if the input numbers come in one by one as an <b>infinite stream</b>? In other words, you can't store all numbers coming from the stream as it's too large to hold in memory. Could you solve it efficiently?
