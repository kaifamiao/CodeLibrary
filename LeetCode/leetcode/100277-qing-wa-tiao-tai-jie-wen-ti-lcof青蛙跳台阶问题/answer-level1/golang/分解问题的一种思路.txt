### 解题思路
首先，可以把问题拆解成“有哪些路径可以直接跳到第N层？”，由于只能跳1阶和2阶，分析得知，能直接跳到N层的路只有2个：
1、N-1层，跳1阶，到达N层
2、N-2层，跳2阶，到达N层
设f(n) 为跳N层的结果，那么 f(n) = f(n-1)+f(n-2)
由此，可以由低到高，一层一层计算结果，第1层和第2层，可以直接看出结果，所以可以从第三层开始算起
### 代码

```golang
func numWays(n int) int {
	if n == 0{
		return 1
	}
	if n <= 2{
		return n
	}

	var sum int      // 当前层的结果
	var f1  int = 2  // sum-1 层的结果  初始化为第2层的结果
	var f2 int  = 1  // sum-2 层的结果  初始化为第1层的结果
	for i := int(3);i <= n; i++{
		sum = (f1 + f2) % 1000000007 // 计算当前第i层的结果

		// 为下一次计算赋值
		f2=f1
		f1=sum
	}
    return sum
}

```