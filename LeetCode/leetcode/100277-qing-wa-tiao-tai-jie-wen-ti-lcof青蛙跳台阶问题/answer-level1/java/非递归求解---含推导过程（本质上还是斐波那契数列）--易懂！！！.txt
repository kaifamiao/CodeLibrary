class Solution {

        /*对于跳台阶问题，本质上是斐波那契数列的一个逆过程
        现推导如下：
        n=1--------f(1)=1  { 1 }
        n=2--------f(2)=2  {1+1 || 2 }
        n=3--------f(3)=f(1)+f(2){可以先走1步然后f(2)种方法
        也可以先走两步然后为f(1)种方法 故总方法为f(1)+f(2)
        }
        n=4---------f(4)=f(2)+f(3){可以先走1步然后有f(3)种方法
        也可以先走2步然后为f(2)种方法 故总方法为f(2)+f(4)
        }
        .
        .
        .
        f(n)=f(n-1)+f(n-2)
        
        */

    public int numWays(int n) {
        //非递归方法
        if(n==0) return 1;  //阶数为0时，只有一种方法，那就是（^_^）~不跳
        if(n<=2) return n;
        int fibn=0;  //最后的结果f(n)
        int fibn_1=1,fibn_2=2; //f(1)=1  f(2)=2
        for(int i=3;i<=n;i++){
            fibn = (fibn_1+fibn_2)%1000000007;
            fibn_1=fibn_2;     //改为下次会用到的f(n-1)与f(n-2)
            fibn_2=fibn;
        }
        return fibn;
    }
}