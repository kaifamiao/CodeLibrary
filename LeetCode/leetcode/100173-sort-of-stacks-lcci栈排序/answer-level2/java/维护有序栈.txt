## 03.05.栈排序

### Information

* TIME: 2020/03/08
* LINK: [Click Here](https://leetcode-cn.com/problems/sort-of-stacks-lcci/)
* TAG: `stack`

### Description

> 栈排序。 编写程序，对栈进行排序使最小元素位于栈顶。最多只能使用一个其他的临时栈存放数据，但不得将元素复制到别的数据结构（如数组）中。该栈支持如下操作：`push`、`pop`、`peek` 和 `isEmpty`。当栈为空时，`peek` 返回 -1。

### Example

```text
 输入：
["SortedStack", "push", "push", "peek", "pop", "peek"]
[[], [1], [2], [], [], []]
 输出：
[null,null,null,1,null,2]
```

### My Answer

> 主要说下`push`方法
>
> 对于一个已经有序的栈，压入一个数据`val`
>
> * 将栈顶小于`val`的值先挪到`buffer`中暂存
> * 把`val`压入
> * 将`buffer`中的数据挪回

```java
class SortedStack {
    private Stack<Integer> stack;
    private Stack<Integer> buffer;
    public SortedStack() {
        stack = new Stack<>();
        buffer = new Stack<>();
    }
    
    public void push(int val) {
        while(!stack.isEmpty() && val > stack.peek()){
            buffer.push(stack.pop());
        }
        stack.push(val);
        while(!buffer.isEmpty()){
            stack.push(buffer.pop());
        }
    }
    
    public void pop() {
        if(!stack.isEmpty()) stack.pop();
    }
    
    public int peek() {
        if(!stack.isEmpty()) return stack.peek();
        return -1;
    }
    
    public boolean isEmpty() {
        return stack.isEmpty();
    }
}

/**
 * Your SortedStack object will be instantiated and called as such:
 * SortedStack obj = new SortedStack();
 * obj.push(val);
 * obj.pop();
 * int param_3 = obj.peek();
 * boolean param_4 = obj.isEmpty();
 */
```

### Extend & Reference

> 来源：力扣（LeetCode）
> 链接：https://leetcode-cn.com
> 著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。

### More

> **更多题解，请访问我的GitHub仓库：[LeetCode 刷题日记](https://github.com/ZhuoZhuoCrayon/my-Nodes/blob/master/Daily/README_2020.md)**
>
> ![alt](https://pic.leetcode-cn.com/e92aefbc7128f43b166063315a5601607347f60fd00ea8da26f93f00a5e00aef-file_1583659698213)
>
> [**更多笔记**](https://github.com/ZhuoZhuoCrayon/my-Nodes)：**`Vue` `Java SSM 框架` `阿里云服务器` `JavaScript/HTML/CSS`   `数据库` ...**
>
> **我的GitHub主页 -> [ZhuoZhuoCrayon](https://github.com/ZhuoZhuoCrayon)**
>
> 共勉~

