find-in-mountain-array
（这是一个 <strong>交互式问题</strong>）

给你一个 <strong>山脉数组</strong><code>mountainArr</code>，请你返回能够使得<code>mountainArr.get(index)</code><strong>等于</strong><code>target</code><strong>最小</strong>的下标 <code>index</code>值。

如果不存在这样的下标 <code>index</code>，就请返回<code>-1</code>。



何为山脉数组？如果数组<code>A</code> 是一个山脉数组的话，那它满足如下条件：

<strong>首先</strong>，<code>A.length &gt;= 3</code>

<strong>其次</strong>，在<code>0 &lt; i&lt; A.length - 1</code>条件下，存在 <code>i</code> 使得：

<ul>
	<code>A[0] &lt; A[1] &lt; ... A[i-1] &lt; A[i]</code>
	<code>A[i] &gt; A[i+1] &gt; ... &gt; A[A.length - 1]</code>
</ul>



你将<strong>不能直接访问该山脉数组</strong>，必须通过<code>MountainArray</code>接口来获取数据：

<ul>
	<code>MountainArray.get(k)</code>- 会返回数组中索引为<code>k</code>的元素（下标从 0 开始）
	<code>MountainArray.length()</code>- 会返回该数组的长度
</ul>



<strong>注意：</strong>

对<code>MountainArray.get</code>发起超过 <code>100</code> 次调用的提交将被视为错误答案。此外，任何试图规避判题系统的解决方案都将会导致比赛资格被取消。

为了帮助大家更好地理解交互式问题，我们准备了一个样例 &ldquo;<strong>答案</strong>&rdquo;：<a href="https://leetcode-cn.com/playground/RKhe3ave" target="_blank">https://leetcode-cn.com/playground/RKhe3ave</a>，请注意这 <strong>不是一个正确答案</strong>。

<ol>
</ol>



<strong>示例 1：</strong>

<pre><strong>输入：</strong>array = [1,2,3,4,5,3,1], target = 3
<strong>输出：</strong>2
<strong>解释：</strong>3 在数组中出现了两次，下标分别为 2 和 5，我们返回最小的下标 2。</pre>

<strong>示例 2：</strong>

<pre><strong>输入：</strong>array = [0,1,2,4,2,1], target = 3
<strong>输出：</strong>-1
<strong>解释：</strong>3 在数组中没有出现，返回 -1。
</pre>



<strong>提示：</strong>

<ul>
	<code>3 &lt;= mountain_arr.length() &lt;= 10000</code>
	<code>0 &lt;= target &lt;= 10^9</code>
	<code>0 &lt;= mountain_arr.get(index) &lt;=10^9</code>
</ul>

山脉数组中查找目标值
<em>(This problem is an<strong>interactive problem</strong>.)</em>

You may recall that an array<code>A</code> is a <em>mountain array</em> if and only if:

<ul>
	<code>A.length &gt;= 3</code>
	There exists some<code>i</code>with<code>0 &lt; i&lt; A.length - 1</code>such that:
	<ul>
		<code>A[0] &lt; A[1] &lt; ... A[i-1] &lt; A[i]</code>
		<code>A[i] &gt; A[i+1] &gt; ... &gt; A[A.length - 1]</code>
	</ul>
	
</ul>

Given a mountainarray <code>mountainArr</code>, return the <strong>minimum</strong><code>index</code> such that <code>mountainArr.get(index) == target</code>. If such an <code>index</code>doesn&#39;t exist, return <code>-1</code>.

<strong>You can&#39;t access the mountain array directly.</strong> You may only access the array using a<code>MountainArray</code>interface:

<ul>
	<code>MountainArray.get(k)</code> returns the element of the array at index <code>k</code>(0-indexed).
	<code>MountainArray.length()</code>returns the length of the array.
</ul>

Submissions making more than <code>100</code> calls to<code>MountainArray.get</code>will be judged <em>Wrong Answer</em>. Also, any solutions that attempt to circumvent the judgewill result in disqualification.

<ol>
</ol>


<strong>Example 1:</strong>

<pre>
<strong>Input:</strong> array = [1,2,3,4,5,3,1], target = 3
<strong>Output:</strong> 2
<strong>Explanation:</strong> 3 exists in the array, at index=2 and index=5. Return the minimum index, which is 2.</pre>

<strong>Example 2:</strong>

<pre>
<strong>Input:</strong> array = [0,1,2,4,2,1], target = 3
<strong>Output:</strong> -1
<strong>Explanation:</strong> 3 does not exist in <code>the array,</code> so we return -1.
</pre>


<strong>Constraints:</strong>

<ul>
	<code>3 &lt;= mountain_arr.length() &lt;= 10000</code>
	<code>0 &lt;= target &lt;= 10^9</code>
	<code>0 &lt;= mountain_arr.get(index) &lt;=10^9</code>
</ul>
