find-winner-on-a-tic-tac-toe-game
<em>A</em> 和<em>B</em>在一个<em>3</em>x<em>3</em>的网格上玩井字棋。

井字棋游戏的规则如下：

<ul>
	玩家轮流将棋子放在空方格 (&quot; &quot;) 上。
	第一个玩家 A 总是用&quot;X&quot; 作为棋子，而第二个玩家 B 总是用 &quot;O&quot; 作为棋子。
	&quot;X&quot; 和 &quot;O&quot; 只能放在空方格中，而不能放在已经被占用的方格上。
	只要有 3 个相同的（非空）棋子排成一条直线（行、列、对角线）时，游戏结束。
	如果所有方块都放满棋子（不为空），游戏也会结束。
	游戏结束后，棋子无法再进行任何移动。
</ul>

给你一个数组 <code>moves</code>，其中每个元素是大小为 <code>2</code> 的另一个数组（元素分别对应网格的行和列），它按照 <em>A</em> 和 <em>B</em> 的行动顺序（先 <em>A</em> 后 <em>B</em>）记录了两人各自的棋子位置。

如果游戏存在获胜者（<em>A</em> 或 <em>B</em>），就返回该游戏的获胜者；如果游戏以平局结束，则返回 &quot;Draw&quot;；如果仍会有行动（游戏未结束），则返回 &quot;Pending&quot;。

你可以假设<code>moves</code>都 <strong>有效</strong>（遵循井字棋规则），网格最初是空的，<em>A</em> 将先行动。



<strong>示例 1：</strong>

<pre><strong>输入：</strong>moves = [[0,0],[2,0],[1,1],[2,1],[2,2]]
<strong>输出：</strong>&quot;A&quot;
<strong>解释：</strong>&quot;A&quot; 获胜，他总是先走。
&quot;X  &quot;    &quot;X  &quot;    &quot;X  &quot;    &quot;X  &quot;    &quot;<strong>X</strong>  &quot;
&quot;   &quot; -&gt; &quot;   &quot; -&gt; &quot; X &quot; -&gt; &quot; X &quot; -&gt; &quot; <strong>X</strong> &quot;
&quot;   &quot;    &quot;O  &quot;    &quot;O  &quot;    &quot;OO &quot;    &quot;OO<strong>X</strong>&quot;
</pre>

<strong>示例 2：</strong>

<pre><strong>输入：</strong>moves = [[0,0],[1,1],[0,1],[0,2],[1,0],[2,0]]
<strong>输出：</strong>&quot;B&quot;
<strong>解释：</strong>&quot;B&quot; 获胜。
&quot;X  &quot;    &quot;X  &quot;    &quot;XX &quot;    &quot;XXO&quot;    &quot;XXO&quot;    &quot;XX<strong>O</strong>&quot;
&quot;   &quot; -&gt; &quot; O &quot; -&gt; &quot; O &quot; -&gt; &quot; O &quot; -&gt; &quot;XO &quot; -&gt; &quot;X<strong>O</strong> &quot; 
&quot;   &quot;    &quot;   &quot;    &quot;   &quot;    &quot;   &quot;    &quot;   &quot;    &quot;<strong>O</strong>  &quot;
</pre>

<strong>示例 3：</strong>

<pre><strong>输入：</strong>moves = [[0,0],[1,1],[2,0],[1,0],[1,2],[2,1],[0,1],[0,2],[2,2]]
<strong>输出：</strong>&quot;Draw&quot;
<strong>输出：</strong>由于没有办法再行动，游戏以平局结束。
&quot;XXO&quot;
&quot;OOX&quot;
&quot;XOX&quot;
</pre>

<strong>示例 4：</strong>

<pre><strong>输入：</strong>moves = [[0,0],[1,1]]
<strong>输出：</strong>&quot;Pending&quot;
<strong>解释：</strong>游戏还没有结束。
&quot;X  &quot;
&quot; O &quot;
&quot;   &quot;
</pre>



<strong>提示：</strong>

<ul>
	<code>1 &lt;= moves.length &lt;= 9</code>
	<code>moves[i].length == 2</code>
	<code>0 &lt;= moves[i][j] &lt;= 2</code>
	<code>moves</code>里没有重复的元素。
	<code>moves</code> 遵循井字棋的规则。
</ul>

找出井字棋的获胜者
Tic-tac-toe is playedbytwo players <em>A</em> and <em>B</em> on a<i>3</i>x<i>3</i>grid.

Here are the rules of Tic-Tac-Toe:

<ul>
	Players take turns placing characters into empty squares (&quot; &quot;).
	The first player <em>A</em> always places &quot;X&quot; characters, while the second player <em>B</em>always places &quot;O&quot; characters.
	&quot;X&quot; and &quot;O&quot; characters are always placed into empty squares, never on filled ones.
	The game ends when there are 3 of the same (non-empty) character filling any row, column, or diagonal.
	The game also ends if all squares are non-empty.
	No more moves can be played if the game is over.
</ul>

Given an array <code>moves</code> where each elementis another array of size 2 corresponding to the row and column of the grid where they mark their respective character in the order in which <em>A</em> and <em>B</em> play.

Return the winner of the game if it exists (<em>A</em> or <em>B</em>), in case the game ends in a draw return &quot;Draw&quot;, if there are still movements to play return &quot;Pending&quot;.

You can assume that<code>moves</code> is<strong>valid</strong> (It follows the rules of Tic-Tac-Toe),the grid is initially empty and <em>A</em> will play <strong>first</strong>.


<strong>Example 1:</strong>

<pre>
<strong>Input:</strong> moves = [[0,0],[2,0],[1,1],[2,1],[2,2]]
<strong>Output:</strong> &quot;A&quot;
<strong>Explanation:</strong> &quot;A&quot; wins, he always plays first.
&quot;X  &quot;    &quot;X  &quot;    &quot;X  &quot;    &quot;X  &quot;    &quot;<strong>X</strong>  &quot;
&quot;   &quot; -&gt; &quot;   &quot; -&gt; &quot; X &quot; -&gt; &quot; X &quot; -&gt; &quot; <strong>X</strong> &quot;
&quot;   &quot;    &quot;O  &quot;    &quot;O  &quot;    &quot;OO &quot;    &quot;OO<strong>X</strong>&quot;
</pre>

<strong>Example 2:</strong>

<pre>
<strong>Input:</strong> moves = [[0,0],[1,1],[0,1],[0,2],[1,0],[2,0]]
<strong>Output:</strong> &quot;B&quot;
<strong>Explanation:</strong> &quot;B&quot; wins.
&quot;X  &quot;    &quot;X  &quot;    &quot;XX &quot;    &quot;XXO&quot;    &quot;XXO&quot;    &quot;XX<strong>O</strong>&quot;
&quot;   &quot; -&gt; &quot; O &quot; -&gt; &quot; O &quot; -&gt; &quot; O &quot; -&gt; &quot;XO &quot; -&gt; &quot;X<strong>O</strong> &quot; 
&quot;   &quot;    &quot;   &quot;    &quot;   &quot;    &quot;   &quot;    &quot;   &quot;    &quot;<strong>O</strong>  &quot;
</pre>

<strong>Example 3:</strong>

<pre>
<strong>Input:</strong> moves = [[0,0],[1,1],[2,0],[1,0],[1,2],[2,1],[0,1],[0,2],[2,2]]
<strong>Output:</strong> &quot;Draw&quot;
<strong>Explanation:</strong> The game ends in a draw since there are no moves to make.
&quot;XXO&quot;
&quot;OOX&quot;
&quot;XOX&quot;
</pre>

<strong>Example 4:</strong>

<pre>
<strong>Input:</strong> moves = [[0,0],[1,1]]
<strong>Output:</strong> &quot;Pending&quot;
<strong>Explanation:</strong> The game has not finished yet.
&quot;X  &quot;
&quot; O &quot;
&quot;   &quot;
</pre>


<strong>Constraints:</strong>

<ul>
	<code>1 &lt;= moves.length &lt;= 9</code>
	<code>moves[i].length == 2</code>
	<code>0 &lt;= moves[i][j] &lt;= 2</code>
	There are no repeated elements on <code>moves</code>.
	<code>moves</code> follow the rules of tic tac toe.
</ul>