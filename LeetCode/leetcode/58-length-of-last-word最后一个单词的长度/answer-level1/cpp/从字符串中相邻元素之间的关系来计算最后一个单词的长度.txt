__只需要考虑当前索引值对应的字符以及下一个索引值所对应的字符之间的关系即可。__

**-什么情况下需要开始计算最后一个单词的长度？**
只要是当前索引值对应字符串中的字符不为' '空格时，此时单词长度就应该加一；

**-什么情况下需要对最后一个单词长度清零？**
只有在当前索引值对应的字符为' '且下一个索引值对应的字符不为' '且不为'\0'时才需要将累计的最后一个单词的长度清零。
因为当遭遇连续的空格和连续的非空格字符时是需要累计单词长度的。

同时考虑两个特殊情况：字符串长度分别为0和1，单独对二者进行处理即可。最终代码如下所示：

```
class Solution {
public:
    int lengthOfLastWord(string s) {
        if(s[0]=='\0') return 0;
        int size = s.size(); // not include '\0'
        if(size==1){
            if(s[0]==' ') return 0;
            else return 1;
        }
        int num=0;
        for(int i=0; i<size; i++){
            if(s[i]!=' ') num++;
            else if(s[i]==' ' && s[i+1]!=' ' && s[i+1]!='\0') num=0;
        }
        return num;
    }
};
```


