second-degree-follower
在 facebook 中，表<code>follow</code>会有 2 个字段： <strong>followee</strong>, <strong>follower</strong>，分别表示被关注者和关注者。

请写一个 sql 查询语句，对每一个关注者，查询他的关注者数目。

比方说：

<pre>+-------------+------------+
| followee    | follower   |
+-------------+------------+
|     A       |     B      |
|     B       |     C      |
|     B       |     D      |
|     D       |     E      |
+-------------+------------+
</pre>

应该输出：

<pre>+-------------+------------+
| follower    | num        |
+-------------+------------+
|     B       |  2         |
|     D       |  1         |
+-------------+------------+
</pre>

<strong>解释：</strong>

B 和 D 都在在<strong>follower</strong>字段中出现，作为被关注者，B 被 C 和 D 关注，D 被 E 关注。A 不在 <strong>follower</strong>字段内，所以A不在输出列表中。



<strong>注意：</strong><br>
被关注者永远不会被他 / 她自己关注。<br>
将结果按照字典序返回。



二级关注者
In facebook, there is a <code>follow</code> table with two columns: <b>followee</b>, <b>follower</b>.

Please write a sql query to get the amount of each follower&rsquo;s follower if he/she has one.

For example:

<pre>
+-------------+------------+
| followee    | follower   |
+-------------+------------+
|     A       |     B      |
|     B       |     C      |
|     B       |     D      |
|     D       |     E      |
+-------------+------------+
</pre>
should output:

<pre>
+-------------+------------+
| follower    | num        |
+-------------+------------+
|     B       |  2         |
|     D       |  1         |
+-------------+------------+
</pre>
<b>Explaination:</b><br />
Both B and D exist in the follower list, when as a followee, B&#39;s follower is C and D, and D&#39;s follower is E. A does not exist in follower list.



<b>Note:</b><br />
Followee would not follow himself/herself in all cases.<br />
Please display the result in follower&#39;s alphabet order.

