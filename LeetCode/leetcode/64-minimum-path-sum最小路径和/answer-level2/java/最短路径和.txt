### 解题思路
设f(m, n)为从grid[0,0]到grid[m, n]的最短路径，而grid[n, m]只能是从grid[n-1][m]或gird[m, n-1]走到。因此得出f(m, n) = grid[m, n] + min{f(m-1, n), f(m, n-1)}

### 代码

```java
class Solution {
    public int minPathSum(int[][] grid) {
		int m = grid.length, n = grid[0].length;
		int[][] dp = new int[m][n];
		for (int i = 0; i < m; i++) {
			for (int j = 0; j < n; j++) {
				if (i == 0 && j == 0) {
					dp[i][j] = grid[i][j];
				} else if (i == 0) {
					dp[i][j] = grid[i][j] + dp[i][j-1];
				} else if (j == 0) {
					dp[i][j] = grid[i][j] + dp[i-1][j];
				} else {
					dp[i][j] = grid[i][j] + Math.min(dp[i-1][j], dp[i][j-1]);
				}
			}
		}
		
        return dp[m-1][n-1];
    }
}
```