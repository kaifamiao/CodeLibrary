remove-palindromic-subsequences
给你一个字符串<code>s</code>，它仅由字母<code>&#39;a&#39;</code> 和 <code>&#39;b&#39;</code>组成。每一次删除操作都可以从 <code>s</code> 中删除一个回文 <strong>子序列</strong>。

返回删除给定字符串中所有字符（字符串为空）的最小删除次数。

「子序列」定义：如果一个字符串可以通过删除原字符串某些字符而不改变原字符顺序得到，那么这个字符串就是原字符串的一个子序列。

「回文」定义：如果一个字符串向后和向前读是一致的，那么这个字符串就是一个回文。



<strong>示例 1：</strong>

<pre><strong>输入：</strong>s = &quot;ababa&quot;
<strong>输出：</strong>1
<strong>解释：</strong>字符串本身就是回文序列，只需要删除一次。
</pre>

<strong>示例 2：</strong>

<pre><strong>输入：</strong>s = &quot;abb&quot;
<strong>输出：</strong>2
<strong>解释：</strong>&quot;<strong>a</strong>bb&quot; -&gt; &quot;<strong>bb</strong>&quot; -&gt; &quot;&quot;. 
先删除回文子序列 &quot;a&quot;，然后再删除 &quot;bb&quot;。
</pre>

<strong>示例 3：</strong>

<pre><strong>输入：</strong>s = &quot;baabb&quot;
<strong>输出：</strong>2
<strong>解释：</strong>&quot;<strong>baa</strong>b<strong>b</strong>&quot; -&gt; &quot;b&quot; -&gt; &quot;&quot;. 
先删除回文子序列 &quot;baab&quot;，然后再删除 &quot;b&quot;。
</pre>

<strong>示例 4：</strong>

<pre><strong>输入：</strong>s = &quot;&quot;
<strong>输出：</strong>0
</pre>



<strong>提示：</strong>

<ul>
	<code>0 &lt;= s.length &lt;= 1000</code>
	<code>s</code> 仅包含字母&#39;a&#39; 和 &#39;b&#39;
</ul>

删除回文子序列
Given a string <code>s</code> consisting only ofletters<code>&#39;a&#39;</code> and <code>&#39;b&#39;</code>. In a single step you can remove onepalindromic <strong>subsequence</strong>from <code>s</code>.

Return the minimum number of steps to make the given string empty.

A string is a subsequence of a given string, if it is generated by deleting some characters of a given string without changing its order.

A string is called palindrome if is one that reads the same backward as well as forward.


<strong>Example 1:</strong>

<pre>
<strong>Input:</strong> s = &quot;ababa&quot;
<strong>Output:</strong> 1
<strong>Explanation:</strong> String is already palindrome
</pre>

<strong>Example 2:</strong>

<pre>
<strong>Input:</strong> s = &quot;abb&quot;
<strong>Output:</strong> 2
<strong>Explanation:</strong> &quot;<strong>a</strong>bb&quot; -&gt; &quot;<strong>bb</strong>&quot; -&gt; &quot;&quot;. 
Remove palindromic subsequence &quot;a&quot; then &quot;bb&quot;.
</pre>

<strong>Example 3:</strong>

<pre>
<strong>Input:</strong> s = &quot;baabb&quot;
<strong>Output:</strong> 2
<strong>Explanation:</strong> &quot;<strong>baa</strong>b<strong>b</strong>&quot; -&gt; &quot;b&quot; -&gt; &quot;&quot;. 
Remove palindromic subsequence &quot;baab&quot; then &quot;b&quot;.
</pre>

<strong>Example 4:</strong>

<pre>
<strong>Input:</strong> s = &quot;&quot;
<strong>Output:</strong> 0
</pre>


<strong>Constraints:</strong>

<ul>
	<code>0 &lt;= s.length &lt;= 1000</code>
	<code>s</code> only consists of letters &#39;a&#39; and &#39;b&#39;
</ul>