[337.打家劫舍三](https://leetcode-cn.com/problems/house-robber-iii/solution/)

[力扣 JS 题解。](https://github.com/GuYueJiaJie/blog/blob/master/%E7%AE%97%E6%B3%95%E4%B8%8E%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/README.md) 

题解参考：[大神解答](https://leetcode-cn.com/problems/house-robber-iii/solution/java-2ms-by-horanol/)。

## 树形DP + DFS

```javascript
/**
 * Definition for a binary tree node.
 * function TreeNode(val) {
 *     this.val = val;
 *     this.left = this.right = null;
 * }
 */
/**
 * @param {TreeNode} root
 * @return {number}
 */
var rob = function(root) {
    let res = dfs(root);
    return Math.max(res[0], res[1]);
};

function dfs(root) {
    // res[0]表示不包括根节点的最大值，res[1]为包含根节点的最大值
    let res = [0,0];
    if (root === null) return res;
    let left = dfs(root.left);
    let right = dfs(root.right);
    // 不包含根节点的最大值为左子树最大值加右子树最大值
    res[0] = Math.max(...left) + Math.max(...right);
    // 包含根节点的最大值为当前节点值加左子树包含根节点的值加右子树包含根节点的值
    res[1] = root.val + left[0] + right[0];
    return res;
}
```