此题本身无需关心右边界在哪，因为即便我们需要「确定右边界」在哪，就像大多数答案里给的那样 `right *= 2`，也不会影响最后的时间复杂度为 log(n)。如果增加了前面提到的「确定右边界」的代码，反而让代码晦涩难懂。

同时，利用题目给定的：
 1. 如果 reader.get() 访问越界，返回数字 2147483647，则该数字恰好为 32 位数的最大值；
 2. Java 中 int 为 32 位；
 3. 数组元素的值域是 [-9999, 9999]，即数组中所有元素均比 int 的最大值小，且最大数组长度为 2 * 10000 = 20000。

这 3 个特点，可以直接令右边界索引为题目给定的最大数组大小即可，即：`right = MAX_LENGTH - 1`, MAX_LENGTH = 20000。


``` Java
class Solution {
    
    private static final int MAX_LENGTH = 20000;

    public int search(ArrayReader reader, int target) {
        int left = 0;
        int right = MAX_LENGTH - 1;

        while (left <= right) {
            int mid = left + (right - left) / 2;
            int midValue = reader.get(mid);

            if (midValue < target) {
                left = mid + 1;
            } else if (midValue > target) {
                right = mid - 1;
            } else {
                return mid;
            }
        }
        return -1;
    }
}
```