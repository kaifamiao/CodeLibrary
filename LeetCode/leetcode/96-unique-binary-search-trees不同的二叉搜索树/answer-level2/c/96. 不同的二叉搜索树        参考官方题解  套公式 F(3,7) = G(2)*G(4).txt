### 解题思路
给定一个整数 n，求以 1 ... n 为节点组成的二叉搜索树有多少种？

示例:

输入: 3
输出: 5
解释:
给定 n = 3, 一共有 5 种不同结构的二叉搜索树:

   1         3     3      2      1
    \       /     /      / \      \
     3     2     1      1   3      2
    /     /       \                 \
   2     1         2                 3



i为根，  左边满足条件的树个数  G(i-1) , 右边满足条件个数为G(n-1)
那么i为中间时个数，所有组合即笛卡尔积 为 G(i-1)*G(n-1)

### 代码

```c

//参考官方题解
// 假如序列为1~7    F(3,7) = G(2)*G(4)
//F(i,n) = G(i-1) * G(n-i)

//G(n) = F(1,n) + F(2,n) + F(3,n) + ... + F(n,n)
//G(n) = G(0)*G(n-1) + G(1)*G(n-2) + G(2)*G(n-3) + ... + G(n-1)*G(0) 

//注意边界， n=0是 也是1， n为1时还是1
int numTrees(int n){

    int *G = malloc((n+1)* sizeof(int));
    
    int i,j;

    memset(G,0,(n+1)* sizeof(int));
    G[0] = 1;
    G[1] = 1;

    for(i=2;i<=n;i++){
        for(j=0;j<i;j++)
            G[i] += G[j]*G[i-j-1];    
    }
    return G[n];
}
```