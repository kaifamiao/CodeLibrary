### 解题思路
任意n个节点按顺序排成一行，如果分别以每个节点作为根节点，左边的节点构成左子树，右边的节点构成右子树，则共有n种情况，且这n种情况一定是互不相同的二叉树。如果节点数不同，则一定是不一样的二叉树。
构造递推式：假设n个节点构成的二叉树数量为F(n),
如果以i为根节点，此时左子树共有i-1个节点，有F(i-1)种二叉树；右子树有n-i个节点，有F(n-i)种二叉树。
则F(n)=\sum_{i=1}^n F(i-1)*F(n-i)。
需要注意的是F(1)=1,且F(1)=1。


### 代码

```cpp
class Solution {
public:
    int numTrees(int n) {
        if(n==1)
            return 1;
        if(n==2)
            return 2;
        int num = 2;
        vector<int> dp(n+1,0);
        dp[0] = 1;
        dp[1] = 1;
        dp[2] = 2;
        for(int i=3;i<=n;i++){
            for(int k=0;k<=i-1;k++)
                dp[i] = dp[i] + dp[k] * dp[i-k-1];
        }
        return dp[n];
    }
};
```