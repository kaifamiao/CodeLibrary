# 卡特兰数应用：
1. n个数依次入栈，有几种出栈顺序
2. 本题，不同的二叉搜索树
3. n-凸多边形划分成三角形，有多少种划分数？
4. n*n的格子，从左上角走到右下角，只能向右走和向下走，问有几种走法？
........

看完题解还不懂的，或者不了解卡特兰数的，可以参考[此篇博客](https://blog.csdn.net/cz9797/article/details/105366774)，或者其他有关资料。

大部分的卡特兰数题目可以抽象为入栈出栈问题，但此题更像是动态规划。
# 思路
**参考卡特兰公式之一： h(n)= h(0)*h(n-1) + h(1)*h(n-2) + ... + h(n-1)h(0) (其中n>=2, h(0)=h(1)=1)**
1. n个节点，序号为1,2,...,n，假设共有h(n)种。
2. 1~n号节点都可以做根节点，随便选取其中一个做根节点，并规定根节点的左子树节点序号小于根节点，右子树节点序号大于根节点。
3. 假设根节点左子树共有i个节点，则右子树有n-i-1个节点。
4. 左子树有h(i)种排法，右子树有h(n-i-1)种排法。
5. 1~n号都可以做根节点，所以i可以取0,1,2,3,...,n-1
6. 所以h(n) = h(0)*h(n-1) + h(1)*h(n-2) + ... + h(n-1)h(0)   (其中n>=2, h(0)=h(1)=1)

# 代码
```
int numTrees(int n) {
        int* arr = new int[n+1];
        memset(arr, 0, sizeof(int)*(n+1));
        arr[0] = 1; 
        for(int i=1; i<n+1; i++) {
            for(int j=0; j<i; j++) {
                arr[i] += arr[j]*arr[i-j-1];
            }
        }
        return arr[n];
    }
```

