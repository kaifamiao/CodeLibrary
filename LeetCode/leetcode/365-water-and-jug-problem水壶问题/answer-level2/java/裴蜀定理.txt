### 解题思路
首先介绍一下裴蜀等式：**若a,b是整数,且gcd(a,b)=d，那么对于任意的整数x,y,ax+by都一定是d的倍数，特别地，一定存在整数x,y，使ax+by=d成立。**

这道题看到很多人用的是广度优先搜索，代码看着就多。如果之前没有接触过类似的题，或者不知道裴蜀定理，很难有所联想。我来解释一下为什么这道题可以跟裴蜀定理联系到一起。

两个水壶x,y对应裴蜀定理中的a,b，而裴蜀定理中的x,y就是装满和清空的操作。当x或y增加1时，就表示该水壶装满了一次，减1则表示清空了一次。

对一个水壶进行操作的时候，这个水壶必然是满的或者空着，对一个半满的水壶操作可以说没有任何意义。这句话怎么理解呢，半满的水壶如何得来？一定是你对两个水壶进行倒水操作得来的，不管是操作了几次，肯定是两个水壶倒来倒去才会出现半满的情况。既然是倒腾了半天出来的，那为什么要把这操作了一半的水倒掉呢？岂不是前功尽弃？

这里所求不过是存不存在x,y使得ax+by=z。a,b表示两个水壶的容量，x,y表示装满和清空的操作次数。而ax+by的最小正值是a,b的最大公约数d，所以只要z是d的整数倍，也就是z能被d整除，即为true。
### 代码

```java
class Solution {
    public boolean canMeasureWater(int x, int y, int z) {
        if (z == 0) return true;
        if (x + y < z) return false;
        //保证x是小水壶
        if (x > y){
            y = x ^ y;
            x = x ^ y;
            y = x ^ y;
        }
        //0这个例外需要额外判断一下
        if (x == 0){
            if (y == 0) return false;
            if (y == z) return true;
            return false;
        }
        //x，y的最大公约数
        int d = 1;
        for (int i = 2; i <= x; i++){
            if (x % i == 0 && y % i == 0) d = i;
        }
        if (z % d == 0) return true;
        return false;
    }
}
```