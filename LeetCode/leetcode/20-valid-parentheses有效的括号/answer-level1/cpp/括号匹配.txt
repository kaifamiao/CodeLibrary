### 解题思路
首先分析括号匹配不成功的情况：
1、左右括号数量不匹配
    a.左括号多
        类似于（（（）），其会将整个字符串遍历完成之后发现辅助栈并不为空从而判断出不匹配。
    b.右括号多
        类似于（（））），其也会将所有匹配的字符串都遍历之后，剩余的右括号进行判断时不在匹配，进而判      断出该括号不匹配。所要注意的是在将所有的匹配的括号都遍历之后此时栈为空，不能对栈进行取栈顶元素及      出栈操作，因此我们事先在栈中入栈一个标记符，看到该标记符就意味着栈为空。
2、左右括号数量匹配
        类似于（[(])),其在将所有的左括号入栈之后发现下一个虽然是右括号，但是与栈顶元素的左括号并不匹     配，因此直接返回不匹配。
分析了不成功的情况后，我们采用一个辅助栈来进行。将匹配的括号生成一张表，下面来看代码：
### 代码

```cpp
class Solution {
public:
    bool isValid(string s) {
        stack<char> st;
        st.push('#');
        char c[150];
        c['('] = ')';
        c['{'] = '}';
        c['['] = ']';
        if(s.empty())
            return true;
        for(auto ch : s) {
            if (ch == '(' || ch == '{' || ch == '[')
                st.push(ch);
            else if (c[st.top()] == ch)
                st.pop();
            else 
                return false;
        }
        if(st.top() == '#')
            return true;
        return false;
    }
};
```