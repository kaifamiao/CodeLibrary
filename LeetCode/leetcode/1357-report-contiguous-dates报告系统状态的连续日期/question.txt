report-contiguous-dates
Table: <code>Failed</code>

<pre>+--------------+---------+
| Column Name  | Type    |
+--------------+---------+
| fail_date    | date    |
+--------------+---------+
该表主键为 fail_date。
该表包含失败任务的天数.
</pre>

Table: <code>Succeeded</code>

<pre>+--------------+---------+
| Column Name  | Type    |
+--------------+---------+
| success_date | date    |
+--------------+---------+
该表主键为 success_date。
该表包含成功任务的天数.
</pre>



系统 <strong>每天</strong> 运行一个任务。每个任务都独立于先前的任务。任务的状态可以是失败或是成功。

编写一个 SQL 查询<strong>2019-01-01</strong>到<strong>2019-12-31</strong> 期间任务连续同状态<code>period_state</code>的起止日期（<code>start_date</code> 和 <code>end_date</code>）。即如果任务失败了，就是失败状态的起止日期，如果任务成功了，就是成功状态的起止日期。

最后结果按照起始日期<code>start_date</code>排序

查询结果样例如下所示:

<pre>Failed table:
+-------------------+
| fail_date         |
+-------------------+
| 2018-12-28        |
| 2018-12-29        |
| 2019-01-04        |
| 2019-01-05        |
+-------------------+

Succeeded table:
+-------------------+
| success_date      |
+-------------------+
| 2018-12-30        |
| 2018-12-31        |
| 2019-01-01        |
| 2019-01-02        |
| 2019-01-03        |
| 2019-01-06        |
+-------------------+


Result table:
+--------------+--------------+--------------+
| period_state | start_date   | end_date     |
+--------------+--------------+--------------+
| succeeded    | 2019-01-01   | 2019-01-03   |
| failed       | 2019-01-04   | 2019-01-05   |
| succeeded    | 2019-01-06   | 2019-01-06   |
+--------------+--------------+--------------+

结果忽略了 2018 年的记录，因为我们只关心从 2019-01-01 到 2019-12-31 的记录
从 2019-01-01 到 2019-01-03 所有任务成功，系统状态为 &quot;succeeded&quot;。
从 2019-01-04 到 2019-01-05 所有任务失败，系统状态为 &quot;failed&quot;。
从 2019-01-06 到 2019-01-06 所有任务成功，系统状态为 &quot;succeeded&quot;。
</pre>

报告系统状态的连续日期
Table: <code>Failed</code>

<pre>
+--------------+---------+
| Column Name  | Type    |
+--------------+---------+
| fail_date    | date    |
+--------------+---------+
Primary key for this table is fail_date.
Failed table contains the days of failed tasks.
</pre>

Table: <code>Succeeded</code>

<pre>
+--------------+---------+
| Column Name  | Type    |
+--------------+---------+
| success_date | date    |
+--------------+---------+
Primary key for this table is success_date.
Succeeded table contains the days of succeeded tasks.
</pre>



A system is running one task <strong>every day</strong>. Every task is independent of the previous tasks. The tasks can fail or succeed.

Write an SQL query to generate a report of<code>period_state</code> for each continuous interval of days in the period from<strong>2019-01-01</strong> to <strong>2019-12-31</strong>.

<code>period_state</code> is <em>&#39;failed&#39;</em>if tasks in this interval failed or <em>&#39;succeeded&#39;</em>if tasks in this interval succeeded. Interval of days are retrieved as <code>start_date</code> and <code>end_date.</code>

Order result by <code>start_date</code>.

The query result format is in the following example:

<pre>
Failed table:
+-------------------+
| fail_date         |
+-------------------+
| 2018-12-28        |
| 2018-12-29        |
| 2019-01-04        |
| 2019-01-05        |
+-------------------+

Succeeded table:
+-------------------+
| success_date      |
+-------------------+
| 2018-12-30        |
| 2018-12-31        |
| 2019-01-01        |
| 2019-01-02        |
| 2019-01-03        |
| 2019-01-06        |
+-------------------+


Result table:
+--------------+--------------+--------------+
| period_state | start_date   | end_date     |
+--------------+--------------+--------------+
| succeeded    | 2019-01-01   | 2019-01-03   |
| failed       | 2019-01-04   | 2019-01-05   |
| succeeded    | 2019-01-06   | 2019-01-06   |
+--------------+--------------+--------------+

The report ignored the system state in 2018 as we care about the system in the period 2019-01-01 to 2019-12-31.
From 2019-01-01 to 2019-01-03 all tasks succeeded and the system state was &quot;succeeded&quot;.
From 2019-01-04 to 2019-01-05 all tasks failed and system state was &quot;failed&quot;.
From 2019-01-06 to 2019-01-06 all tasks succeeded and system state was &quot;succeeded&quot;.
</pre>