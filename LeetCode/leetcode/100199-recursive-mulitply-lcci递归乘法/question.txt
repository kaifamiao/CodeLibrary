recursive-mulitply-lcci
递归乘法。 写一个递归函数，不使用 * 运算符， 实现两个正整数的相乘。可以使用加号、减号、位移，但要吝啬一些。

 <strong>示例1:</strong>

<pre>
<strong> 输入</strong>：A = 1, B = 10
<strong> 输出</strong>：10
</pre>

 <strong>示例2:</strong>

<pre>
<strong> 输入</strong>：A = 3, B = 4
<strong> 输出</strong>：12
</pre>

 <strong>提示:</strong>

<ol>
保证乘法范围不会溢出
</ol>

递归乘法
Write a recursive function to multiply two positive integers without using the * operator. You can use addition, subtraction, and bit shifting, but you should minimize the number of those operations.

<strong>Example 1:</strong>

<pre>
<strong> Input</strong>: A = 1, B = 10
<strong> Output</strong>: 10
</pre>

<strong>Example 2:</strong>

<pre>
<strong> Input</strong>: A = 3, B = 4
<strong> Output</strong>: 12
</pre>

<strong>Note:</strong>

<ol>
	The result will not overflow.
</ol>
