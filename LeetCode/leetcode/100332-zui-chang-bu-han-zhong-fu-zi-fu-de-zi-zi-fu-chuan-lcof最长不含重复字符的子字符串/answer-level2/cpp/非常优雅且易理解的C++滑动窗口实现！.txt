为啥要滑动窗口？

本题中我们需要得到的是不重复字符的子字符串，而子字符串在这里是要求连续的，那么可以类似于一个窗口卡主了这个不重复子串的左边与右边呗，初始化窗口的左右边界都为0，我们以右边界遍历，以map来判断当前元素是否在之前已经被使用，也就是去重，若碰到重复元素，那么在[l,r]区间内，必定有重复元素呗，恢复现场同时让l右移。

```cpp
class Solution {
public:
    int lengthOfLongestSubstring(string s) {
        // 滑动窗口，维护一个固定窗口
        
        // 存储窗口内的元素
        map<char,int> m;
        // 最长字符串的长度
        int res = 0;
        int l = 0, r = 0;
        while(r< s.size() && l <= r) {
            // 当前集合中不存在这个元素，右指针后移动
            if(m[s[r]]==0) {
                m[s[r]]++;
                r++;
                res = max(res,r-l);
            } else if(m[s[r]] > 0) { // 当前集合中存在这个元素，左指针后移动
                // 清除l指向的元素
                m[s[l]]--;
                l++;
            }
        }
        return res;
    }
};
```