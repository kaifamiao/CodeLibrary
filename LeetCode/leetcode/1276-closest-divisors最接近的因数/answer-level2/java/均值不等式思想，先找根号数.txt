### 解题思路
均值不等式可知 `a+b>=2*sqrt(a*b)`，两个数和固定的情况下，两数越接近，他们的乘积越大。

所以，直接先开根号，然后递减遍历，当数字可以被sum整除，就可以直接返回了，不需要继续遍历，这个时候得到的乘积，一定是最大的。

最后只要比较num+1得到的因子和num+2得到的因子，差的绝对值较小的那个即可

### 代码

```java
class Solution {
    public int[] closestDivisors(int num) {
        int sum1 = num + 1;
        int sum2 = num + 2;
        int[] res1 = getDivisors(sum1);
        int[] res2 = getDivisors(sum2);
        return Math.abs(res1[0] - res1[1]) < Math.abs(res2[0] - res2[1]) ? res1:res2;
    }
    
    private int[] getDivisors(int sum){
        int num1 = (int) Math.sqrt(sum);
        while (true){
            if (sum % num1 == 0){
                int num2 = sum / num1;
                return new int[]{num1,num2};
            }else {
                num1--;
            }
        }
    }
}
```