nested-list-weight-sum-ii
给一个嵌套整数序列，请你返回每个数字在序列中的加权和，它们的权重由它们的深度决定。

序列中的每一个元素要么是一个整数，要么是一个序列（这个序列中的每个元素也同样是整数或序列）。

与 <a href="http://leetcode.com/problems/nested-list-weight-sum/">前一个问题</a> 不同的是，前一题的权重按照从根到叶逐一增加，而本题的权重从叶到根逐一增加。

也就是说，在本题中，叶子的权重为1，而根拥有最大的权重。

<strong>示例 1:</strong>

<pre><strong>输入: </strong>[[1,1],2,[1,1]]
<strong>输出: </strong>8 
<strong>解释: 四</strong>个 1 在深度为 1 的位置， 一个 2 在深度为 2 的位置。
</pre>

<strong>示例 2:</strong>

<pre><strong>输入: </strong>[1,[4,[6]]]
<strong>输出: </strong>17 
<strong>解释:</strong> 一个 1 在深度为 3 的位置， 一个 4 在深度为 2 的位置，一个 6 在深度为 1 的位置。 1*3 + 4*2 + 6*1 = 17。
</pre>

加权嵌套序列和 II
Given a nested list of integers, return the sum of all integers in the list weighted by their depth.

Each element is either an integer, or a list -- whose elements may also be integers or other lists.

Different from the <a href="https://leetcode.com/problems/nested-list-weight-sum/">previous question</a> where weight is increasing from root to leaf, now the weight is defined from bottom up. i.e., the leaf level integers have weight 1, and the root level integers have the largest weight.

<strong>Example 1:</strong>

<div>
<pre>
<strong>Input: </strong><span id="example-input-1-1">[[1,1],2,[1,1]]</span>
<strong>Output: </strong><span id="example-output-1">8 
<strong>Explanation: </strong>F</span>our 1&#39;s at depth 1, one 2 at depth 2.
</pre>

<div>
<strong>Example 2:</strong>

<pre>
<strong>Input: </strong><span id="example-input-2-1">[1,[4,[6]]]</span>
<strong>Output: </strong><span id="example-output-2">17 
<strong>Explanation:</strong> O</span>ne 1 at depth 3, one 4 at depth 2, and one 6 at depth 1; 1*3 + 4*2 + 6*1 = 17.
</pre>
</div>
</div>
