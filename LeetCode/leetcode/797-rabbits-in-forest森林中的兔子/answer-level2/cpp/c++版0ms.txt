2020-3-19的测试用例0ms；
//时间复杂度O(n)
//空间复杂度O(n)

题意我看有人说的很简练了，我就直接在代码注释里说吧

```
class Solution {
public:
    int numRabbits(vector<int>& answers) {
        vector<int> v(1000,0);//由于answers[i]的数值为0-999,
        //创建一个长度为1000的数组用来记录每个数字在answers中出现的次数

        for(auto num:answers)
        {
            ++v[num];//比如此时num=3,则3出现的次数+1,存入v[3]
        }

        int result=v[0];//统一算法可能思路更清晰
                        //不过answers[i]==0意味着此颜色仅此一只
                        //有几次0出现就至少有几只兔子
                        //因此v[0]的数值可以直接加到结果中

        for(int i=1;i<1000;++i)
        {
            while(v[i]>0)
            {
                result+=i+1;
                v[i]-=i+1;
            }//v[i]==0直接跳过。
//举例如此时i==3,v[3]==5
//说明3这个数字在answers中出现了5次，而3代表着这个颜色的兔子有4只。
//由于结果要求最小，则在剩最后的余数之前，每出现4次3记为一种颜色，
//result计数+4，最后不满4次时记为一种颜色，result计数仍需+4。
//5次3说明回答为3的兔子至少有两种颜色，共计至少8只
//………………我是不是废话太多
        }


        return result;//按上述方式遍历完数组v中的所有元素即可得到最终结果
    }
};
```
