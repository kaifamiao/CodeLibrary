![搜狗截图20191120140421.png](https://pic.leetcode-cn.com/b0a71fd3270f30c3d60db7b59b9d6495cf72629b6ca5ad82da8076dcbb4f9782-%E6%90%9C%E7%8B%97%E6%88%AA%E5%9B%BE20191120140421.png)
大致思路先理解2个部分
1.对于数组中不同的回答（即不同的数字）
如:[1,2,3]
第一只兔子回答1，说明它看到1个和自己不一样的，所以这种颜色共2个(包括它自己)
第二只兔子回答2，说明它看到2个和自己不一样的，所以这种颜色共3个(包括它自己)
第三只兔子回答3，说明它看到3个和自己不一样的，所以这种颜色共4个(包括它自己)
所以一共 2 + 3 + 4 = 9只兔子
2.对于数组中相同的回答（即相同的数字）
因为题目要求最少数量，只要我们可以认为兔子的回答一样的就可以是相同颜色(但并不一定都可以相同,有条件的)数量就会尽可能的少。
如:[10,10,10]
第一只兔子回答10，说明它看到10个和自己不一样的，所以这种颜色共11个(包括它自己)
第二只兔子也回答10，此时可以有2种假设：
1）如果你认为它和第一只兔子颜色不同，那么和第二只兔子的颜色相同的就又11个（包括它自己），
目前为止就有22只兔子了。
2）如果认为它和第一只兔子同色，从第一只兔子回答中得知第一种颜色有11只，第二只兔子与其同色，
所以它可以看到另外10只同色的兔子，因此它也回答10，逻辑成立。
那么目前为止兔子数量为11只，比假设1少，符合题意。那么第三只也一样可以认为同色，数量会最小。

那么是不是兔子的回答一样就可以认为同色呢？不一定
如:[3,3,3,3,3]
第一只兔子回答3，那么有4只这种颜色的,所以我们最多可以容纳4个回答3的兔子为同一颜色，若把第五只回答3的兔子也归为同色的，那就有5种这种颜色的兔子了，那它们看到的就不会是3而是4了，那么就矛盾了。
所以此情形最少是8只。
***
**综上所述：先对数组排序（这样相同数字就挨在一起了），从前往后遍历，对于每个回答ansers[i] + 1记为k就是这种颜色兔子的数量,并且往后最多可以容纳k个和answers[i]相等的数(包括ansers[i])。**
```
class Solution {
    public int numRabbits(int[] answers) {
        int n = answers.length;
        if(n < 1) return 0;
        int res = 0, max = 0; //max表示最对允许的相同数字
        Arrays.sort(answers);
        for(int i = 0; i < n; i++){
            res += answers[i] + 1;
            max = answers[i] + 1;
            int k = answers[i], start = i;
            while(i < n && k == answers[i] && i - start < max)i++;  //往后过滤max个相同数字
            i--;
        }
        return res;
    }
}
```
