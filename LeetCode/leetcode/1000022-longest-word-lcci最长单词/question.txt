longest-word-lcci
给定一组单词<code>words</code>，编写一个程序，找出其中的最长单词，且该单词由这组单词中的其他单词组合而成。若有多个长度相同的结果，返回其中字典序最小的一项，若没有符合要求的单词则返回空字符串。
<strong>示例：</strong>
<pre><strong>输入：</strong> ["cat","banana","dog","nana","walk","walker","dogwalker"]
<strong>输出：</strong> "dogwalker"
<strong>解释：</strong> "dogwalker"可由"dog"和"walker"组成。
</pre>
<strong>提示：</strong>
<ul>
<code>0 <= len(words) <= 100</code>
<code>1 <= len(words[i]) <= 100</code>
</ul>

最长单词
Given a list of words, write a program to find the longest word made of other words in the list. If there are more than one answer, return the one that has smallest lexicographic order. If no answer, return an empty string.

<strong>Example: </strong>

<pre>
<strong>Input: </strong> [&quot;cat&quot;,&quot;banana&quot;,&quot;dog&quot;,&quot;nana&quot;,&quot;walk&quot;,&quot;walker&quot;,&quot;dogwalker&quot;]
<strong>Output: </strong> &quot;dogwalker&quot;
<strong>Explanation: </strong> &quot;dogwalker&quot; can be made of &quot;dog&quot; and &quot;walker&quot;.
</pre>

<strong>Note: </strong>

<ul>
	<code>0 &lt;= len(words) &lt;= 100</code>
	<code>1 &lt;= len(words[i]) &lt;= 100</code>
</ul>
