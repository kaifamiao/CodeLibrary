reverse-nodes-in-k-group
给你一个链表，每<em>k</em>个节点一组进行翻转，请你返回翻转后的链表。

<em>k</em>是一个正整数，它的值小于或等于链表的长度。

如果节点总数不是<em>k</em>的整数倍，那么请将最后剩余的节点保持原有顺序。



<strong>示例：</strong>

给你这个链表：<code>1-&gt;2-&gt;3-&gt;4-&gt;5</code>

当<em>k</em>= 2 时，应当返回: <code>2-&gt;1-&gt;4-&gt;3-&gt;5</code>

当<em>k</em>= 3 时，应当返回: <code>3-&gt;2-&gt;1-&gt;4-&gt;5</code>



<strong>说明：</strong>

<ul>
	你的算法只能使用常数的额外空间。
	<strong>你不能只是单纯的改变节点内部的值</strong>，而是需要实际进行节点交换。
</ul>

K 个一组翻转链表
Given a linked list, reverse the nodes of a linked list <em>k</em> at a time and return its modified list.

<em>k</em> is a positive integer and is less than or equal to the length of the linked list. If the number of nodes is not a multiple of <em>k</em> then left-out nodes in the end should remain as it is.

<ul>
</ul>

<strong>Example:</strong>

Given this linked list: <code>1-&gt;2-&gt;3-&gt;4-&gt;5</code>

For <em>k</em> = 2, you should return: <code>2-&gt;1-&gt;4-&gt;3-&gt;5</code>

For <em>k</em> = 3, you should return: <code>3-&gt;2-&gt;1-&gt;4-&gt;5</code>

<strong>Note:</strong>

<ul>
	Only constant extra memory is allowed.
	You may not alter the values in the list&#39;s nodes, only nodes itself may be changed.
</ul>
