### 解题思路
4ms 5.6MB
用指针p保存最长前缀，用p依次跟题目给出的字符串比较，然后慢慢缩短最长前缀。
详细见代码。

### 代码

```c
char * longestCommonPrefix(char ** strs, int strsSize){
    //首先声明指针p为第一个字符串作为最长前缀，之后用最长前缀跟后面的字符串比较慢慢缩短。
    char *p = strs[0];
    //指示正在与最长前缀比较的字符串。
    int i;
    //如果给定的字符串数量不正确则直接返回空字符串。
    if(strsSize <= 0){
        return "";
    }
    //由于前边将第一个字符串作为最长前缀，所以这里从第二个字符串开始比较，一直到最后一个字符串
    for(i = 1;i < strsSize;i++){
        //以下为最长前缀与当前字符串比较并找到新的最长前缀替换旧的最长前缀。
        //定义两个局部变量用来计数，j表示字符串的第几个字符，count表示当时新的最长前缀字符的个数。
        int j = 0,count = 0;
        while(p[j] && strs[i][j] != '\0'){
            //判断旧的最长前缀与当前字符串的第j个字符是否匹配。
            //如果匹配则count加1，再继续比较下一个字符。
            if(p[j] == strs[i][j]){
                count++;
                j++;
            }
            //如果不匹配则直接退出当前字符串比较，进行下一个字符串的比较。
            else{
                break;
            }
        }
        //之前记录了新的最长前缀一共有count个字符，所以将第count+1个字符设置为结束符。
        p[count] = '\0';
    }

    return p;
}
```