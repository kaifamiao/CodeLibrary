### 解题思路
1. char a[],意味之定义了一个数组，这个数组元素可以存放char。整个数组用来c存放一个字符串。
2. char*a[],由于[]的结合关系比*高，所以a[]先成立，数组元素是char*,即数组每个格子里面存放的是一个指向char数据的指针。此时便可以存放多个字符串，每个元素都是一个指针，一个指向对应字符串首字母地址的指针。自然，a[i]存放内容本身是一个char*的指针。而a[0]或者a本身是一个指针，这个指针指向存放char*指针的数组的第一个元素。
3. 所以我们可以定义一个char ** str = a;来指向这个数组。并且可以这样使用str[i][j]，其中i表示第i个字符串。j表示第i个字符串中的第j个位置。之所以可以这样访问，因为字符串的底层就是字符数组实现的。
4. 注意：在字符串的末尾，会有一个默认的'\0'，请注意这个反斜杠的方向。
5. 一个字符串需要一个字符数组来存储,比如：char a[10]。一堆字符串，比如十个单词，需要一个字符串数组来存储。每个字符串的头需要存到一个char*格子里面。以此定义一个数组则是char* b[10];
两者关系：b[10] = {a[0], a[1], a[2]...};
此时，若定义一个char** c = b;
那么: c本身存储的是a[0]的地址，则*c = a[0];

### 代码

```c
char * longestCommonPrefix(char ** strs, int strsSize){
    if (strsSize == 0)
        return "";
    int i, j;
    char* ans = strs[0];

    for (i = 1; i < strsSize; i++){
        for (j = 0; ans[j] == strs[i][j] && ans[j] != '\0'; j++ ){
            //空
        }
        ans[j] = '\0';
    }
    return ans;
}


```