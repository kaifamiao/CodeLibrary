find-the-derangement-of-an-array
在组合数学中，如果一个排列中所有元素都不在原先的位置上，那么这个排列就被称为错位排列。

给定一个从1 到 <code>n</code>升序排列的数组，你可以计算出总共有多少个不同的错位排列吗？

由于答案可能非常大，你只需要将答案对 10<sup>9</sup>+7 取余输出即可。



<strong>样例 1:</strong>

<pre><strong>输入:</strong> 3
<strong>输出:</strong> 2
<strong>解释:</strong> 原始的数组为 [1,2,3]。两个错位排列的数组为 [2,3,1] 和 [3,1,2]。
</pre>



<strong>注释:</strong><br>
<code>n</code> 的范围是 [1, 10<sup>6</sup>]。

寻找数组的错位排列

In combinatorial mathematics, a derangement is a permutation of the elements of a set, such that no element appears in its original position.



There's originally an array consisting of <code>n</code> integers from 1 to <code>n</code> in ascending order, you need to find the number of derangement it can generate.



Also, since the answer may be very large, you should return the output mod 10<sup>9</sup> + 7.


<b>Example 1:</b><br />
<pre>
<b>Input:</b> 3
<b>Output:</b> 2
<b>Explanation:</b> The original array is [1,2,3]. The two derangements are [2,3,1] and [3,1,2].
</pre>


<b>Note:</b><br/>
<code>n</code> is in the range of [1, 10<sup>6</sup>].
