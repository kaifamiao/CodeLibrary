思路同  Q124. 二叉树中的最大路径和
以任意一点为root，与其关联的点为子节点，求出所有子节点对应的路径的前两大值max1,max2，则该点对应的最长路径为max1+max2
![image.png](https://pic.leetcode-cn.com/32a36001d6816edfe1e2875d1555792b959503f5802469ddce2e59813ab79fd9-image.png)

```
class Solution {
    int res = 0;
    public int treeDiameter(int[][] edges) {
        List<Integer>[] map = new ArrayList[edges.length+1];
        
        for(int i=0 ; i<map.length ; i++){
            map[i] = new ArrayList<>();
        }
        for(int[] edge : edges){
            map[edge[0]].add(edge[1]);
            map[edge[1]].add(edge[0]);
        }
        
        dfs(map,0,new boolean[edges.length+1]);
        return res;
    }
    
    public int dfs(List<Integer>[] map,int index,boolean[] visited){
        visited[index] = true;
        List<Integer> list = map[index];
        int max1 = 0;
        int max2 = 0;
        for(int next : list){
            if(!visited[next]){               
                int num = dfs(map,next,visited);
                if(num>max1){
                    max2 = max1;
                    max1 = num;
                } else if(num>max2){
                    max2 = num;
                }
            }
        }
        res = Math.max(res,max1+max2);
        
        return Math.max(max1,max2)+1;
        
    }
}
```


