![image.png](https://pic.leetcode-cn.com/cd543dbcac8fcde337f3ebacf0a252fe8c855d7c48298f9eaaabfa7a12eef667-image.png)

### 解题思路
思路和这道题[最大连续1的个数](https://leetcode-cn.com/problems/max-consecutive-ones/)一样，
只不过这道题多了层包装而已
将数组化为 1，-1，1，-1，-1，0 这种形式；
再遍历一遍，统计前后元素互为相反数的子序列的长度即可。

### 代码

```c
int maxTurbulenceSize(int* A, int ASize){
    if(ASize<=1) return ASize;
    int cnt=1,maxLen=0,cnt_0=0;
    
    for(int i=1; i<ASize; i++){
        if(A[i]-A[i-1]==0) A[i-1] = 0,cnt_0++;
        else A[i-1] = A[i]-A[i-1]>0 ? 1 : -1;
    }
    for(int i=1; i<ASize-1; i++){
        //若前后互为相反数，则 cnt++, 否则重置 cnt
        cnt = A[i]*A[i-1]<0? (cnt+1) : 1;
        //更新最大值
        maxLen = cnt > maxLen? cnt : maxLen;
    }

    // 1、特殊情况：当数组元素都是一样的数组时，return 1

    return cnt_0==ASize-1? 1 : (maxLen+1);
}
```