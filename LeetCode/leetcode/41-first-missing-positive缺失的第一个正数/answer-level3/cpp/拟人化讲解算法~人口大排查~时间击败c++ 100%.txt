趁着还清醒赶紧写题解。。。

## 内容提要

这是一起案件，题目叫做缺失的第一个正数，说明有正数不见了。

从前有一个街区，街区的门牌号从0开始一直到nums.size-1，nums[i]表示这个街区的第i栋房子。

从古至今，街区的居民一直按照法律对号入住：名字叫做i+1的居民住在街区的第i栋房子（nums[i] = i+1）。所以这个街区所住的居民的名字同样是从1到房屋最大编号+1（nums.size()）进行编号的。

突然有一天，，，一位侦探发现全都乱了，有些房子里居住的居民不再是i+1，甚至出现了外来人口（名字编号为负数的或是名字编号大于房屋最大编号+1的）（对应题中给的输入数组）。

侦探觉得整治一下，用了一种巧妙的方法让大家各回各家。（那么整治之后第一间空房的编号+1就是第一个缺失的正数，若最后发现每个房子里都有人，那么题意中缺失的第一个正数为最大编号房子里的人的名字+1）

## 过程

### 初步审查流程：

侦探从编号为0的房子开始，依次进行排查：

打开nums[i]这栋房子的房门：

如果发现居住者的名字编号为nums[i] < 0，那么这一定是这个街区的外来人口，所以让它消失并清空房间：nums[i]=0。

同理，如果发现居住者的名字编号为nums[i]>nums.size()，那这个人也一定不属于这个街区，同样直接清零。

如果发现居住者的名字为i+1（nums[i] == i+1），说明这个人正呆在它自己的房间，那么跳过并去走访下一家。

如果发现房子里没有人居住（nums[i]==0），说明目前的房子的主人还没找到，所以也先去走访下一家。


### 发现串门：各回各家，各找各妈！

假设侦探到了nums[i]这栋房子,再假设i=3，发现里面的人是k,假设k=6（nums[3] = 6）

根据街区的规定，6应该待在nums[5]那栋房子。

怎么办？如果我们让6直接回家，那nums[5]这栋房子里本来待在里面的人怎么办？突然，我们假设外面在下雨，不能让人淋雨啊，所以让nums[5]那栋房子里的人先到nums[3]这栋房子里来吧（反正里面现在也没人）

这样，我们让nums[3]这栋房子里的人（上例为6）去了它该去的地方（nums[5]）。但问题又来了：把6送走的同时，nums[3]里又多了了一位避雨的大哥。

怎么办？我们再对这位大哥进行审查呗。现执行初步审查流程，这位大哥如果不是这个街区里的人那直接让它消失并清空房间，如果是这个街区里的人，那么有两种情况：
1. 这位大哥名字就叫做4，也就是说nums[3]本来就是它自己的房子，那行吧，这个房子的问题正好也解决了，去下一家吧。
2. 这位大哥名字不叫4，那行，那和这位大哥说：请回你自己家吧，把你家待的那人再叫来这避雨，如果你家没人就不用叫了。

然后这位侦探发现他一直再做第二步，直到走的那位正好把这栋房子（nums[i]）的原主人（i+1）叫来或是上一个走的大哥他家没人。

通俗点说，这位侦探若发现nums[i]这栋房子里的人（假设叫k，nums[i]=k）是这个街区的但不是这个房子的主人，那么侦探让它回家（让nums[k-1] = k），由于他叫k，所以他的房子为nums[k-1]，然后让他的房子里的人过来nums[i]。也就是根据nums[i]这栋房子里居住的人的名字k，让nums[k-1]和nums[i]中的人交换位置，k自然就回家了。（由于nums[i]=k，所以这次交换被描述为让nums[i]房子里的人和nums[nums[i] - 1]房子里的人换位置）

然后换来的人继续从初步审查流程开始，要么换来的人是原主人，要么上一个被换走的人他家没人，否则继续交换。

但记住这个世界的奇妙性，如果6这个人被喝令回家，打开家门发现里面居然有一个自己！（num[5]这个房子里的人就是6）怎么处理？很简单，让他们自身自灭吧，打一架，输的人消失，赢的人住进去。但是侦探视角下并看不到这些，侦探只知道6会了自家，而且没有过来避雨的大哥，所以先把这个房子空着，去下一家吧。

用一般性概括也就是：如果k被喝令回家，发现num[k-1]这个房子里住着的也是k，那么一山不容二虎，消失一个吧，然后侦探然见没人来避雨，就把nums[i]这栋房子先空着，去走下一家了。

从侦探这种做法我们可以看出，在他审查过的房子里，要么是没人，要么里面的人是这个房子的主人。因为如果这房子里有人而且不是主人，侦探要么让它消失，要么让它去自己家。

### 完成排查之后
当侦探按顺序走完街区最后一栋房子，他的工作已经结束，由于这个街区的人数和房屋数之前是一一对应的，所以如果之前有让外来人口消失，那么最后一定会空出一些没有主人的房屋。如果之前每个房屋里居住的都是街区本来的居民，只是他们可能串门了，那么所有房屋都是满的
有了侦探的这一波审查之后，寻找缺失的第一个正数这件事就变得简单起来：从num[0]这栋房子按顺序往后找，出现的第一间空房nums[i]即代表那栋房子缺失了它的主人：i+1;若所有房子都是满的，那么缺失的第一个正数可能是下一个街区的吧哈哈，答案就是所有房子的总和+1啦~（这里真的不好怎么编了 汗。。）

## 代码

``` c++
class Solution {
public:
	void swap(int *a, int *b) {
		int tmp;
		tmp = *a;
		*a = *b;
		*b = tmp;
	}
	int firstMissingPositive(vector<int>& nums) {
		for (int i = 0; i < nums.size(); i++) {
			if (nums[i]<=nums.size() && nums[i] >= 0) {
				if (nums[i] == i + 1 || nums[i] == 0) continue;
				if (nums[nums[i] - 1] == nums[i]) nums[i] = 0;
				else {
					swap(&nums[i], &nums[nums[i] - 1]);
					i--;
				}
			}
			else { nums[i] = 0; }
		}
		for (int i = 0; i<nums.size(); i++)
			if (nums[i] <= 0)
				return i + 1;
		return nums.size()+1;
	}
};
```