#### 1 审题发现此题蕴含着下面几个信息

- **1.1**最后剩下的数字一定为偶数
- **1.2** 当第一次从左到右处理后，余下的数列的长度均为偶数
- **1.3** 从左到右与从右到左一定蕴含着某种关系，我们需要运用自己的能力去从这两个已知条件中获取信息

#### 2 研究1.3

- **2.1** 从左到右（>>>）与从右到左（<<<），在一定程度上是一个对称的操作。观察发现，当n为偶数时，对一组1到n的数列进行一次>>>操作剩下的数字与一次<<<操作剩下的数字是互斥且并集为原数列的。由此我们可以推测，先做>>>操作得到的最后结果f(n)与先做<<<操作得到的最后结果f'(n)也是具有相同性质的，进一步的可以发现**f(n)+f'(n)=n+1**。当n为奇数时，通过**1.2**，可以其在通过第一步之后也是符合这样的性质的。所以下面我们需要研究f'(n)如何清晰的表示？
- **2.2** 这部分介绍**2.1**提出的问题。提前申明，找出这里的所隐含的信息就需要能力了。我们现在已经找到了f(n)与f'(n)的横向关系，思考是否还有其他关系？这里是可能还有纵向的关系的，原因在于我似乎可以在1…x的数列中执行>>>操作一次，不就可以变成f’(n)了么。这里我们可以举个例子，将设n=5,即有一个数列1,2,3,4,5。那么当x=?才能在1…x的数列中执行一次>>>操作让数列变成1,2,3,4,5呢？显然答案是不可能的。但是我们可以变成2,4,6,8,10（这里就需要你的能力了）。如此一来，最后执行的结果f(x)=2f'(n)由于是一一的两倍对应，而此时的x=10。至此我们能发现一条规律即2f'(n)=f(2n)。带入便有递归式f(n)+f(2n)/2=n+1。

#### 3 代码

```java
class Solution {
    public int lastRemaining(int n) {
        return n == 1 ? 1 : 2 * (n / 2 + 1 - lastRemaining(n / 2));
    }
}
```