这道题先模拟前几个数很容易发现规律 奇数的解永远等于偶数的解
那么偶数的解怎么求？
一个偶数第一遍清除之后所剩的数字都是一半，并且值都是n/2的两倍，那么我们是不是可以通过这个思路去找n和n的一半的规律
第二次清除从后往前清除，那么规律来了，n/2清除从前往后，我们把第二次清除的数除2，那么结果和n/2的解一定是对称的
举个例子 n=10 第一次剩余 2 4 6 8 10 
n=5   1 2 3 4 5  
结果  8     8/2=4和2是不是对称的
      2  
显而易见可以用递归来做
n/2和n的关系   求对称-->n+1-fas(n/2)
最后结果乘2
```
func lastRemaining(n int) int {
   if n<3 {return n}
   if n%2==1{
	   return lastRemaining(n-1)
   }else{
	   return 2*(n/2+1-lastRemaining(n/2))
   }
}
```


