### 解题思路
一个立方体的面积是6，两个立方体叠放的时候，有一个重合的面，重合的面不再是表面，面积是各自的面积减去重合的面，也就是12-2，即2x6-2；当有三个立方体时，有两个重合的面，面积也就成了18-4，即3x6-2x2。观察可方法规律，单个位置的形体面积是nx6-2x(n-1)，其中n表示立方体的个数，也就是二维数组的值v。
相邻的两个位置如果都有立方体，那么就一定会有重合的面，并且重合的面的个数等于数量少的那个v。
该问题就可以分解成让位置的形体面积相加，再减去重合部分的面积。这里的关键在于如果计算重合的面，能做到既不多算也不漏算。
声明一个变量area表示总面积，temp表示当前位置的长方体在加入后将增加多少面积。把面积搞成是一个一个的加上去的，那么在加一个新的长方体的时候，会跟它重合的一定是跟它相邻的并且已经加入到面积计算的长方体，所以要计算的重合部分就是其上左两个方向的长方体与之重合的部分。

### 代码

```java
class Solution {
    public int surfaceArea(int[][] grid) {
        int area = 0;
        int temp = 0;
        for (int i = 0; i < grid.length; i++){
            for (int j = 0; j < grid[i].length; j++){
                if (grid[i][j] == 0) continue;
                temp = grid[i][j] * 6 - 2 * (grid[i][j] - 1);
                if (j-1 > -1 && grid[i][j-1] != 0)
                    temp -= 2 * Math.min(grid[i][j], grid[i][j-1]);
                if (i-1 > -1 && grid[i-1][j] != 0)
                    temp -= 2 * Math.min(grid[i][j], grid[i-1][j]);
                area += temp;
            }
        }
        return area;
    }
}
```