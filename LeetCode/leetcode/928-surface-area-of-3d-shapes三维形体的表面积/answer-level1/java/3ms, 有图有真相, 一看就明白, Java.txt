#### 解题思路：

题目需要求的是表面积，很多同学说看不懂题意，我这里画了几个示例图。
（c 几个破图画了半天！ 宝宝们快给我**点赞**昂！！）

##### 示例图
示例 1：
```
输入：[[2]]
输出：10
```
这个图长这样

![image.png ](https://pic.leetcode-cn.com/61921dc36130d23a1417293990b99d6c823dc4bac999d1a61308cc57280ee9ad-image.png){:width=300}
{:align=center}


2 个立方体分别贡献了 5 个单位的表面积。后面示例的表面积你们可以自己数一数辣~

示例 2:
```
输入：[[1,2],[3,4]]
输出：34
```
这个示例你从右侧看就是长这个亚子：

![image.png](https://pic.leetcode-cn.com/9c27b08de841f9c79fb32d5dde2e175f1a79e071f1b01ec399119af40870e095-image.png){:width=300}
{:align=center}


示例 3:
```
输入：[[1,0],[0,2]]
输出：16
```
这个示例长这个亚子：

![image.png](https://pic.leetcode-cn.com/b2fe93648e6e5fb58eb4af482eab0ae462a9fedeeef2ebaeb113612b590c090d-image.png){:width=300}
{:align=center}

示例 4:
```
输入：[[1,1,1],[1,0,1],[1,1,1]]
输出：32
```
这个示例长这个亚子：

![image.png](https://pic.leetcode-cn.com/dc055eeea02f2fca8bd637c09a5b992f856a339e42af1ca2071af858d6561f83-image.png){:width=300}
{:align=center}

中间是空心的！但是空心处那几个表面积也是要算的！

示例 5:
```
输入：[[2,2,2],[2,1,2],[2,2,2]]
输出：46
```
这个示例长这个亚子：

![image.png](https://pic.leetcode-cn.com/aaaa8da05f59732cef400cd64850479275cff3043ecb36f1d4a80ddc026f54a7-image.png){:width=300}
{:align=center}

中间看得像空心，但是中间那是有一个立方体哒！
俯视看是这个亚子：

![image.png](https://pic.leetcode-cn.com/dd13c5a5139ae9c68978dec375cb4d96dce6bc5a93f788424bff226a6ffd8a16-image.png){:width=300}
{:align=center}


#### 做法：
首先，一个柱体一个柱体的看，每个柱体是由：**2 个底面（上表面/下表面）+ 所有的正方体都贡献了 4 个侧表面积**。
然后，把柱体贴合在一起之后，我们需要把贴合的表面积给减掉，**两个柱体贴合的表面积就是 两个柱体高的最小值*2**。

```Java []
class Solution {
    public int surfaceArea(int[][] grid) {
        int n = grid.length, area = 0;
        for (int i = 0; i < n; i++) {
            for (int j = 0; j < n; j++) {
                // 先把grid[i][j]赋值给level，省掉了bound check，可以略微略微略微优化一下耗时。。。
                int level = grid[i][j];
                if (level > 0) {
                    // 一个柱体中：2个底面 + 所有的正方体都贡献了4个侧表面积 
                    area += (level << 2) + 2;
                    // 减掉 i 与 i-1 相贴的两份表面积
                    area -= i > 0? Math.min(level, grid[i - 1][j]) << 1: 0; 
                    // 减掉 j 与 j-1 相贴的两份表面积
                    area -= j > 0? Math.min(level, grid[i][j - 1]) << 1: 0;
                }  
            }
        }
        return area;
    }
}
```

