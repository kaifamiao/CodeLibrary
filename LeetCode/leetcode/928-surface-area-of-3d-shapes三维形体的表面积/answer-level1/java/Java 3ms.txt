### 解题思路
这道题我一开始以为底面是不算的，后来看了第一个输入例子，发现底面也是要计算的(神奇的叠放,我透过桌子下面看到了表面积!).

1. 对于每一个单独叠放的柱体表面积：4*N + 2，N是叠放所用正方体的个数。

2. 网格是N*N的，这说明二维数组是一个方阵

3. 考虑重复的面：这个问题就是遍历二维数组，找到他周围之中最小的数。所以我们找左边和上边，分别对应`i > 0``j > 0`。这里为什么不同时判断i和j呢？这是因为对角线上的柱体没有重叠的部分，像示例3:`[[1,0],[0,2]]`这样的，是没有重叠面的。

4. 如何计算重复的面呢？ 那就是看那个柱体高度小，重叠的面的数量肯定是叠放数量小的柱体的一侧表面。这里我们第一个公式对每一个柱体进行了计算，所以重复的表面我们计算了两次，那么这里就要减去两次。

下面是代码部分：
### 代码

```java
class Solution {
    public int surfaceArea(int[][] grid) {
        int sameFace = 0;
        int cubeFace = 0;
        
        for(int i = 0; i < grid.length; i++)
            for(int j = 0; j < grid.length; j++)
            {
                int n = grid[i][j];
                
                if(n > 0)
                    cubeFace += (4 * n + 2);
                
                if(i > 0) //计算和他左边的重复面
                {
                    cubeFace -= 2 * (int)Math.min(grid[i-1][j],n);
                }
                if(j > 0) //计算和他上边的重复面
                {
                    cubeFace -= 2 * (int)Math.min(grid[i][j - 1],n);
                }
            }
              
        return cubeFace;        
    }
}
```