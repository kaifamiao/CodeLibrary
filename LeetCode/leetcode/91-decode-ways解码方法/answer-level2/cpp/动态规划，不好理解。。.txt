### 解题思路
此处撰写解题思路

### 代码

```cpp
class Solution {
public:
    int numDecodings(string s) {
        if(s.size() == 0 || s[0] == '0')return 0;  //输入合法性判断，首位为0，那无法编码
        vector<int> dp(s.size() + 1, 0);  //dp[i]表示第i位的编码方法数
        dp[0] = 1;
        dp[1] = 1;  //表示第1位只有一种编码
        for(int i = 1; i < s.size(); ++i)  //从第二位开始对每位进行操作
        {
            if(s[i] == '0')
            {
                //第i位为0，查看s[i-1]
                if(s[i-1] == '1' || s[i-1] == '2')  //若s[i-1]是1或者2，则s[i-1]s[i]可合并起来编码，即10或20
                    dp[i+1] = dp[i-1];  //这里有点绕，dp[i+1]是表示第'i'位，dp[i-1]表示第'i-2'位
                else
                    return 0;  //直接返回，表示无法编码，例如00, 30, 40, 50, 60 ...
            }
            else
            {
                //s[i]不为'0'
                if(s[i-1] == '1' || (s[i-1] == '2' && s[i] >= '1' && s[i] <= '6'))
                    dp[i+1] = dp[i] + dp[i-1];  //表示既可以单独编码(即dp[i]对应的编码方法数)，也可以合并编码(即dp[i-1]对应的编码方法数)，例如11,12,...,19,21,22,23,...,26
                else
                    //只能单独编码
                    dp[i+1] = dp[i];
            }
        }
        return dp[s.size()];
    }
};
```