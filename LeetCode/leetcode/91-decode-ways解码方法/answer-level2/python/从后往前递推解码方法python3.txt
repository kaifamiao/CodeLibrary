### 解题思路
一、从后往前递推。
1、初始化前一个数last为1。
2、最后一个数如果为0，则总数res为0，否则，初始的总数为1
3、逆序循环
     （1）如果当前数不为零：
        （a）如果当前数和前一个数 <= 26, 则总数=前1个数+上前个数之和，否则就等于前一个数；更新前一个数last
        （b）如果当前数和前一个数 > 26 , 如果之前已计算的总数不为零，则总数=前1个数；更新前一个数last；否则返回0
     （2）如果当前数为零：
        （a） 如果已计算的总数等于0，说明有连续的零或者数 > 26，返回0
        （b） 如果已计算的总数不等于0，则更新前一个数last。
二、例子
1、22611
字符串  总数    详细
'1'     1      （1） '1'                               初始值 1！=0 为1，否则为零
'11'    2      （1） '1' + '1' （2） '11'              11 <= 26 等于前一个加上初始化的1
'611'   2      （1） '6' + '11'                        61 > 26  等于前一个数 
2611    4       (1)  '2' + '611'  (2) '26' + '11'      26 <= 26 所以等于前一个和上前一个数量之和
22611   6       (1)  '2' + '2611' (2) '22' + '611'     22 <= 26 所以等于前一个和上前一个数量之和

2、22201
字符串  总数    详细	
1	     1     （1） '1'                                初始值 1！=0 为1，否则为零     
0	     0       无                                   更新前一个数last为1 
201	     1      (1) '20' + '1'  （2）‘2’ + ‘01’       20 <= 26 所以等于前一个和上前一个数量之和，由于01为0，等于前一个数 
2201	 1      (1) ‘2’ + '201'  （2）‘22’ + ‘01’     22 <= 26 所以等于前一个和上前一个数量之和，由于01为0，等于前一个数
22201	 2      (1) ‘2’ + ‘2201’ （2） ‘22’ + ‘201’   22 <= 26 所以等于前一个和上前一个数量之和

3、22600
字符串  总数    详细	
0	     0      无                                初始值 0     
0	     0       无                               之前计算总数为0，直接返回0

4、22601
字符串  总数    详细	
1	     1     （1） '1'                           初始值 1！=0 为1，否则为零     
0	     0       无                    
601	     0                                         由于60 大于 26，且之前计算的总数已经为0，直接返回0 


### 代码

```python3
class Solution:
    def numDecodings(self, s: str) -> int:
        if not s:
            return 0
        res = 0
        last = 1
        if s[-1] != '0':
            res = 1

        for i in range(len(s)-2, -1, -1):
            if s[i] == '0':
                if res == 0:
                    return 0
                else:
                    last = res
                    res = 0
                
            else:
                if int(s[i]) * 10 + int(s[i+1]) <= 26:
                    temp = res
                    res = res + last 
                    last = temp
                else:
                    if res == 0:
                        return 0
                    else:
                        last = res

        return res
```