diving-board-lcci
你正在使用一堆木板建造跳水板。有两种类型的木板，其中长度较短的木板长度为<code>shorter</code>，长度较长的木板长度为<code>longer</code>。你必须正好使用<code>k</code>块木板。编写一个方法，生成跳水板所有可能的长度。
返回的长度需要从小到大排列。
<strong>示例：</strong>
<pre><strong>输入：</strong>
shorter = 1
longer = 2
k = 3
<strong>输出：</strong> {3,4,5,6}
</pre>
<strong>提示：</strong>
<ul>
0 < shorter <= longer
0 <= k <= 100000
</ul>

跳水板
You are building a diving board by placing a bunch of planks of wood end-to-end. There are two types of planks, one of length <code>shorter</code> and one of length <code>longer</code>. You must use exactly <code>K</code> planks of wood. Write a method to generate all possible lengths for the diving board.

return all lengths in non-decreasing order.

<strong>Example: </strong>

<pre>
<strong>Input: </strong>
shorter = 1
longer = 2
k = 3
<strong>Output: </strong> {3,4,5,6}
</pre>

<strong>Note: </strong>

<ul>
	0 &lt; shorter &lt;= longer
	0 &lt;= k &lt;= 100000
</ul>
