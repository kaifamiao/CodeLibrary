reducing-dishes
一个厨师收集了他<code>n</code>道菜的满意程度<code>satisfaction</code>，这个厨师做出每道菜的时间都是 1 单位时间。

一道菜的 「喜爱时间」系数定义为烹饪这道菜以及之前每道菜所花费的时间乘以这道菜的满意程度，也就是<code>time[i]</code>*<code>satisfaction[i]</code>。

请你返回做完所有菜 「喜爱时间」总和的最大值为多少。

你可以按<strong>任意</strong>顺序安排做菜的顺序，你也可以选择放弃做某些菜来获得更大的总和。



<strong>示例 1：</strong>

<pre><strong>输入：</strong>satisfaction = [-1,-8,0,5,-9]
<strong>输出：</strong>14
<strong>解释：</strong>去掉第二道和最后一道菜，最大的喜爱时间系数和为 (-1*1 + 0*2 + 5*3 = 14) 。每道菜都需要花费 1 单位时间完成。</pre>

<strong>示例 2：</strong>

<pre><strong>输入：</strong>satisfaction = [4,3,2]
<strong>输出：</strong>20
<strong>解释：</strong>按照原来顺序相反的时间做菜 (2*1 + 3*2 + 4*3 = 20)
</pre>

<strong>示例 3：</strong>

<pre><strong>输入：</strong>satisfaction = [-1,-4,-5]
<strong>输出：</strong>0
<strong>解释：</strong>大家都不喜欢这些菜，所以不做任何菜可以获得最大的喜爱时间系数。
</pre>

<strong>示例 4：</strong>

<pre><strong>输入：</strong>satisfaction = [-2,5,-1,0,3,-3]
<strong>输出：</strong>35
</pre>



<strong>提示：</strong>

<ul>
	<code>n == satisfaction.length</code>
	<code>1 &lt;= n &lt;= 500</code>
	<code>-10^3 &lt;=satisfaction[i] &lt;= 10^3</code>
</ul>

做菜顺序
A chefhas collected data on the <code>satisfaction</code> level of his<code>n</code> dishes.Chef can cook any dish in 1 unit of time.

<em>Like-time coefficient</em>of a dish is defined asthe time taken to cook that dish including previous dishes multiplied by its satisfaction level i.e. <code>time[i]</code>*<code>satisfaction[i]</code>

Returnthe maximum sum of<em>Like-time coefficient </em>that the chef can obtain after dishes preparation.

Dishes can be prepared in <strong>any </strong>order and the chef can discard some dishes to get this maximum value.


<strong>Example 1:</strong>

<pre>
<strong>Input:</strong> satisfaction = [-1,-8,0,5,-9]
<strong>Output:</strong> 14
<strong>Explanation: </strong>After Removing the second and last dish, the maximum total <em>Like-time coefficient</em> will be equal to (-1*1 + 0*2 + 5*3 = 14). Each dish is prepared in one unit of time.</pre>

<strong>Example 2:</strong>

<pre>
<strong>Input:</strong> satisfaction = [4,3,2]
<strong>Output:</strong> 20
<strong>Explanation:</strong> Dishes can be prepared in any order, (2*1 + 3*2 + 4*3 = 20)
</pre>

<strong>Example 3:</strong>

<pre>
<strong>Input:</strong> satisfaction = [-1,-4,-5]
<strong>Output:</strong> 0
<strong>Explanation:</strong> People don&#39;t like the dishes. No dish is prepared.
</pre>

<strong>Example 4:</strong>

<pre>
<strong>Input:</strong> satisfaction = [-2,5,-1,0,3,-3]
<strong>Output:</strong> 35
</pre>


<strong>Constraints:</strong>

<ul>
	<code>n == satisfaction.length</code>
	<code>1 &lt;= n &lt;= 500</code>
	<code>-10^3 &lt;=satisfaction[i] &lt;= 10^3</code>
</ul>