### 解题思路
执行用时 :0 ms, 在所有 Java 提交中击败了100.00%的用户
内存消耗 :38.5 MB, 在所有 Java 提交中击败了100.00%的用户

1、首先两个数组的长度是确定的，所以可以获取A最终的长度是m+n;
2、A[] 1,2,3   B[]2,5,6   这两个数组是有序的，我们就可以想到归并排序 ，定义两个指针 l,r 指针，从后面开始遍历，如果A数组的3 < B数组最大数6,那么A数组中没有大于6 的数字，可以把6直接放到A数组的l+r+1的下标位置，也就是A，B数组融合的最后，然后r--,也就是5跟3比较、、、一直下去就可以得到排序数组。
3、有一个特殊情况，可能就是B数组的数据全部小于A数组，也就是B没有遍历到最后，就要手动处理下，给他按照顺序直接合并到A的相应位置，如果A没遍历到最后就不用处理，因为A剩余数据一直就是在A数组里面
### 代码

```java
class Solution {
    public void merge(int[] A, int m, int[] B, int n) {
        int l = m - 1;
        int r = n - 1;

        while(l >= 0 && r >= 0){
            if(A[l] > B[r]){
                A[l+r+1] = A[l];
                l--;
            }else{
                A[l+r+1] = B[r];
                r--;
            }
        }
        while(r >= 0){
            A[r] = B[r];
            r--;
        }
    }
}
```