### 解题思路
一共尝试了三个思路：
1.最清晰的解题思路：合并数组后排序
2.设置temp数组，A，B数组依次比较后，向temp数组中push。显然这个方法失败了，因为这道题不让赋值A数组，所以A数组不会发生改变
👇下面代码是第三个，借鉴（抄袭）了某个解答。这个主旨思想依赖两个条件：1.A数组已经预先补足缓冲空间，2.A，B数组已知真实长度。
比如数据
A=[7,12,34,0,0,0], m=3, B=[1,2,26], n=3
第一个while执行的操作是：从A数组的末尾（较大的数据）开始赋值数据，因为预先的位置，所以不会覆盖A中的数据。
```
[7, 12, 34, 0, 0, 34]
[7, 12, 34, 0, 26, 34]
[7, 12, 34, 12, 26, 34]
[7, 12, 7, 12, 26, 34]
```
此时B中数组剩下[1,2],n==2,即最后剩下的数就是B中比A中最小的数还小的数字。只需要按顺序放入A中即可
```
[1, 2, 7, 12, 26, 34]
```


### 代码

```javascript
/**
 * @param {number[]} A
 * @param {number} m
 * @param {number[]} B
 * @param {number} n
 * @return {void} Do not return anything, modify A in-place instead.
 */
var merge = function(A, m, B, n) {
    while(m>0&&n>0){
        A[m+n-1]=(A[m-1]>B[n-1]?A[--m]:B[--n])
    }
    while(n>0){
        A[n-1]=B[--n];
    }
};
```