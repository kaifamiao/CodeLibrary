construct-target-array-with-multiple-sums
给你一个整数数组<code>target</code> 。一开始，你有一个数组<code>A</code> ，它的所有元素均为 1 ，你可以执行以下操作：

<ul>
	令<code>x</code>为你数组里所有元素的和
	选择满足<code>0 &lt;= i &lt; target.size</code>的任意下标<code>i</code>，并让<code>A</code>数组里下标为<code>i</code>处的值为<code>x</code>。
	你可以重复该过程任意次
</ul>

如果能从<code>A</code>开始构造出目标数组<code>target</code>，请你返回 True ，否则返回 False 。



<strong>示例 1：</strong>

<pre><strong>输入：</strong>target = [9,3,5]
<strong>输出：</strong>true
<strong>解释：</strong>从 [1, 1, 1] 开始
[1, 1, 1], 和为 3 ，选择下标 1
[1, 3, 1], 和为 5， 选择下标 2
[1, 3, 5], 和为 9， 选择下标 0
[9, 3, 5] 完成
</pre>

<strong>示例 2：</strong>

<pre><strong>输入：</strong>target = [1,1,1,2]
<strong>输出：</strong>false
<strong>解释：</strong>不可能从 [1,1,1,1] 出发构造目标数组。
</pre>

<strong>示例 3：</strong>

<pre><strong>输入：</strong>target = [8,5]
<strong>输出：</strong>true
</pre>



<strong>提示：</strong>

<ul>
	<code>N == target.length</code>
	<code>1 &lt;= target.length&lt;= 5 * 10^4</code>
	<code>1 &lt;= target[i] &lt;= 10^9</code>
</ul>

多次求和构造目标数组
Given an array of integers<code>target</code>. From a starting array, <code>A</code>consisting of all 1&#39;s, you may perform the following procedure :

<ul>
	let <code>x</code> be the sum of all elements currently in your array.
	choose index <code>i</code>, such that<code>0 &lt;= i &lt; target.size</code> and set the value of <code>A</code> at index <code>i</code> to <code>x</code>.
	You may repeat this procedureas many times as needed.
</ul>

Return True if it is possible to construct the <code>target</code> array from <code>A</code> otherwisereturn False.


<strong>Example 1:</strong>

<pre>
<strong>Input:</strong> target = [9,3,5]
<strong>Output:</strong> true
<strong>Explanation:</strong> Start with [1, 1, 1] 
[1, 1, 1], sum = 3 choose index 1
[1, 3, 1], sum = 5 choose index 2
[1, 3, 5], sum = 9 choose index 0
[9, 3, 5] Done
</pre>

<strong>Example 2:</strong>

<pre>
<strong>Input:</strong> target = [1,1,1,2]
<strong>Output:</strong> false
<strong>Explanation:</strong> Impossible to create target array from [1,1,1,1].
</pre>

<strong>Example 3:</strong>

<pre>
<strong>Input:</strong> target = [8,5]
<strong>Output:</strong> true
</pre>


<strong>Constraints:</strong>

<ul>
	<code>N == target.length</code>
	<code>1 &lt;= target.length&lt;= 5 * 10^4</code>
	<code>1 &lt;= target[i] &lt;= 10^9</code>
</ul>
