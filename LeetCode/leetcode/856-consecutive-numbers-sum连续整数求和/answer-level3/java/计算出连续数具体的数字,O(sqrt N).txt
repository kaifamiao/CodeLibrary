这里写一些题外话,我不光要知道具体有多少对数，我还想求出具体都有那些数字,java代码如下,复杂度O(sqrt N)
```
        int N = 15;
//        n=2代表最少有2个数字是连续不一样的,所以N的最小值为1+2,N必然为3或者比3更大的数
        for (int n = 2; ((n+1) * n)/2 <= N; n++) {
//            n=2代表有2组数不一样,而((n+1) * n)/2 <= N则表示从1到n的自然数之和必然小于N
//            如果可以是n个连续数，那么N - (1+2+...+n) 必须可以被n整除
            if ((N - ((n + 1) * n) / 2) % n == 0) {
//          当n=1: a = 15 匹配 15
//          当n=2: a*2 + 1 = 15 a = 7 匹配 7,8
//          当n=3: a*3 + 3 = 15 a = 4 匹配 4,5,6
//          当n=4: a*4 + 6 = 15 a = 9/4 不能除尽 不匹配
//          当n=5: a*5 + 10 = 15 a = 1 匹配 1,2,3,4,5/
//          a*n + (n - 1)*n/2可以推导出a=(N-(n - 1)*n/2)/n
                int x = (N - (n - 1) * n / 2) / n;
                for (int i = 0; i < n; i++) {
                    System.out.print(" "+x++);
                }
                System.out.println();
            }
        }
```
