h-index-ii
给定一位研究者论文被引用次数的数组（被引用次数是非负整数），数组已经按照<strong>升序排列</strong>。编写一个方法，计算出研究者的 <em>h</em> 指数。

<a href="https://baike.baidu.com/item/h-index/3991452?fr=aladdin">h 指数的定义</a>: &ldquo;h 代表&ldquo;高引用次数&rdquo;（high citations），一名科研人员的 h 指数是指他（她）的 （N 篇论文中）<strong>至多</strong>有 h 篇论文分别被引用了<strong>至少</strong> h 次。（其余的<em>N - h</em>篇论文每篇被引用次数<strong>不多于 </strong><em>h </em>次。）&quot;



<strong>示例:</strong>

<pre><strong>输入:</strong> <code>citations = [0,1,3,5,6]</code>
<strong>输出:</strong> 3 
<strong>解释: </strong>给定数组表示研究者总共有 <code>5</code> 篇论文，每篇论文相应的被引用了 0<code>, 1, 3, 5, 6</code> 次。
    由于研究者有 <code>3 </code>篇论文每篇<strong>至少</strong>被引用了 <code>3</code> 次，其余两篇论文每篇被引用<strong>不多于</strong> <code>3</code> 次，所以她的<em> h </em>指数是 <code>3</code>。</pre>



<strong>说明:</strong>

如果 <em>h </em>有多有种可能的值 ，<em>h</em> 指数是其中最大的那个。



<strong>进阶：</strong>

<ul>
	这是<a href="/problems/h-index/description/">H指数</a>的延伸题目，本题中的<code>citations</code>数组是保证有序的。
	你可以优化你的算法到对数时间复杂度吗？
</ul>

H指数 II
Given an array of citations <strong>sortedin ascending order </strong>(each citation is a non-negative integer) of a researcher, write a function to compute the researcher&#39;s h-index.

According to the<a href="https://en.wikipedia.org/wiki/H-index" target="_blank">definition of h-index on Wikipedia</a>: &quot;A scientist has index<i>h</i>if<i>h</i>of his/her<i>N</i>papers have<b>at least</b><i>h</i>citations each, and the other<i>N &minus; h</i>papers have<b>no more than</b><i>h</i>citations each.&quot;

<b>Example:</b>

<pre>
<b>Input:</b> <code>citations = [0,1,3,5,6]</code>
<b>Output:</b> 3 
<strong>Explanation: </strong><code>[0,1,3,5,6] </code>means the researcher has <code>5</code> papers in total and each of them had 
             received 0<code>, 1, 3, 5, 6</code> citations respectively. 
            Since the researcher has <code>3</code> papers with <b>at least</b> <code>3</code> citations each and the remaining 
            two with <b>no more than</b> <code>3</code> citations each, her h-index is <code>3</code>.</pre>

<strong>Note:</strong>

If there are several possible values for<em>h</em>, the maximum one is taken as the h-index.

<strong>Follow up:</strong>

<ul>
	This is a follow up problem to<a href="/problems/h-index/description/">H-Index</a>, where <code>citations</code> is now guaranteed to be sorted in ascending order.
	Could you solve it in logarithmic time complexity?
</ul>
