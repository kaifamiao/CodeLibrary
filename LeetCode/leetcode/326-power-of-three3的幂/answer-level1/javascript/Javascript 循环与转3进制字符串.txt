### 解一 循环

1. 循环求 n / 3 的值 
2. 直到 n < 3  
3. 最后判断n 是否等于1

### 代码
```Javascript []
var isPowerOfThree = function(n) {
    while(n >= 3){
        n /= 3;
    }
    return n === 1;
};
```
### 解二 转换基底
我们可以把n 转换为3进制字符串利用正则来解决该问题
先来看下转换规则
 n = 1  时 ==> 转3进制数为 1
 n = 3  时 ==> 转3进制数为 10
 n = 9  时 ==> 转3进制数为 100
 n = 27 时 ==> 转3进制数为 1000
...
很明显可以看出 第一位 为 **1** 其余位为 **0** 或空的3进制数 即为 3的幂
由此可以得到正则 ```/^10*$/```
### 代码
```Javascript []
var isPowerOfThree = function(n) {
   return /^10*$/.test(n.toString(3));
};
```