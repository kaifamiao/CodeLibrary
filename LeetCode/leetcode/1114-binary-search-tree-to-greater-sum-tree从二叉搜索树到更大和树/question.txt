binary-search-tree-to-greater-sum-tree
给出二叉<strong> 搜索 </strong>树的根节点，该二叉树的节点值各不相同，修改二叉树，使每个节点 <code>node</code>的新值等于原树中大于或等于<code>node.val</code>的值之和。

提醒一下，二叉搜索树满足下列约束条件：

<ul>
	节点的左子树仅包含键<strong> 小于 </strong>节点键的节点。
	节点的右子树仅包含键<strong> 大于</strong> 节点键的节点。
	左右子树也必须是二叉搜索树。
</ul>



<strong>示例：</strong>

<strong><img alt="" src="https://assets.leetcode-cn.com/aliyun-lc-upload/uploads/2019/05/03/tree.png" style="height: 191px; width: 280px;"></strong>

<pre><strong>输入：</strong>[4,1,6,0,2,5,7,null,null,null,3,null,null,null,8]
<strong>输出：</strong>[30,36,21,36,35,26,15,null,null,null,33,null,null,null,8]
</pre>



<strong>提示：</strong>

<ol>
	树中的节点数介于 <code>1</code> 和 <code>100</code> 之间。
	每个节点的值介于<code>0</code> 和<code>100</code>之间。
	给定的树为二叉搜索树。
</ol>



<strong>注意：</strong>该题目与 538:<a href="https://leetcode-cn.com/problems/convert-bst-to-greater-tree/">https://leetcode-cn.com/problems/convert-bst-to-greater-tree/ </a>相同

从二叉搜索树到更大和树
Given the root of a binary <strong>search</strong> tree with distinct values, modify it so that every <code>node</code>has a new value equal to the sum of the values of the original tree that are greater than or equal to <code>node.val</code>.

As a reminder, a<em>binary search tree</em> is a tree that satisfies these constraints:

<ul>
	The left subtree of a node contains only nodes with keys<strong>less than</strong>the node&#39;s key.
	The right subtree of a node contains only nodes with keys<strong>greater than</strong>the node&#39;s key.
	Both the left and right subtrees must also be binary search trees.
</ul>



<strong>Example 1:</strong>

<strong><img alt="" src="https://assets.leetcode.com/uploads/2019/05/02/tree.png" style="width: 280px; height: 191px;" /></strong>

<pre>
<strong>Input: </strong><span id="example-input-1-1">[4,1,6,0,2,5,7,null,null,null,3,null,null,null,8]</span>
<strong>Output: </strong><span id="example-output-1">[30,36,21,36,35,26,15,null,null,null,33,null,null,null,8]</span>
</pre>

<div>

</div>

<strong>Constraints:</strong>

<ol>
	The number of nodes in the tree is between <code>1</code> and <code>100</code>.
	Each node will have value between <code>0</code> and <code>100</code>.
	The given tree is a binary search tree.
</ol>

<div>
<div>
<div><strong>Note:</strong> This question is the same as 538:<a href="https://leetcode.com/problems/convert-bst-to-greater-tree/">https://leetcode.com/problems/convert-bst-to-greater-tree/</a></div>
</div>
</div>
