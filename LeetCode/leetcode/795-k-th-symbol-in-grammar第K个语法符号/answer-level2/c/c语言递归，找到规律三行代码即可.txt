
将题目给的数多写几行便会发现规律。
(1) 0
(2) 01
(3) 0110
(4) 0110 1001
(5) 0110 1001 1001 0110

观察可以发现如下规律：
(1)、第1列的数字都是0。
(2)、当列数K可以被2整除时，该列的数值和K/2列的数值相反。
(3)、当列数K不能被2整除时，该列的数值和(K+1)/2列的数值相同。

例如第5行第8列的数字，m[5][8]=1,因为8/2=4，即可以被整除，所以m[5][8]的数和m[4][4]的数相反，即m[4][4]=0.
接下来因为4/2=2，也可以被整除，所以m[3][2]和m[4][4]的数也相反，即为m[3][2]=1,接下来m[2][1]是第1列的数字，是0.

不能整除的例如m[5][3]=1,k=3,按照总结的规律，m[4][(3+1)/2]即m[4][2]=m[5][3]=1.

注意：以上的规律和变量N没有关系，即不用改变N值得到的数字也是答案。

于是便可以写下递归程序：
```
int kthGrammar(int N, int K){

    if(K == 1) return 0;
    
    if(K%2 == 0) return !kthGrammar(N,K/2);
    
    return kthGrammar(N,(K+1)/2);
    
}
```
