### 解题思路
可以看到，第N行的每两个字符会分别对应N-1行的每个字符

在第N行中：
1、如果K为奇数，则第K个字符和第K+1个字符是由第N-1行的第((K+1)/2)个字符生成
2、如果K为偶数，则第K-1个字符和第K个字符是由第N-1行的第(K/2)个字符生成
3、生成规则如题所述
以此为递归公式

另外，由于K的范围 [1, 2^(N-1)]，必然K比N先递归到1，只用当K=2^(N-1)时，K和N同时到1，即第1行第1个字符
当K=1，即最终必然会收缩到在某一行(N>=1)的第一个字符，明显必然是0
此为边界条件

时间复杂度O(n)


### 代码

```java
class Solution {
    public int kthGrammar(int N, int K) {
        if (K==1) {
            return 0;
        }
        if (K % 2 == 0) {
            return 1 - kthGrammar(N - 1, K / 2);
        } else {
            return kthGrammar(N - 1, (K + 1) / 2);
        }
    }
}
```