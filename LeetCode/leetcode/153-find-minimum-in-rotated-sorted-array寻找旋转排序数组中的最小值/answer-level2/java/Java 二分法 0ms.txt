### 解题思路
从题意可以发现很重要的一点：数组最后一个数一定大于要找的答案。

例如：
3 4 5 1 2 

可以将上面的数组分成两段，第一段： 3 4 5  第二段 1 2
他们都是分别递增的，根据题意可得特性： 2 <= [3,4,5] 恒成立。

所以可以利用二分搜索，利用mid定位，如果mid所在的位置上的数字大于数组尾部数字，那么答案一定在右边的区间,反之答案在左边的区间。

根据上述解释，大家可以在草稿纸上随便多列举几组数据就会发现是这么回事了~~

### 代码

```java
class Solution {
    public int findMin(int[] nums) {
         
         int n = nums.length;
         if (n == 0) return 0;

         int l = 0;
         int r = n - 1;
         while (l < r) {
             int mid = l + r >> 1;                   

             if (nums[mid] > nums[n - 1]) l = mid + 1;   // 如果当前数比数组末尾的数还大，说明答案一定在右边的区间
             else r = mid;
         }

         return nums[r];
    }
}
```

执行用时 :0 ms, 在所有 Java 提交中击败了100.00% 的用户
内存消耗 :38.7 MB, 在所有 Java 提交中击败了5.09%的用户