words-frequency-lcci
设计一个方法，找出任意指定单词在一本书中的出现频率。
你的实现应该支持如下操作：
<ul>
<code>WordsFrequency(book)</code>构造函数，参数为字符串数组构成的一本书
<code>get(word)</code>查询指定单词在数中出现的频率
</ul>
<strong>示例：</strong>
<pre>WordsFrequency wordsFrequency = new WordsFrequency({"i", "have", "an", "apple", "he", "have", "a", "pen"});
wordsFrequency.get("you"); //返回0，"you"没有出现过
wordsFrequency.get("have"); //返回2，"have"出现2次
wordsFrequency.get("an"); //返回1
wordsFrequency.get("apple"); //返回1
wordsFrequency.get("pen"); //返回1
</pre>
<strong>提示：</strong>
<ul>
<code>book[i]</code>中只包含小写字母
<code>1 <= book.length <= 100000</code>
<code>1 <= book[i].length <= 10</code>
<code>get</code>函数的调用次数不会超过100000
</ul>

单词频率
Design a method to find the frequency of occurrences of any given word in a book. What if we were running this algorithm multiple times?

You should implement following methods:

<ul>
	<code>WordsFrequency(book)</code> constructor, parameter is a array of strings, representing the book.
	<code>get(word)</code>get the frequency of <code>word</code> in the book.
</ul>

<strong>Example: </strong>

<pre>
WordsFrequency wordsFrequency = new WordsFrequency({&quot;i&quot;, &quot;have&quot;, &quot;an&quot;, &quot;apple&quot;, &quot;he&quot;, &quot;have&quot;, &quot;a&quot;, &quot;pen&quot;});
wordsFrequency.get(&quot;you&quot;); //returns 0，&quot;you&quot; is not in the book
wordsFrequency.get(&quot;have&quot;); //returns 2，&quot;have&quot; occurs twice in the book
wordsFrequency.get(&quot;an&quot;); //returns 1
wordsFrequency.get(&quot;apple&quot;); //returns 1
wordsFrequency.get(&quot;pen&quot;); //returns 1
</pre>

<strong>Note: </strong>

<ul>
	<code>There are only lowercase letters in book[i].</code>
	<code>1 &lt;= book.length &lt;= 100000</code>
	<code>1 &lt;= book[i].length &lt;= 10</code>
	<code>get</code>function will not be called more than100000 times.
</ul>
