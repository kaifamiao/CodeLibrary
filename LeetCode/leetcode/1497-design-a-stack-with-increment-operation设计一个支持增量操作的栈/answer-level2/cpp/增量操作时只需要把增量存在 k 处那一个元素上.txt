### 解题思路
看到好多人用数组实现了栈，而增量操作时将所有k个数都进行了增加。我觉得这应该不是这道题的本意，题目的重点应该在怎么让多次的增量操作变得有效率。所以下面代码栈的部分直接用的STL的stack。

### 代码

```cpp
class CustomStack {
private:
    stack<int> st;
    vector<int> inc{ vector<int>(1000,0) };
    int size_max = -1;
public:
    CustomStack(int maxSize) {
        size_max = maxSize;
    }

    void push(int x) {
        if (st.size() < size_max) {
            st.push(x);
        }
    }

    int pop() {
        if (st.empty()) {
            return -1;
        }
        else {
            int n = st.size();
            int val = st.top() + inc[n - 1];
            st.pop();
            if (n >= 2) {
                inc[n - 2] += inc[n - 1];
            }
            inc[n - 1] = 0;
            return val;
        }
    }

    void increment(int k, int val) {
        int n = min(k, int(st.size()));
        if (n == 0) {
            return;
        }
        else {
            inc[n - 1] += val;
        }

    }
};

/**
 * Your CustomStack object will be instantiated and called as such:
 * CustomStack* obj = new CustomStack(maxSize);
 * obj->push(x);
 * int param_2 = obj->pop();
 * obj->increment(k,val);
 */
```