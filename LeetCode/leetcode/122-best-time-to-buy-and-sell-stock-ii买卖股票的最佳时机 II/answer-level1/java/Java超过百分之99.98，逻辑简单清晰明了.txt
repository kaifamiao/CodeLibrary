这个其实真的我觉得是很简单的一个题，明天比今天贵，今天买明天卖有的挣，手头没持股就买。同样明天比今天便宜，手头持股呢，直接抛，就是卖。
连这涨，然后中间要不要倒手？没必要倒手啊。 1块买2块卖，2块买3块卖，3块买4块买。折腾来折腾去倒了三手不还是挣三块钱么？你一块买4块卖不是一样的？
只要一直在涨的时候，你中间倒不倒手其实是一样的。
然后代码的话只要判断第二天的涨跌和手头持没持股就行了。
```
class Solution {
    public int maxProfit(int[] prices) { 
        //判断手头有没有股票，如果有把买入金额存下来。      
        int buy = -1;
        //这个是赚的钱数，不是一次卖出的钱数，可能单词意思有点偏
        int sell = 0; 
        //要根据后一天情况判断今天该进行的操作，所以遍历到prices.length-1
        for(int i=0;i<prices.length-1;i++){
            //今天比明天便宜，而且手里没有买入的，就买入
            if(prices[i]<prices[i+1] && buy==-1){
                buy = prices[i];
            }
            //如果今天比明天贵，而且手头持股，那么就卖了。
            if(prices[i]>prices[i+1] && buy!=-1){
                sell += prices[i]-buy;
                //手头股卖了则整个状态归-1。
                buy = -1;
            }
        }
        //如果到了最后一天还有货没卖出去那么直接卖出去
        if(buy!=-1){
            sell += prices[prices.length-1]-buy;
        }
        return sell;        
    }
}
```
