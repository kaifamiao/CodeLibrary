# 求2的幂

其实看到与2相关的内容，第一眼想到的就是位运算，毕竟计算机是0、1组成的。使用位运算有两种解法：

1. 循环将`a=2`进行左移操作，如果`a`大于等于`n`循环终止，并判断此时`a`是否等于`2`
2. 第二种就比较简单了通过`(n&(n-1))==0`判断是否为2的幂

## 第一种

```
int a = 2;
while (a < n)
{
    a = a << 2;
}
return a == n;
```

这里包含特殊情况当n为1、2，这里没有做额外判别，请读者自行添加相关代码。另外需要需要说明的是这种方法可能会有溢出以及超时行为，当n过大时此方法无法通过。

## 第二种

```
if (n <= 0)
{
    return false;
}
return (n & (n - 1)) == 0;
```

简单解释一下原理，请看示例

64：01000000
63：00111111

