### 解题思路
首先拿到这道题可以观察题目。题目要求判断当前整数是否为2的幂。

那么首先可以观察一些2的幂的二进制。
例：

1 = 1;
2 = 10;
4 = 100;
8 = 1000;
...

是的，所有为2的幂的整数，其二进制均是除了其有效最高位以外全是0的数。也就是说，我们只需要判断这个数是否有除了有效最高位之外还有没有其他的1即可。

那么这里可以用到一个位运算小技巧：给定一个数n，将n和(n-1)做一次与运算，即可将n的最后一位1去掉：
例：
设 n = 9;
如图：
![2.png](https://pic.leetcode-cn.com/0a4bb891aa6837ff069c6b13c70d3b80a24b64ecf5191047706bafc68eefbe3f-2.png)

那么对于所有2的幂，我们将它与它-1后的数做一次与运算，就会将其唯一一位1消去，最后等于0。

由此可以写出一行return，解决问题。

### 代码

```cpp
class Solution {
public:
    bool isPowerOfTwo(int n) {
        return n > 0 && !(n & (n - 1));
    }
};
```