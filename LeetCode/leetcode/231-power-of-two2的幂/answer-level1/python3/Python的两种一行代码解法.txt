## 解法1
1的二进制表示为`0b1`，2的二进制表示为`0b10`，4的二进制表示为`0b100`，16的二进制表示为`0b1000`。

可以发现，2的整数次幂的二进制表示只有最高位是1，因此解法1很容易想到，一行代码就搞定：
```python
return sum(list(map(int,bin(n)[2:])))==1 if n>0 else False
```
## 解法2
解法2相当巧妙。由于2的整数次幂只有最高位为1，因此如果将其减去1，那么得到的数字最高位为0，其余位

都为1。将原数字和减去一以后的数字做与运算，得到的结果应该是0，因此解法2的代码也很容易：
```
return (n & n - 1) = 0 if n>0 else False
```
解法2的运行时间超过了97.7%的提交。