题目的具体意思翻译过来就是 一个二进制数, 如果最后一位是0, 则右移; 如果最后一位是1, 则置为0, 计算操作次数.
既然如此, 那我只要知道对应二进制数的位数和整个二进制里有多少个1就可以了
```
class Solution:
    def numberOfSteps (self, num: int) -> int:
        x = bin(num)
        return len(x) - 2 - 1 + x.count("1")
```
其中
减去2是因为python的二进制为"0b"开头的字符串, 这里减去2, 
再减1是因为二进制最高位为1, 位数和1的数量重复计算了,需要减去1
