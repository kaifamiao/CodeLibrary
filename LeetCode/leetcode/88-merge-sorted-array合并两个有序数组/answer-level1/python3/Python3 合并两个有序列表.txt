### 解题思路
#### 算法功能
有两个有序列表，List1 和 List2 ；
将 List2 合并到 List1，且 List1 保持有序
#### 算法场景
列表1：部门职位
列表2：新员工
公司招到新员工，需要为新员工安排职位。
原则是根据员工薪资安排岗位。
这里用位置表示岗位高低：位置越后，岗位越高
##### 场景 1
公司成立新部门，此部门无员工，所有员工都是新员工
=>新员工一股脑全放到部门中去
##### 场景 2
部门人手暂时够了，不需要新员工
=>部门保持不变
##### 场景 3
有新项目，部门人手不够，需要人手
=>新员工比老员工薪资高，新员工置后，再比较下一个新员工；
=>新员工比老员工薪资低，老员工置后，并空出老员工原先的位置，再比较下一个老员工；
#### 算法说明
List1 会补充候补位，候补位个数与 List2 的长度相等
#### 算法结构
##### 主要逻辑
从两个列表的尾部开始比较，较大的数与候补位交换位置，且较大数所在列表的长度减一
##### 代码出口
当第二个列表的长度为0时，函数终止
##### 代码复杂度
O(n)

### 代码

```python3
class Solution:
    def merge(self, nums1: List[int], m: int, nums2: List[int], n: int) -> None:
        """
        Do not return anything, modify nums1 in-place instead.
        """
        while n:
            if m == 0:
                nums1[n-1] = nums2[n-1]
                n -= 1
                continue
            if nums1[m-1] < nums2[n-1]:
                nums1[m+n-1], nums2[n-1] = nums2[n-1], nums1[m+n-1]
                n -= 1
            else:
                nums1[m+n-1], nums1[m-1] = nums1[m-1], nums1[m+n-1]
                m -= 1
```