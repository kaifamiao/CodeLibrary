
### 字符串 Hash

对一个字符串进行 hash 预处理后，就可以在 $O(1)$ 的时间复杂度内判断该字符串的任意两个子串是否相等。

下图讲解来自《算法竞赛进阶指南-李煜东》

![](https://pic.leetcode-cn.com/e18ea401170d5d4f8db25110c8ab83b8e7e5ac2181a184c093f85546d91a7594-IMG_20200322_180329.jpg)

### 代码

```cpp
typedef unsigned long long ULL;
class Solution {
public:
    string longestPrefix(string s) {
        int base = 131;
        ULL p[100002]; 
        p[0] = 1;
        ULL hash[100002]; 
        hash[0] = 0;
        for (int i = 1; i <= s.size(); i ++) {
            hash[i] = hash[i-1] * base + s[i-1] - 'a' + 1;
            p[i] = p[i-1] * base;
        }
        for (int i = s.size() - 1; i >= 1; i --) {
            ULL pre = hash[i];
            ULL suf = hash[s.size()] - hash[s.size()-i] * p[i];
            if (pre == suf) {
                return s.substr(0, i);
            }
        }
        return "";
    }
};
```

### 最后

感谢您的观看！欢迎大家留言，一起讨论交流！