WA了5发才想到dp，题都没想明白就开始码代码是最愚蠢的做法。
设计dp[i][j] = 0 / 1     代表树中以节点i为结尾的路径中，是否存在能组成head中的前j个数的路径。
i的状态只与它的父节点有关。那么状态转移为
dp[i][j] = 1  . 当val[i] == head[j] 且 dp[i - 1][j - 1] == 1;
否则dp[i][j] = 0;
然后遍历所有节点，check是否存在某个节点X使得dp[x][len(head)] == 1

时间复杂度:O(n * m) 2500 * 100 = 250000
真拉跨