interval-list-intersections
给定两个由一些<strong>闭区间</strong>组成的列表，每个区间列表都是成对不相交的，并且已经排序。

返回这两个区间列表的交集。

<em>（形式上，闭区间<code>[a, b]</code>（其中<code>a &lt;= b</code>）表示实数<code>x</code>的集合，而<code>a &lt;= x &lt;= b</code>。两个闭区间的交集是一组实数，要么为空集，要么为闭区间。例如，[1, 3] 和 [2, 4] 的交集为 [2, 3]。）</em>



<strong>示例：</strong>

<strong><img alt="" src="https://assets.leetcode-cn.com/aliyun-lc-upload/uploads/2019/02/02/interval1.png" style="height: 140px; width: 506px;"></strong>

<pre><strong>输入：</strong>A = [[0,2],[5,10],[13,23],[24,25]], B = [[1,5],[8,12],[15,24],[25,26]]
<strong>输出：</strong>[[1,2],[5,5],[8,10],[15,23],[24,24],[25,25]]
<strong>注意：</strong>输入和所需的输出都是区间对象组成的列表，而不是数组或列表。
</pre>



<strong>提示：</strong>

<ol>
	<code>0 &lt;= A.length &lt; 1000</code>
	<code>0 &lt;= B.length &lt; 1000</code>
	<code>0 &lt;= A[i].start, A[i].end, B[i].start, B[i].end &lt; 10^9</code>
</ol>

区间列表的交集
Given two listsof <strong>closed</strong> intervals, each list of intervals is pairwise disjoint and in sorted order.

Return the intersection of these two interval lists.

<em>(Formally, a closed interval <code>[a, b]</code> (with <code>a &lt;= b</code>) denotesthe set of real numbers <code>x</code> with <code>a &lt;= x &lt;= b</code>. Theintersection of two closed intervals is a set of real numbers that is either empty, or can be represented as a closed interval. For example, the intersection of [1, 3] and [2, 4] is [2, 3].)</em>

<div>


<strong>Example 1:</strong>

<strong><img alt="" src="https://assets.leetcode.com/uploads/2019/01/30/interval1.png" style="width: 506px; height: 140px;" /></strong>

<pre>
<strong>Input: </strong>A = <span id="example-input-1-1">[[0,2],[5,10],[13,23],[24,25]]</span>, B = <span id="example-input-1-2">[[1,5],[8,12],[15,24],[25,26]]</span>
<strong>Output: </strong><span id="example-output-1">[[1,2],[5,5],[8,10],[15,23],[24,24],[25,25]]</span>
<strong>Reminder: </strong>The inputs and the desired output are lists of Intervalobjects, and not arrays or lists.
</pre>



<strong>Note:</strong>

<ol>
	<code>0 &lt;= A.length &lt; 1000</code>
	<code>0 &lt;= B.length &lt; 1000</code>
	<code>0 &lt;= A[i].start, A[i].end, B[i].start, B[i].end &lt; 10^9</code>
</ol>

<strong>NOTE:</strong>input types have been changed on April 15, 2019. Please reset to default code definition to get new method signature.
</div>
