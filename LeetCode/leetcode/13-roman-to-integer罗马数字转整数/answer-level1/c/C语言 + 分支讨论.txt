
**思路分析：**
**（1）全部的罗马符号与整数的对应图**
"M", "CM", "D", "CD", "C", "XC", "L", "XL", "X", "IX", "V", "IV", "I"
1000  900  500   400  100   90    50   40   10     9     5    4    1

**（2）不需要额外考虑的罗马符号与整数对应图**
"M", "D",  "L",  "V"
1000  500   50    5
当从前面往后面遍历数组时，如果遇到上面这些罗马符号，直接对res结果进行相加即可。比如出现V，就直接在res上加5。

**（3） 需要额外考虑的罗马符号与整数对应图**
“I”, "IX", "IV"
 1     9     4
"X", "XC", "XL"
10    40    90
"C", "CM", "CD"
100   900   400

当出现以上三个符号时，我们先判定这些符号后面是不是跟着某些特定的符号。比如说I，如果出现I，那么需要看一下I的下一步是不是X或者V，如果是的话此时I的作用相当于减1.如果不是的话I的作用其实就是罗马符号的1.对于X和C也是同理的。
根据以上逻辑可以得到下面的代码：



```
int romanToInt(char * s)
{
	int res = 0;
	while(*s != '\0'){
		if (*s == 'V'){
			res += 5; 
		}else if(*s == 'L'){
			res += 50;
		} else if(*s == 'D'){
			res += 500;
		}else if (*s == 'M'){
			res += 1000;
		}else if (*s == 'I'){
			res = (*(s + 1) == 'V' || *(s + 1) == 'X')? res - 1: res + 1;
		}else if (*s == 'X'){
			res = (*(s + 1) == 'L' || *(s + 1) == 'C')? res - 10: res + 10;
		}else if(*s == 'C'){
			res = (*(s + 1) == 'D' || *(s + 1) == 'M')? res - 100: res + 100;
		}
		s++;
	} 
	return res;
} 
```
