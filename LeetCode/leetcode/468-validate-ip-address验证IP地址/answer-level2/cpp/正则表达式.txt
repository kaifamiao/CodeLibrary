### 解题思路

C++使用正则表达式，但效率极低，内存消耗也极高。

建议遍历，效率高，内存占用小。

### 代码

```cpp []
class Solution
{
public:
    string validIPAddress(string IP)
    {
        regex ipv4_r("^(((([0-9]{1}){1})|(([1-9]{1}[0-9]{1}){1})|((1{1}[0-9]{2}){1})|((2{1}[0-4]{1}[0-9]{1}){1})|((2{1}5{1}[0-5]{1}){1})){1}\\.){3}(((([0-9]{1}){1})|(([1-9]{1}[0-9]{1}){1})|((1{1}[0-9]{2}){1})|((2{1}[0-4]{1}[0-9]{1}){1})|((2{1}5{1}[0-5]{1}){1})){1})$");
        regex ipv6_r("^(((([0-9]|[a-f]|[A-F]){1,4}){1}:{1}){7})((([0-9]|[a-f]|[A-F]){1,4}){1})$");
        return regex_match(IP, ipv4_r) ? "IPv4" : regex_match(IP, ipv6_r) ? "IPv6" : "Neither";
    }
};
```

![image.png](https://pic.leetcode-cn.com/5d1da8c49347a238939287a87abf68d64a369fe1d2ec64a9c716e0fe697073ea-image.png)
