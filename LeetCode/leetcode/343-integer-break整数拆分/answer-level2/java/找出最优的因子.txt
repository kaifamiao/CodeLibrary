### 解题思路
对于1的拆分没有意义
2的拆成是1+1,1*1=1 所以如果对2继续拆分机会让最终乘积变小
同理3的拆分是1+2,1*2=2,对3继续拆分也会导致最终乘积变小

只要把n尽可能的拆分成包含3的组合，就可以得到最大值。
如果没办法拆成3的组合，就退一步拆成2的组合。
对于3和2，没办法再进行拆分。

所以对数的拆分最优的因子是3其次是2,
所以n%2的余数是1,2 三种情况,
如果余数是1，刚才我们也分析过，对于1的拆分是没有意义的，所以我们退一步，将最后一次的3和1的拆分，用2和2代替。
如果余数是2，那不消多说，直接乘以最后的2即可。
### 代码

```java
class Solution {
    public int integerBreak(int n) {
        if(n==3){
            return 2;
        }
        if(n==2){
            return 1;
        }
        int a=n/3,b=n%3;
        if(b==0){return (int)Math.pow(3,a);}
        if(b==1){return (int)Math.pow(3,a-1)*4;}
        return (int)Math.pow(3,a)*2;
    }
}
```