### 解题思路

### 代码

```cpp
class Solution {
public:
    vector<int> gardenNoAdj(int N, vector<vector<int>>& paths) {
        vector<int> nodePaths[N];
        vector<int> ansewr(N);
        int possibleAns[4] = {1,2,3,4};
        for(int i=0;i<paths.size();i++){
            nodePaths[paths[i][0]-1].push_back(paths[i][1]);
            nodePaths[paths[i][1]-1].push_back(paths[i][0]);
        }
        
        for(int i=0;i<N;i++){
            vector<int> temp(possibleAns,possibleAns+4);
            vector<int> tempPath;
            vector<int> intersection;
            vector<int> difference;
            //cout << nodePaths[i].size() << endl;
            
            for(int j=0;j<nodePaths[i].size();j++){
                int node = nodePaths[i][j];
                tempPath.push_back(ansewr[node-1]);
            }
            
            sort(tempPath.begin(),tempPath.end());
            set_intersection(temp.begin(), temp.end(),tempPath.begin(), tempPath.end(),std::back_inserter(intersection));
            set_difference(temp.begin(), temp.end(), intersection.begin(), intersection.end(), inserter(difference, difference.begin()));
            ansewr[i] = difference[0];
        }
        return ansewr;
    }
};
```