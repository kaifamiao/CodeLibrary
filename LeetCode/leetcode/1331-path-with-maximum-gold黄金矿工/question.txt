path-with-maximum-gold
你要开发一座金矿，地质勘测学家已经探明了这座金矿中的资源分布，并用大小为<code>m * n</code> 的网格 <code>grid</code> 进行了标注。每个单元格中的整数就表示这一单元格中的黄金数量；如果该单元格是空的，那么就是 <code>0</code>。

为了使收益最大化，矿工需要按以下规则来开采黄金：

<ul>
	每当矿工进入一个单元，就会收集该单元格中的所有黄金。
	矿工每次可以从当前位置向上下左右四个方向走。
	每个单元格只能被开采（进入）一次。
	<strong>不得开采</strong>（进入）黄金数目为 <code>0</code> 的单元格。
	矿工可以从网格中 <strong>任意一个</strong> 有黄金的单元格出发或者是停止。
</ul>



<strong>示例 1：</strong>

<pre><strong>输入：</strong>grid = [[0,6,0],[5,8,7],[0,9,0]]
<strong>输出：</strong>24
<strong>解释：</strong>
[[0,6,0],
 [5,8,7],
 [0,9,0]]
一种收集最多黄金的路线是：9 -&gt; 8 -&gt; 7。
</pre>

<strong>示例 2：</strong>

<pre><strong>输入：</strong>grid = [[1,0,7],[2,0,6],[3,4,5],[0,3,0],[9,0,20]]
<strong>输出：</strong>28
<strong>解释：</strong>
[[1,0,7],
 [2,0,6],
 [3,4,5],
 [0,3,0],
 [9,0,20]]
一种收集最多黄金的路线是：1 -&gt; 2 -&gt; 3 -&gt; 4 -&gt; 5 -&gt; 6 -&gt; 7。
</pre>



<strong>提示：</strong>

<ul>
	<code>1 &lt;= grid.length,grid[i].length &lt;= 15</code>
	<code>0 &lt;= grid[i][j] &lt;= 100</code>
	最多 <strong>25 </strong>个单元格中有黄金。
</ul>

黄金矿工
In a gold mine <code>grid</code>of size <code>m * n</code>,each cell in this mine has an integer representing the amount of goldin that cell,<code>0</code> if it is empty.

Return the maximum amount of gold youcan collect under the conditions:

<ul>
	Every time you are located in a cell you will collect all the gold in that cell.
	From your position you can walk one step to the left, right, up or down.
	You can&#39;t visit the same cell more than once.
	Never visit a cell with<code>0</code> gold.
	You can start and stop collecting gold from<strong>any </strong>position in the grid that has some gold.
</ul>


<strong>Example 1:</strong>

<pre>
<strong>Input:</strong> grid = [[0,6,0],[5,8,7],[0,9,0]]
<strong>Output:</strong> 24
<strong>Explanation:</strong>
[[0,6,0],
 [5,8,7],
 [0,9,0]]
Path to get the maximum gold, 9 -&gt; 8 -&gt; 7.
</pre>

<strong>Example 2:</strong>

<pre>
<strong>Input:</strong> grid = [[1,0,7],[2,0,6],[3,4,5],[0,3,0],[9,0,20]]
<strong>Output:</strong> 28
<strong>Explanation:</strong>
[[1,0,7],
 [2,0,6],
 [3,4,5],
 [0,3,0],
 [9,0,20]]
Path to get the maximum gold, 1 -&gt; 2 -&gt; 3 -&gt; 4 -&gt; 5 -&gt; 6 -&gt; 7.
</pre>


<strong>Constraints:</strong>

<ul>
	<code>1 &lt;= grid.length,grid[i].length &lt;= 15</code>
	<code>0 &lt;= grid[i][j] &lt;= 100</code>
	There are at most <strong>25</strong>cells containing gold.
</ul>