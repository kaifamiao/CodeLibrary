## 解题方案

### 思路

- 标签：排序和双指针
- 本题目因为要计算三个数，如果靠暴力枚举的话时间复杂度会到 $O(n^3)$，需要降低时间复杂度
- 首先进行数组排序，时间复杂度 $O(nlogn)$
- 在数组 nums 中，进行遍历，每遍历一个值利用其下标i，形成一个固定值 nums[i]
- 再使用前指针指向 `start = i + 1` 处，后指针指向 `end = nums.length - 1` 处，也就是结尾处
- 根据 `sum = nums[i] + nums[start] + nums[end]` 的结果，判断 sum 与目标 target 的距离，如果更近则更新结果 ans
- 同时判断 sum 与 target 的大小关系，因为数组有序，如果 `sum > target` 则 `end--`，如果 `sum < target` 则 `start++`，如果 `sum == target` 则说明距离为 0 直接返回结果
- 整个遍历过程，固定值为 n 次，双指针为 n 次，时间复杂度为 $O(n^2)$
- 总时间复杂度：$O(nlogn) + O(n^2) = O(n^2)$


### 代码

```java
class Solution {
    public int threeSumClosest(int[] nums, int target) {
        Arrays.sort(nums);
        int ans = nums[0] + nums[1] + nums[2];
        for(int i=0;i<nums.length;i++) {
            int start = i+1, end = nums.length - 1;
            while(start < end) {
                int sum = nums[start] + nums[end] + nums[i];
                if(Math.abs(target - sum) < Math.abs(target - ans))
                    ans = sum;
                if(sum > target)
                    end--;
                else if(sum < target)
                    start++;
                else
                    return ans;
            }
        }
        return ans;
    }
}
```

### 画解



<![frame_00001.png](https://pic.leetcode-cn.com/d3216de50abb8ce2dcece780a824c7a42180c734ced696dd53d614441b0d301b-frame_00001.png),![frame_00002.png](https://pic.leetcode-cn.com/5a775414e381609ab1419029c5f3df63aee17fc8e71427b29f04a0ef70b7e324-frame_00002.png),![frame_00003.png](https://pic.leetcode-cn.com/0b10f105ad8673c7e64f830ea72ead5280de8ebfc06090946a36f5b91e0f404c-frame_00003.png),![frame_00004.png](https://pic.leetcode-cn.com/335bb15014528de4f6efae08f0a506106105eadba4d6a11a4aa1c1824d907368-frame_00004.png),![frame_00005.png](https://pic.leetcode-cn.com/b29c71bfa955e65598b0fdbfb1c335aab8d76578a003d515be0dca2d3027c9d3-frame_00005.png),![frame_00006.png](https://pic.leetcode-cn.com/0e073b44ec1bcec54fbc48babe3731ccbbaf52f2c5992719433260d660966c87-frame_00006.png),![frame_00007.png](https://pic.leetcode-cn.com/cf6d688f87a2143ccc780199e60e116053d2ed8d876a1ffc3fa5f5e89b11d0fc-frame_00007.png),![frame_00008.png](https://pic.leetcode-cn.com/6a0014fa3b9997da5fbc71f9a0adba92d508d44146977ac225def4e8d95dc0f1-frame_00008.png),![frame_00009.png](https://pic.leetcode-cn.com/e0c4c2da031de2527fa087ce65c4b7854561cf74df7ee4a3d04d28e30cf466c1-frame_00009.png),![frame_00010.png](https://pic.leetcode-cn.com/ca5ebe2852ae5d00e5f0bb91430cad671fb9ad5797ba98c682bad3abade99358-frame_00010.png),![frame_00011.png](https://pic.leetcode-cn.com/110005a9eb07792ef607b7e66f35b768a560efd78024fe50a178c156ed6f3787-frame_00011.png)>

点击我的头像加关注，和我一起打卡天天算法