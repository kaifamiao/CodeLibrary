minimum-cost-for-tickets
在一个火车旅行很受欢迎的国度，你提前一年计划了一些火车旅行。在接下来的一年里，你要旅行的日子将以一个名为<code>days</code>的数组给出。每一项是一个从<code>1</code>到<code>365</code>的整数。

火车票有三种不同的销售方式：

<ul>
	一张为期一天的通行证售价为<code>costs[0]</code> 美元；
	一张为期七天的通行证售价为<code>costs[1]</code> 美元；
	一张为期三十天的通行证售价为<code>costs[2]</code> 美元。
</ul>

通行证允许数天无限制的旅行。 例如，如果我们在第 2 天获得一张为期 7 天的通行证，那么我们可以连着旅行 7 天：第 2 天、第 3 天、第 4 天、第 5 天、第 6 天、第 7 天和第 8 天。

返回你想要完成在给定的列表<code>days</code>中列出的每一天的旅行所需要的最低消费。



<strong>示例 1：</strong>

<pre><strong>输入：</strong>days = [1,4,6,7,8,20], costs = [2,7,15]
<strong>输出：</strong>11
<strong>解释： </strong>
例如，这里有一种购买通行证的方法，可以让你完成你的旅行计划：
在第 1 天，你花了 costs[0] = $2 买了一张为期 1 天的通行证，它将在第 1 天生效。
在第 3 天，你花了 costs[1] = $7 买了一张为期 7 天的通行证，它将在第 3, 4, ..., 9 天生效。
在第 20 天，你花了 costs[0] = $2 买了一张为期 1 天的通行证，它将在第 20 天生效。
你总共花了 $11，并完成了你计划的每一天旅行。
</pre>

<strong>示例 2：</strong>

<pre><strong>输入：</strong>days = [1,2,3,4,5,6,7,8,9,10,30,31], costs = [2,7,15]
<strong>输出：</strong>17
<strong>解释：
</strong>例如，这里有一种购买通行证的方法，可以让你完成你的旅行计划： 
在第 1 天，你花了 costs[2] = $15 买了一张为期 30 天的通行证，它将在第 1, 2, ..., 30 天生效。
在第 31 天，你花了 costs[0] = $2 买了一张为期 1 天的通行证，它将在第 31 天生效。 
你总共花了 $17，并完成了你计划的每一天旅行。
</pre>



<strong>提示：</strong>

<ol>
	<code>1 &lt;= days.length &lt;= 365</code>
	<code>1 &lt;= days[i] &lt;= 365</code>
	<code>days</code>按顺序严格递增
	<code>costs.length == 3</code>
	<code>1 &lt;= costs[i] &lt;= 1000</code>
</ol>

最低票价
In a country popular for train travel, youhave planned some train travelling one year in advance. The days of the year that you will travel is given as an array <code>days</code>. Each day is an integer from <code>1</code> to <code>365</code>.

Train tickets are sold in 3 different ways:

<ul>
	a 1-day pass is sold for <code>costs[0]</code> dollars;
	a 7-day pass is sold for <code>costs[1]</code> dollars;
	a 30-day pass is sold for <code>costs[2]</code> dollars.
</ul>

The passes allow that many days of consecutive travel. For example, if we get a 7-day pass on day 2, then we can travel for 7 days: day 2, 3, 4, 5, 6, 7, and 8.

Return the minimum number of dollars you need to travel every day in the given list of <code>days</code>.



<strong>Example 1:</strong>

<pre>
<strong>Input: </strong>days = <span id="example-input-1-1">[1,4,6,7,8,20]</span>, costs = <span id="example-input-1-2">[2,7,15]</span>
<strong>Output: </strong><span id="example-output-1">11</span>
<strong>Explanation: </strong>
For example, here is one way to buy passes that lets you travel your travel plan:
On day 1, you bought a 1-day pass for costs[0] = $2, which covered day 1.
On day 3, you bought a 7-day pass for costs[1] = $7, which covered days 3, 4, ..., 9.
On day 20, you bought a 1-day pass for costs[0] = $2, which covered day 20.
In total you spent $11 and covered all the days of your travel.
</pre>

<div>
<strong>Example 2:</strong>

<pre>
<strong>Input: </strong>days = <span id="example-input-2-1">[1,2,3,4,5,6,7,8,9,10,30,31]</span>, costs = <span id="example-input-2-2">[2,7,15]</span>
<strong>Output: </strong><span id="example-output-2">17</span>
<strong>Explanation: </strong>
For example, here is one way to buy passes that lets you travel your travel plan:
On day 1, you bought a 30-day pass for costs[2] = $15 which covered days 1, 2, ..., 30.
On day 31, you bought a 1-day pass for costs[0] = $2 which covered day 31.
In total you spent $17 and covered all the days of your travel.
</pre>


</div>

<strong>Note:</strong>

<ol>
	<code>1 &lt;= days.length &lt;= 365</code>
	<code>1 &lt;= days[i] &lt;= 365</code>
	<code>days</code> is in strictly increasing order.
	<code>costs.length == 3</code>
	<code>1 &lt;= costs[i] &lt;= 1000</code>
</ol>
