product-of-array-except-self
给你一个长度为<em>n</em>的整数数组<code>nums</code>，其中<em>n</em> &gt; 1，返回输出数组<code>output</code>，其中 <code>output[i]</code>等于<code>nums</code>中除<code>nums[i]</code>之外其余各元素的乘积。



<strong>示例:</strong>

<pre><strong>输入:</strong> <code>[1,2,3,4]</code>
<strong>输出:</strong> <code>[24,12,8,6]</code></pre>



<strong>提示：</strong>题目数据保证数组之中任意元素的全部前缀元素和后缀（甚至是整个数组）的乘积都在 32 位整数范围内。

<strong>说明: </strong>请<strong>不要使用除法，</strong>且在O(<em>n</em>) 时间复杂度内完成此题。

<strong>进阶：</strong><br>
你可以在常数空间复杂度内完成这个题目吗？（ 出于对空间复杂度分析的目的，输出数组<strong>不被视为</strong>额外空间。）

除自身以外数组的乘积
Given an array <code>nums</code> of <em>n</em> integers where <em>n</em> &gt; 1, return an array <code>output</code> such that <code>output[i]</code> is equal to the product of all the elements of <code>nums</code> except <code>nums[i]</code>.

<b>Example:</b>

<pre>
<b>Input:</b>  <code>[1,2,3,4]</code>
<b>Output:</b> <code>[24,12,8,6]</code>
</pre>

<strong>Constraint:</strong>It&#39;s guaranteed that the product of the elements of any prefix or suffix of the array (including the whole array) fits in a 32 bit integer.

<strong>Note: </strong>Please solve it <strong>without division</strong> and in O(<em>n</em>).

<strong>Follow up:</strong><br />
Could you solve it with constant space complexity? (The output array <strong>does not</strong> count as extra space for the purpose of space complexity analysis.)
