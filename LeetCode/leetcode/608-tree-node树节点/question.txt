tree-node
给定一个表<code>tree</code>，<strong>id</strong> 是树节点的编号，<strong>p_id</strong>是它父节点的<strong>id 。</strong>

<pre>+----+------+
| id | p_id |
+----+------+
| 1  | null |
| 2  | 1    |
| 3  | 1    |
| 4  | 2    |
| 5  | 2    |
+----+------+</pre>

树中每个节点属于以下三种类型之一：

<ul>
	叶子：如果这个节点没有任何孩子节点。
	根：如果这个节点是整棵树的根，即没有父节点。
	内部节点：如果这个节点既不是叶子节点也不是根节点。
</ul>



写一个查询语句，输出所有节点的编号和节点的类型，并将结果按照节点编号排序。上面样例的结果为：



<pre>+----+------+
| id | Type |
+----+------+
| 1  | Root |
| 2  | Inner|
| 3  | Leaf |
| 4  | Leaf |
| 5  | Leaf |
+----+------+
</pre>



<strong>解释</strong>

<ul>
	节点 &#39;1&#39; 是根节点，因为它的父节点是 NULL ，同时它有孩子节点 &#39;2&#39; 和 &#39;3&#39; 。
	节点 &#39;2&#39; 是内部节点，因为它有父节点 &#39;1&#39; ，也有孩子节点 &#39;4&#39; 和 &#39;5&#39; 。
	节点 &#39;3&#39;, &#39;4&#39; 和 &#39;5&#39; 都是叶子节点，因为它们都有父节点同时没有孩子节点。
	样例中树的形态如下：
	

	<pre>			  1
			/   \
                      2       3
                    /   \
                  4       5
</pre>

	
	
</ul>

<strong>注意</strong>

如果树中只有一个节点，你只需要输出它的根属性。

树节点
Given a table <code>tree</code>, <b>id</b> is identifier of the tree node and <b>p_id</b> is its parent node&#39;s <b>id</b>.

<pre>
+----+------+
| id | p_id |
+----+------+
| 1  | null |
| 2  | 1    |
| 3  | 1    |
| 4  | 2    |
| 5  | 2    |
+----+------+
</pre>
Each node in the tree can be one of three types:

<ul>
	Leaf: if the node is a leaf node.
	Root: if the node is the root of the tree.
	Inner: If the node is neither a leaf node nor a root node.
</ul>


Write a query to print the node id and the type of the node. Sort your output by the node id. The result for the above sample is:



<pre>
+----+------+
| id | Type |
+----+------+
| 1  | Root |
| 2  | Inner|
| 3  | Leaf |
| 4  | Leaf |
| 5  | Leaf |
+----+------+
</pre>



<b>Explanation</b>



<ul>
	Node &#39;1&#39; is root node, because its parent node is NULL and it has child node &#39;2&#39; and &#39;3&#39;.
	Node &#39;2&#39; is inner node, because it has parent node &#39;1&#39; and child node &#39;4&#39; and &#39;5&#39;.
	Node &#39;3&#39;, &#39;4&#39; and &#39;5&#39; is Leaf node, because they have parent node and they don&#39;t have child node.
	<br />
	And here is the image of the sample tree as below:
	

	<pre>
			  1
			/   \
                      2       3
                    /   \
                  4       5
</pre>

	<b>Note</b>

	If there is only one node on the tree, you only need to output its root attributes.
	
</ul>
