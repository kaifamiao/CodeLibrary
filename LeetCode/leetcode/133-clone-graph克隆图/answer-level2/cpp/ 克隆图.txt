### 解题思路
此处撰写解题思路

### 代码

```cpp
/*
// Definition for a Node.
class Node {
public:
    int val;
    vector<Node*> neighbors;
    
    Node() {
        val = 0;
        neighbors = vector<Node*>();
    }
    
    Node(int _val) {
        val = _val;
        neighbors = vector<Node*>();
    }
    
    Node(int _val, vector<Node*> _neighbors) {
        val = _val;
        neighbors = _neighbors;
    }
};
*/
class Solution {
public:
    map<int,Node*> m1;
    Node* cloneGraph(Node* node) {
        if(node == NULL){
            return NULL;
        }

        int val = node->val;
        std::map<int,Node*>::iterator it;
        it = m1.find(val);
        if(it != m1.end()){
            return it->second;
        }
        vector<Node*> neighbors;
        Node* nodeCopy = new Node(val);
        m1.insert(pair<int,Node*>(val,nodeCopy));
        for(int i=0;i<node->neighbors.size();i++){
            neighbors.push_back(cloneGraph(node->neighbors[i]));
        }
        nodeCopy->neighbors = neighbors;
        return nodeCopy;
    }
};
```