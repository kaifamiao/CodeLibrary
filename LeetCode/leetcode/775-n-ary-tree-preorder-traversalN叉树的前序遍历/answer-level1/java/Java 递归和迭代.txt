***我的[leetcode解题集](https://github.com/JuiceZhou/Leetcode/blob/master/java/tree/%24589_NaryTreePreorderTraversal.java)，持续更新。***

1.递归：
```
public List<Integer> preorder1(Node root) {
    List<Integer> res = new ArrayList<>();
    if (root == null) return res;
    helper(root, res);
    return res;
}

private void helper(Node root, List<Integer> res) {
    if (root == null) return;
    res.add(root.val);
    for (Node node : root.children) {
        helper(node, res);
    }
}
```

2.迭代
```
public List<Integer> preorder2(Node root) {
    List<Integer> res = new ArrayList<>();
    if (root == null) return res;
    Stack<Node> stack = new Stack<>();
    stack.push(root);
    while (!stack.isEmpty()) {
        Node cur = stack.pop();
        //头结点加入结果集
        res.add(cur.val);
        //将该节点的子节点从右往左压入栈
        List<Node> nodeList = cur.children;
        for (int i = nodeList.size() - 1; i >= 0; i--) {
            stack.push(nodeList.get(i));
        }
    }
    return res;
}
```
