shortest-supersequence-lcci
假设你有两个数组，一个长一个短，短的元素均不相同。找到长数组中包含短数组所有的元素的最短子数组，其出现顺序无关紧要。

返回最短子数组的左端点和右端点，如有多个满足条件的子数组，返回左端点最小的一个。若不存在，返回空数组。

<strong>示例 1:</strong>

<pre><strong>输入:</strong>
big = <code>[7,5,9,0,2,1,3,<strong>5,7,9,1</strong>,1,5,8,8,9,7]
small = [1,5,9]</code>
<strong>输出: </strong>[7,10]</pre>

<strong>示例 2:</strong>

<pre><strong>输入:</strong>
big = <code>[1,2,3]
small = [4]</code>
<strong>输出: </strong>[]</pre>

<strong>提示：</strong>

<ul>
	<code>big.length&lt;= 100000</code>
	<code>1 &lt;= small.length&lt;= 100000</code>
</ul>

最短超串
You are given two arrays, one shorter (with all distinct elements) and one longer. Find the shortest subarray in the longer array that contains all the elements in the shorter array. The items can appear in any order.

Return the indexes of the leftmost and the rightmost elements of the array. If there are more than one answer, return the one that has the smallest left index. If there is no answer, return an empty array.

<strong>Example 1:</strong>

<pre>
<strong>Input:</strong>
big = <code>[7,5,9,0,2,1,3,<strong>5,7,9,1</strong>,1,5,8,8,9,7]
small = [1,5,9]</code>
<strong>Output: </strong>[7,10]</pre>

<strong>Example 2:</strong>

<pre>
<strong>Input:</strong>
big = <code>[1,2,3]
small = [4]</code>
<strong>Output: </strong>[]</pre>

<strong>Note: </strong>

<ul>
	<code>big.length&lt;= 100000</code>
	<code>1 &lt;= small.length&lt;= 100000</code>
</ul>
