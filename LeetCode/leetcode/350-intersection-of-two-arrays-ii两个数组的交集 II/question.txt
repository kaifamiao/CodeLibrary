intersection-of-two-arrays-ii
给定两个数组，编写一个函数来计算它们的交集。

<strong>示例 1:</strong>

<pre><strong>输入: </strong>nums1 = [1,2,2,1], nums2 = [2,2]
<strong>输出: </strong>[2,2]
</pre>

<strong>示例 2:</strong>

<pre><strong>输入: </strong>nums1 = [4,9,5], nums2 = [9,4,9,8,4]
<strong>输出: </strong>[4,9]</pre>

<strong>说明：</strong>

<ul>
	输出结果中每个元素出现的次数，应与元素在两个数组中出现的次数一致。
	我们可以不考虑输出结果的顺序。
</ul>

<strong><strong>进阶:</strong></strong>

<ul>
	如果给定的数组已经排好序呢？你将如何优化你的算法？
	如果<em>nums1</em>的大小比<em>nums2</em>小很多，哪种方法更优？
	如果<em>nums2</em>的元素存储在磁盘上，磁盘内存是有限的，并且你不能一次加载所有的元素到内存中，你该怎么办？
</ul>

两个数组的交集 II
Given two arrays, write a function to compute their intersection.

<strong>Example 1:</strong>

<pre>
<strong>Input: </strong>nums1 = <span id="example-input-1-1">[1,2,2,1]</span>, nums2 = <span id="example-input-1-2">[2,2]</span>
<strong>Output: </strong><span id="example-output-1">[2,2]</span>
</pre>

<div>
<strong>Example 2:</strong>

<pre>
<strong>Input: </strong>nums1 = <span id="example-input-2-1">[4,9,5]</span>, nums2 = <span id="example-input-2-2">[9,4,9,8,4]</span>
<strong>Output: </strong><span id="example-output-2">[4,9]</span></pre>
</div>

<b>Note:</b>

<ul>
	Each element in the result should appear as many times as it shows in both arrays.
	The result can be in any order.
</ul>

<b>Follow up:</b>

<ul>
	What if the given array is already sorted? How would you optimize your algorithm?
	What if <i>nums1</i>&#39;s size is small compared to <i>nums2</i>&#39;s size? Which algorithm is better?
	What if elements of <i>nums2</i> are stored on disk, and the memory is limited such that you cannot load all elements into the memory at once?
</ul>
