### DP 思路
1. 状态定义：   

 ```buy[i], sell[i, cooldown[i]] 记录i天buy sell 和 cooldown最大收益```  

2. 状态转移方程：  

```
buy[i] = Max(buy[i-1], cooldown[i-1]-prices[i])    
sell[i] = Max(buy[i-1]+prices[i], sell[i-1])    
cooldown[i] = sell[i-1]    
```  

> 因为只需要记录上次最大记录，所以可以把状态压缩到 buy sell cooldown

```
func maxProfit(prices []int) int {
	if prices == nil || len(prices) == 0 || len(prices) == 1 {
		return 0
	}
	
	var (
		buy = -prices[0]
		sell = 0
		cooldown = 0
	)

	for i := 1; i < len(prices); i++ {
		buy, sell, cooldown = Max(buy, cooldown-prices[i]), Max(buy+prices[i], sell), sell
	}
	return Max(sell, cooldown)
}

func Max(x, y int) int {
	if x > y {
		return x
	}
	return y
}
```