### 解题思路
直接动态规划分析：
假设已经知道前n-1个柱子的涂色方案数，则考虑涂n个柱子的涂色方案数。则第n个柱子的涂色选择依赖于第n-1个柱子的涂色。由题意知，第n-1个柱子的涂色或者是新颜色（相对于第n-2个柱子），或者是和第n-2个柱子颜色相同。
设第n-1个柱子的涂色是新颜色的方案数是m1, 第n-1个柱子的涂色不是新颜色的方案数是m2。
则第n个柱子选择新颜色的方案数是m1*(k-1)+m2*(k-1), 第n个柱子不选新颜色的方案数是m1。
这样就得到递推公式。
现在看初始条件：
当 n=1 时，m1,m2无意义。
当 n=2 时，m1 = k*(k-1); m2 = k。


### 代码

```cpp
class Solution {
public:
    int numWays(int n, int k) {
        if(n==0)
            return 0;
        if(n==1)
            return k;
        int m1,m2;
        m1 = k*(k-1);
        m2 = k;
        if(n==2){
            return m1+m2;
        }
        //当柱子数大于等于3时，至少需要2种颜色
        if(k<2)
            return 0;

        for(int i=2;i<n;i++){
            int t = m1;//为保证m2正确赋值，申请临时变量存储m1。
            m1 = m1*(k-1)+m2*(k-1);
            m2 = t;
        }
        return m1+m2;
    }
};
```