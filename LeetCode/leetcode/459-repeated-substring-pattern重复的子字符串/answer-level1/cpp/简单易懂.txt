### 解题思路
不知道怎么讲，举个例子：现在有一个由一个子串重复多次构成的字符串s1="AbcAbc"和一个***不是***由一个子串重复多次构成的字符串s2="Abcdef"，分别用他们重复构成字符串S1="AbcAbcAbcAbc"和S2="AbcdefAbcdef"。现在我们要分别从下标1开始在S1和S2里找s1和s2的子串下边，我们会发现s1返回下标为3，而s2返回下标为6恰好为s2的字符数。再举其他例子验证一下，发现如果一个小字符串s不是由一个子串重复多次构成的话，在用s重复一次构成的大字符串S中查找s所返回的下标必然为s的字符数。
所以这题只需要用题目给出的小字符串s重复一次构成的大字符串S并查找s，再将返回的小标与s的字符数进行对比，如果相等则可以判断s
不可以由它的一个子串重复多次构成，反之则反。
### 代码

```cpp
class Solution {
public:
    bool repeatedSubstringPattern(string s) {
        
        return (s + s).find(s, 1) != s.size();

    }
};
```