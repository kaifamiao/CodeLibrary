
```javascript
/**
 * Definition for isBadVersion()
 * 
 * @param {integer} version number
 * @return {boolean} whether the version is bad
 * isBadVersion = function(version) {
 *     ...
 * };
 */

/**
 * @param {function} isBadVersion()
 * @return {function}
 */
var solution = function(isBadVersion) {
    /**
     * @param {integer} n Total versions
     * @return {integer} The first bad version
     */
    return function(n) {
        var initNum = 1
        if(initNum > n) return -1;

        while(initNum <= n){
            var mid = initNum + ((n - initNum) >> 1);
            if(isBadVersion(mid) === false){
                initNum = mid + 1;
            }else{
                n = mid - 1
            }
        }
        return n+1
    };
};
```
