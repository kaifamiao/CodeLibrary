intersection-of-three-sorted-arrays
给出三个均为 <strong>严格递增排列 </strong>的整数数组<code>arr1</code>，<code>arr2</code> 和<code>arr3</code>。

返回一个由<strong>仅 </strong>在这三个数组中<strong>同时出现</strong>的整数所构成的有序数组。



<strong>示例：</strong>

<pre><strong>输入: </strong>arr1 = [1,2,3,4,5], arr2 = [1,2,5,7,9], arr3 = [1,3,4,5,8]
<strong>输出: </strong>[1,5]
<strong>解释: </strong>只有 1 和 5 同时在这三个数组中出现.
</pre>



<strong>提示：</strong>

<ol>
	<code>1 &lt;= arr1.length, arr2.length, arr3.length &lt;= 1000</code>
	<code>1 &lt;= arr1[i], arr2[i], arr3[i] &lt;= 2000</code>
</ol>

三个有序数组的交集
Given three integer arrays <code>arr1</code>, <code>arr2</code> and <code>arr3</code><strong>sorted</strong> in <strong>strictly increasing</strong> order, return a sorted array of <strong>only</strong>theintegers that appeared in <strong>all</strong> three arrays.


<strong>Example 1:</strong>

<pre>
<strong>Input:</strong> arr1 = [1,2,3,4,5], arr2 = [1,2,5,7,9], arr3 = [1,3,4,5,8]
<strong>Output:</strong> [1,5]
<strong>Explanation: </strong>Only 1 and 5 appeared in the three arrays.
</pre>


<strong>Constraints:</strong>

<ul>
	<code>1 &lt;= arr1.length, arr2.length, arr3.length &lt;= 1000</code>
	<code>1 &lt;= arr1[i], arr2[i], arr3[i] &lt;= 2000</code>
</ul>
