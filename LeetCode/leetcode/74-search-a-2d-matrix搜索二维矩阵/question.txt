search-a-2d-matrix
编写一个高效的算法来判断<em>m</em> x <em>n</em>矩阵中，是否存在一个目标值。该矩阵具有如下特性：

<ul>
	每行中的整数从左到右按升序排列。
	每行的第一个整数大于前一行的最后一个整数。
</ul>

<strong>示例1:</strong>

<pre><strong>输入:</strong>
matrix = [
  [1,   3,  5,  7],
  [10, 11, 16, 20],
  [23, 30, 34, 50]
]
target = 3
<strong>输出:</strong> true
</pre>

<strong>示例2:</strong>

<pre><strong>输入:</strong>
matrix = [
  [1,   3,  5,  7],
  [10, 11, 16, 20],
  [23, 30, 34, 50]
]
target = 13
<strong>输出:</strong> false</pre>

搜索二维矩阵
Write an efficient algorithm that searches for a value in an <em>m</em> x <em>n</em> matrix. This matrix has the following properties:

<ul>
	Integers in each row are sorted from left to right.
	The first integer of each row is greater than the last integer of the previous row.
</ul>

<strong>Example 1:</strong>

<pre>
<strong>Input:</strong>
matrix = [
  [1,   3,  5,  7],
  [10, 11, 16, 20],
  [23, 30, 34, 50]
]
target = 3
<strong>Output:</strong> true
</pre>

<strong>Example 2:</strong>

<pre>
<strong>Input:</strong>
matrix = [
  [1,   3,  5,  7],
  [10, 11, 16, 20],
  [23, 30, 34, 50]
]
target = 13
<strong>Output:</strong> false</pre>
