design-in-memory-file-system
设计一个内存文件系统，模拟以下功能：

<code>ls</code>： 以字符串的格式输入一个路径。如果它是一个文件的路径，那么函数返回一个列表，仅包含这个文件的名字。如果它是一个文件夹的的路径，那么返回该 <strong>文件夹内</strong>的所有文件和子文件夹的名字。你的返回结果（包括文件和子文件夹）应该按字典序排列。

<code>mkdir</code>：输入一个当前不存在的<strong>文件夹路径</strong>，你需要根据路径名创建一个新的文件夹。如果有上层文件夹路径不存在，那么你也应该将它们全部创建。这个函数的返回类型为 void 。

<code>addContentToFile</code>： 输入字符串形式的<strong>文件路径</strong>和 <strong>文件内容</strong>。如果文件不存在，你需要创建包含给定文件内容的文件。如果文件已经存在，那么你需要将给定的文件内容 <strong>追加</strong>在原本内容的后面。这个函数的返回类型为 void 。

<code>readContentFromFile</code>： 输入 <strong>文件路径</strong>，以字符串形式返回该文件的<strong>内容</strong>。



<strong>示例:</strong>

<pre><strong>输入:</strong> 
[&quot;FileSystem&quot;,&quot;ls&quot;,&quot;mkdir&quot;,&quot;addContentToFile&quot;,&quot;ls&quot;,&quot;readContentFromFile&quot;]
[[],[&quot;/&quot;],[&quot;/a/b/c&quot;],[&quot;/a/b/c/d&quot;,&quot;hello&quot;],[&quot;/&quot;],[&quot;/a/b/c/d&quot;]]

<strong>输出:</strong>
[null,[],null,null,[&quot;a&quot;],&quot;hello&quot;]

<strong>解释:</strong>
<img alt="filesystem" src="https://assets.leetcode.com/uploads/2018/10/12/filesystem.png" style="width: 640px;">
</pre>



<strong>注意:</strong>

<ol>
	你可以假定所有文件和文件夹的路径都是绝对路径，除非是根目录<code>/</code>自身，其他路径都是以<code>/</code>开头且 <strong>不</strong> 以<code>/</code>结束。
	你可以假定所有操作的参数都是有效的，即用户不会获取不存在文件的内容，或者获取不存在文件夹和文件的列表。
	你可以假定所有文件夹名字和文件名字都只包含小写字母，且同一文件夹下不会有相同名字的文件夹或文件。
</ol>

设计内存文件系统
Design an in-memory file system to simulate the following functions:

<code>ls</code>: Given a path in string format. If it is a file path, return a list that only contains this file&#39;s name. If it is a directory path, return the list of file and directory names <b>in this directory</b>. Your output (file and directory names together) should in <b>lexicographic order</b>.

<code>mkdir</code>: Given a <b>directory path</b> that does not exist, you should make a new directory according to the path. If the middle directories in the path don&#39;t exist either, you should create them as well. This function has void return type.

<code>addContentToFile</code>: Given a <b>file path</b> and <b>file content</b> in string format. If the file doesn&#39;t exist, you need to create that file containing given content. If the file already exists, you need to <b>append</b> given content to original content. This function has void return type.

<code>readContentFromFile</code>: Given a <b>file path</b>, return its <b>content</b> in string format.



<b>Example:</b>

<pre>
<b>Input:</b> 
[&quot;FileSystem&quot;,&quot;ls&quot;,&quot;mkdir&quot;,&quot;addContentToFile&quot;,&quot;ls&quot;,&quot;readContentFromFile&quot;]
[[],[&quot;/&quot;],[&quot;/a/b/c&quot;],[&quot;/a/b/c/d&quot;,&quot;hello&quot;],[&quot;/&quot;],[&quot;/a/b/c/d&quot;]]

<b>Output:</b>
[null,[],null,null,[&quot;a&quot;],&quot;hello&quot;]

<b>Explanation:</b>
<img alt="filesystem" src="https://assets.leetcode.com/uploads/2018/10/12/filesystem.png" style="width: 640px;" />
</pre>



<strong>Note:</strong>

<ol>
	You can assume all file or directory paths are absolute paths which begin with <code>/</code> and do not end with <code>/</code> except that the path is just <code>&quot;/&quot;</code>.
	You can assume that all operations will be passed valid parameters and users will not attempt to retrieve file content or list a directory or file that does not exist.
	You can assume that all directory names and file names only contain lower-case letters, and same names won&#39;t exist in the same directory.
</ol>
