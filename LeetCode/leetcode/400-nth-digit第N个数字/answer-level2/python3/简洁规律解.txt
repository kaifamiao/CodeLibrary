
## 数字规律解法：
可以发现 
| 区间    | 数字个数        | 字符数个数     | 字符数累积总和 |
| ------- | --------------- | -------------- | -------------- |
| 1-9     | 9               | 9*1=9          | 9              |
| 10-99   | 90              | 90*2=180       | 180+9=189      |
| 100-999 | 900             | 900*3=2700     | 2700+189=2889  |
| ...     | 9 * 10^(位数-1) | 数字个数* 位数 | 累积和         |

那么给定位数，可以根据以上规律求得第n个字符数对应的整数，以及对应整数拥有的位数。

例如对于n=999，999小于3位的字符数累积总和（2889），大于2位的字符数累积总和（189），说明其对应数字的位数为3。
随后999-189 - 1 = 809,说明其位于3位数中的第809个字符
div, mod = divmod(809, 3) # div=269, mod = 2
说明其对应的整数为100 + 269 = 369, mod=2 即取369的第2个数，故最后答案为9


```python
class Solution:
    def findNthDigit(self, n: int) -> int:
        base = 9
        cur_sum = base
        pre_sum = 0
        # i 为数字位数
        for i in range(1, 100000):
            if n <= cur_sum:
                div, mod = divmod(n - pre_sum - 1, i)
                num = 10 ** (i-1) + div
                return int(str(num)[mod])
            
            
            base = (10 ** (i)) * (i + 1) * 9
            pre_sum = cur_sum
            cur_sum += base
```