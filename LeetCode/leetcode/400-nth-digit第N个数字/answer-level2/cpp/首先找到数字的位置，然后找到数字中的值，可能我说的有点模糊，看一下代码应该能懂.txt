执行用时 :0 ms, 在所有 C++ 提交中击败了100.00% 的用户
内存消耗 :8.1 MB, 在所有 C++ 提交中击败了90.68%的用户


1. 1-9有9个数，10-99有20X9个数字，100-999有300X9个数字，1000-9999有4000X9个数字；以此类推；
2. 设置一个标志位i，每一个区间都有固定的标志位，例如1-9是1，10--99是2，以此类推；然后用n减去每个区间的值，知道确定n在哪个区间；
3. 在得到区间中确定的数字，将其变为string型，然后就可以得到确定的数字。
```
class Solution {
public:
    int findNthDigit(int n) {
        int i =1;      
        while(n>i*(pow(10,i-1))*9)
        {
            n-=i*(pow(10,i-1))*9;  //小于区间的值要减去，知道得到确定的区间
            i++;                   //标志位++；
        }
        int am_num=(n-1)/i+pow(10,i-1);  //确定区间中数字；
        string a=to_string(am_num);      //将数字变为string，好取得确定的数字；
        if(n%i==0)return (a[i-1]-'0');   
         return (a[n%i-1]-'0');     
    }
};
```
