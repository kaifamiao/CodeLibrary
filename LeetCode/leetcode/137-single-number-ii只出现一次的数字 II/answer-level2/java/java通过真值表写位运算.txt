### 解题思路
通过浏览评论和题解，了解到这样一种思想：就是设计一种运算达到00->01->10->00的效果，无进位3进制加法，或者模三运算。
把这种运算通过真值表表示就是这样的
a|b|num|new-a|new-b
:-:|:-:|:-:|:-:|:-:
0|0|1|0|1
0|1|1|1|0
1|0|1|0|0
0|0|0|0|0
0|1|0|0|1
1|0|0|1|0
其中，a表示的就是这种新运算中前一位，b表示这种新运算的后一位，因为要找的数字目标，出现次数是一次，所以通过这个新运算的个位数字就可以表示了，
所以返回目标就是b。

1. 根据真值表写逻辑表达式时需要注意，如果先写new-b的表达式，就是能使用变量a,b,num，不能考虑new-a;
2. 后写new-a表达式时，只能考虑变量a,new-b,num，不能考虑b;

于是b=~a&~b&num|~a&b&~num, a=~a&num&~b|a&~num&~b，整理可得b=~a&(b^num),a=~b&(a^num)

### 代码

```java
class Solution {
  public int singleNumber(int[] nums) {
    int a = 0, b = 0;
    for (int num : nums) {
      b = ~a&(b^num);
      a = ~b&(a^num);
    }
    return b;
  }
}
```