word-ladder
给定两个单词（<em>beginWord</em>和 <em>endWord</em>）和一个字典，找到从<em>beginWord</em> 到<em>endWord</em> 的最短转换序列的长度。转换需遵循如下规则：

<ol>
	每次转换只能改变一个字母。
	转换过程中的中间单词必须是字典中的单词。
</ol>

<strong>说明:</strong>

<ul>
	如果不存在这样的转换序列，返回 0。
	所有单词具有相同的长度。
	所有单词只由小写字母组成。
	字典中不存在重复的单词。
	你可以假设 <em>beginWord</em> 和 <em>endWord </em>是非空的，且二者不相同。
</ul>

<strong>示例1:</strong>

<pre><strong>输入:</strong>
beginWord = &quot;hit&quot;,
endWord = &quot;cog&quot;,
wordList = [&quot;hot&quot;,&quot;dot&quot;,&quot;dog&quot;,&quot;lot&quot;,&quot;log&quot;,&quot;cog&quot;]

<strong>输出: </strong>5

<strong>解释: </strong>一个最短转换序列是 &quot;hit&quot; -&gt; &quot;hot&quot; -&gt; &quot;dot&quot; -&gt; &quot;dog&quot; -&gt; &quot;cog&quot;,
     返回它的长度 5。
</pre>

<strong>示例 2:</strong>

<pre><strong>输入:</strong>
beginWord = &quot;hit&quot;
endWord = &quot;cog&quot;
wordList = [&quot;hot&quot;,&quot;dot&quot;,&quot;dog&quot;,&quot;lot&quot;,&quot;log&quot;]

<strong>输出:</strong>0

<strong>解释:</strong><em>endWord</em> &quot;cog&quot; 不在字典中，所以无法进行转换。</pre>

单词接龙
Given two words (<em>beginWord</em> and <em>endWord</em>), and a dictionary&#39;s word list, find the length of shortest transformation sequence from <em>beginWord</em> to <em>endWord</em>, such that:

<ol>
	Only one letter can be changed at a time.
	Each transformed word must exist in the word list. Note that <em>beginWord</em> is <em>not</em> a transformed word.
</ol>

<strong>Note:</strong>

<ul>
	Return 0 if there is no such transformation sequence.
	All words have the same length.
	All words contain only lowercase alphabetic characters.
	You may assume no duplicates in the word list.
	You may assume <em>beginWord</em> and <em>endWord</em> are non-empty and are not the same.
</ul>

<strong>Example 1:</strong>

<pre>
<strong>Input:</strong>
beginWord = &quot;hit&quot;,
endWord = &quot;cog&quot;,
wordList = [&quot;hot&quot;,&quot;dot&quot;,&quot;dog&quot;,&quot;lot&quot;,&quot;log&quot;,&quot;cog&quot;]

<strong>Output: </strong>5

<strong>Explanation:</strong> As one shortest transformation is &quot;hit&quot; -&gt; &quot;hot&quot; -&gt; &quot;dot&quot; -&gt; &quot;dog&quot; -&gt; &quot;cog&quot;,
return its length 5.
</pre>

<strong>Example 2:</strong>

<pre>
<strong>Input:</strong>
beginWord = &quot;hit&quot;
endWord = &quot;cog&quot;
wordList = [&quot;hot&quot;,&quot;dot&quot;,&quot;dog&quot;,&quot;lot&quot;,&quot;log&quot;]

<strong>Output:</strong>0

<strong>Explanation:</strong>The endWord &quot;cog&quot; is not in wordList, therefore no possible<strong></strong>transformation.
</pre>

<ul>
</ul>
