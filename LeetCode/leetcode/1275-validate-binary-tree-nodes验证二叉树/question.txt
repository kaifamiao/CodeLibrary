validate-binary-tree-nodes
二叉树上有 <code>n</code>个节点，按从<code>0</code>到 <code>n - 1</code>编号，其中节点<code>i</code>的两个子节点分别是<code>leftChild[i]</code>和<code>rightChild[i]</code>。

只有 <strong>所有</strong> 节点能够形成且 <strong>只</strong> 形成 <strong>一颗</strong>有效的二叉树时，返回<code>true</code>；否则返回 <code>false</code>。

如果节点<code>i</code>没有左子节点，那么<code>leftChild[i]</code>就等于<code>-1</code>。右子节点也符合该规则。

注意：节点没有值，本问题中仅仅使用节点编号。



<strong>示例 1：</strong>

<strong><img alt="" src="https://assets.leetcode-cn.com/aliyun-lc-upload/uploads/2020/02/23/1503_ex1.png" style="height: 287px; width: 195px;"></strong>

<pre><strong>输入：</strong>n = 4, leftChild = [1,-1,3,-1], rightChild = [2,-1,-1,-1]
<strong>输出：</strong>true
</pre>

<strong>示例 2：</strong>

<strong><img alt="" src="https://assets.leetcode-cn.com/aliyun-lc-upload/uploads/2020/02/23/1503_ex2.png" style="height: 272px; width: 183px;"></strong>

<pre><strong>输入：</strong>n = 4, leftChild = [1,-1,3,-1], rightChild = [2,3,-1,-1]
<strong>输出：</strong>false
</pre>

<strong>示例 3：</strong>

<strong><img alt="" src="https://assets.leetcode-cn.com/aliyun-lc-upload/uploads/2020/02/23/1503_ex3.png" style="height: 174px; width: 82px;"></strong>

<pre><strong>输入：</strong>n = 2, leftChild = [1,0], rightChild = [-1,-1]
<strong>输出：</strong>false
</pre>

<strong>示例 4：</strong>

<strong><img alt="" src="https://assets.leetcode-cn.com/aliyun-lc-upload/uploads/2020/02/23/1503_ex4.png" style="height: 191px; width: 470px;"></strong>

<pre><strong>输入：</strong>n = 6, leftChild = [1,-1,-1,4,-1,-1], rightChild = [2,-1,-1,5,-1,-1]
<strong>输出：</strong>false
</pre>



<strong>提示：</strong>

<ul>
	<code>1 &lt;= n &lt;= 10^4</code>
	<code>leftChild.length == rightChild.length == n</code>
	<code>-1 &lt;= leftChild[i], rightChild[i] &lt;= n - 1</code>
</ul>

验证二叉树
You have<code>n</code> binary tree nodesnumbered from <code>0</code>to <code>n - 1</code> where node<code>i</code>has two children<code>leftChild[i]</code>and<code>rightChild[i]</code>, return<code>true</code>if and only if <strong>all</strong> the given nodes form <strong>exactly one</strong> valid binary tree.

If node<code>i</code>has no left child then<code>leftChild[i]</code>will equal<code>-1</code>, similarly for the right child.

Note that the nodes have no values and that we only use the node numbers in this problem.


<strong>Example 1:</strong>

<strong><img alt="" src="https://assets.leetcode.com/uploads/2019/08/23/1503_ex1.png" style="width: 195px; height: 287px;" /></strong>

<pre>
<strong>Input:</strong> n = 4, leftChild = [1,-1,3,-1], rightChild = [2,-1,-1,-1]
<strong>Output:</strong> true
</pre>

<strong>Example 2:</strong>

<strong><img alt="" src="https://assets.leetcode.com/uploads/2019/08/23/1503_ex2.png" style="width: 183px; height: 272px;" /></strong>

<pre>
<strong>Input:</strong> n = 4, leftChild = [1,-1,3,-1], rightChild = [2,3,-1,-1]
<strong>Output:</strong> false
</pre>

<strong>Example 3:</strong>

<strong><img alt="" src="https://assets.leetcode.com/uploads/2019/08/23/1503_ex3.png" style="width: 82px; height: 174px;" /></strong>

<pre>
<strong>Input:</strong> n = 2, leftChild = [1,0], rightChild = [-1,-1]
<strong>Output:</strong> false
</pre>

<strong>Example 4:</strong>

<strong><img alt="" src="https://assets.leetcode.com/uploads/2019/08/23/1503_ex4.png" style="width: 470px; height: 191px;" /></strong>

<pre>
<strong>Input:</strong> n = 6, leftChild = [1,-1,-1,4,-1,-1], rightChild = [2,-1,-1,5,-1,-1]
<strong>Output:</strong> false
</pre>


<strong>Constraints:</strong>

<ul>
	<code>1 &lt;= n &lt;= 10^4</code>
	<code>leftChild.length == rightChild.length == n</code>
	<code>-1 &lt;= leftChild[i], rightChild[i] &lt;= n - 1</code>
</ul>
