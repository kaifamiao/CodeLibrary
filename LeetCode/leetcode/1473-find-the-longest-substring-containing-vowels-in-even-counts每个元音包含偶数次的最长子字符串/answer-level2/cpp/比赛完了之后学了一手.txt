### 解题思路
先来解释一下状态是什么？
题目中出现了五个字母 因此存在五种不同的状态 那如何来表示这个状态呢？ 我假装很自然的想到用二进制中的1和0来表示吧
每个状态表示的是一位 1——1 2——10 4——100 8——1000 16——10000 每当碰到这些字母的时候当前的位数就变一下 如果当前的位数是1就代表这个字母出现了奇数次 反之为偶数次
第一次写题解 写的不好大家多包涵
### 代码

```cpp
class Solution {
public:
    int a[36];//用来记录最先出现这个状态的地方
    int findTheLongestSubstring(string s) {
        int x = 0;//表示当前的状态
        int ans = 0;
        
        memset(a, -1, sizeof(a));
        a[0] = 0;//最开始没有字母 状态为00000
        for (int i = 0; i < s.size(); i++)
        {
            if (s[i] == 'a')x^=1;//和他相遇会成为00001
            else if (s[i] == 'e')x^=2;//00010
            else if (s[i] == 'i')x^=4;//00100
            else if (s[i] == 'o')x^=8;//01000
            else if (s[i] == 'u')x^=16;//10000
            
            if (a[x] != -1)ans = max(ans, i+1-a[x]);//如果这个状态曾经出现过 就用当前位置减去第一次出现该状态的位置 得到较长的长度
            else a[x] = i+1;//因为要求最长的长度 所有保存最开始出现的位子就好了
        }
        return ans;
    }
};
```