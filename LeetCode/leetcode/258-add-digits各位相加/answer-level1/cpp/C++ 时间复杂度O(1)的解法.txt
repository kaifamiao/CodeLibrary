题目就是一道求'数根'的题目

'数根'的定义是：将一正整数的各个位数相加(即横向相加)后，若加完后的值大于等于10的话，则继续将各位数进行横向相加直到其值小于十为止所得到的数，即为数根。换句话说，数根是将一数字重复做其每位数字之和，直到其值小于十为止，则所得的值为该数的数根。 ————来自百度百科

对于这道题，可以利用数根的一个性质：x + 9 的数根与 x 的数根相同，即一个数加9后它的数根不变，如下所示。
![微信图片_20200402143002.png](https://pic.leetcode-cn.com/a506eb51585f5f8280025d6bcc9755a617d37abd6ae480da1bde9596c1b27bdb-%E5%BE%AE%E4%BF%A1%E5%9B%BE%E7%89%87_20200402143002.png)

可以看出，对于每一个数 num，都可以分解为 num = x + 9 + 9 + ... + 9 = x + 9 * n，此时 x 必须小于十。
比如：
1 = 1 + 9 * 0，此时 num = 1，x = 1，n = 0；
12 = 3 + 9 * 1， 此时 num = 12，x = 3，n = 1；
159 = 6 + 9 * 17，此时 num = 159，x = 6，n = 17；
不难看出，x 是 num 对 9 取模之后的余数。

所以，题目要求数根，那我们就可以直接写出代码如下：
`class solution
{
public:
    int addDigit(int num)
    {
        return num % 9;
    }
}`

但是提交之后会出现问题，那就是当 num 是 9 的倍数的时候，例如 9、18、27...，此时数根应该是 9，而不是 0。所以要对原代码进行修改:
`class solution
{
public:
int addDigit(int num)
{
    return (num - 1) % 9 + 1;
}
}`

此时，代码已经可以通过了。但是要注意的是，当 num = 0 的时候，该代码只能在C/C++/Java的编程语言中成功，而在Python中会错误。原因是：当 num = 0 时，num - 1 = -1。首先对于整数取整，在C/C++/Java中是向零取整（当余数不为零时，取整结果会取最接近零的那个数），比如 12 / 5 ≈ 2.4 = 2，-12 / 5 ≈ -2.4 = -2。而在Python中是向下取整（当余数不为零时，取整结果会取比商小的，而且离商最近的那个整数），如 12 / 5 ≈ 2.4 = 2，-12 / 5 ≈ -2.4 = -3。

所以这里就有个问题，该代码在Python中运行时，当 num = 0，那么会有 (0 - 1) % 9 + 1，按照向下取整，-1 / 9 ≈ -0.1111111 = -1，此时余数是 0，程序会return 0 + 1；但是 0 的数根应该是 0，所以这里就会出现问题了。

如果要考虑所有语言都正确运行，应该在代码里面对 0 值做特殊处理，即：
`class solution
{
public:
int addDigit(int num)
{
    if (num == 0)
        return 0;
    return (num - 1) % 9 + 1;
}
}`





      



