valid-number
验证给定的字符串是否可以解释为十进制数字。

例如:

<code>&quot;0&quot;</code>=&gt;<code>true</code><br>
<code>&quot; 0.1 &quot;</code>=&gt;<code>true</code><br>
<code>&quot;abc&quot;</code>=&gt;<code>false</code><br>
<code>&quot;1 a&quot;</code>=&gt;<code>false</code><br>
<code>&quot;2e10&quot;</code>=&gt;<code>true</code><br>
<code>&quot; -90e3 &quot;</code>=&gt;<code>true</code><br>
<code>&quot; 1e&quot;</code>=&gt;<code>false</code><br>
<code>&quot;e3&quot;</code>=&gt;<code>false</code><br>
<code>&quot; 6e-1&quot;</code>=&gt;<code>true</code><br>
<code>&quot; 99e2.5&quot;</code>=&gt;<code>false</code><br>
<code>&quot;53.5e93&quot;</code>=&gt;<code>true</code><br>
<code>&quot; --6 &quot;</code>=&gt;<code>false</code><br>
<code>&quot;-+3&quot;</code>=&gt;<code>false</code><br>
<code>&quot;95a54e53&quot;</code>=&gt;<code>false</code>

<strong>说明:</strong>我们有意将问题陈述地比较模糊。在实现代码之前，你应当事先思考所有可能的情况。这里给出一份可能存在于有效十进制数字中的字符列表：

<ul>
	数字 0-9
	指数 - &quot;e&quot;
	正/负号 - &quot;+&quot;/&quot;-&quot;
	小数点 - &quot;.&quot;
</ul>

当然，在输入中，这些字符的上下文也很重要。

<strong>更新于 2015-02-10:</strong><br>
<code>C++</code>函数的形式已经更新了。如果你仍然看见你的函数接收<code>const char *</code> 类型的参数，请点击重载按钮重置你的代码。

有效数字
Validate if a given string can be interpreted asa decimal number.

Some examples:<br />
<code>&quot;0&quot;</code> =&gt; <code>true</code><br />
<code>&quot; 0.1 &quot;</code> =&gt; <code>true</code><br />
<code>&quot;abc&quot;</code> =&gt; <code>false</code><br />
<code>&quot;1 a&quot;</code> =&gt; <code>false</code><br />
<code>&quot;2e10&quot;</code> =&gt; <code>true</code><br />
<code>&quot; -90e3 &quot;</code> =&gt; <code>true</code><br />
<code>&quot; 1e&quot;</code> =&gt; <code>false</code><br />
<code>&quot;e3&quot;</code> =&gt; <code>false</code><br />
<code>&quot; 6e-1&quot;</code> =&gt; <code>true</code><br />
<code>&quot; 99e2.5&quot;</code> =&gt; <code>false</code><br />
<code>&quot;53.5e93&quot;</code> =&gt; <code>true</code><br />
<code>&quot; --6 &quot;</code> =&gt; <code>false</code><br />
<code>&quot;-+3&quot;</code> =&gt; <code>false</code><br />
<code>&quot;95a54e53&quot;</code> =&gt; <code>false</code>

<strong>Note:</strong> It is intended for the problem statement to be ambiguous. You should gather all requirements up front before implementing one. However, here is a list of characters that can be in a valid decimal number:

<ul>
	Numbers 0-9
	Exponent - &quot;e&quot;
	Positive/negative sign - &quot;+&quot;/&quot;-&quot;
	Decimal point - &quot;.&quot;
</ul>

Of course, the context of these characters also matters in the input.

<strong>Update (2015-02-10):</strong><br />
The signature of the <code>C++</code> function had been updated. If you still see your function signature accepts a <code>const char *</code> argument, please click the reload button to reset your code definition.
