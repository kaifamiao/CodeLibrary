双指针思想，但是比较耗时，后续改进
class Solution {
public:
    bool isPalindrome(ListNode* head) 
    {
        if(head==NULL||head->next==NULL)    //特殊处理
        return true;

        ListNode *p=head;
        ListNode *left=head;
        ListNode *right;
        while(p)
        {
            right=p;                 //刷新right的位置
            p=p->next;
        }

        while(left<right)
        {
            if(left->val!=right->val)
            {
                return false;
            } 

            else
            {
                
                {
                    if(left->next!=NULL)
                    {
                       p=left; 
                    }
                    else
                    p=head;
                    
                    while(p->next!=right)    //由于right后退只能通过前一个指针实现，所以通过标记指针P来刷新right
                    {
                        p=p->next;
                    }
                    right=p;
                }

                left=left->next;
            }

        }
        return true;
        
    }
};