jump-game-iv
给你一个整数数组<code>arr</code>，你一开始在数组的第一个元素处（下标为 0）。

每一步，你可以从下标<code>i</code>跳到下标：

<ul>
	<code>i + 1</code>满足：<code>i + 1 &lt; arr.length</code>
	<code>i - 1</code>满足：<code>i - 1 &gt;= 0</code>
	<code>j</code>满足：<code>arr[i] == arr[j]</code>且<code>i != j</code>
</ul>

请你返回到达数组最后一个元素的下标处所需的<strong>最少操作次数</strong>。

注意：任何时候你都不能跳到数组外面。



<strong>示例 1：</strong>

<pre><strong>输入：</strong>arr = [100,-23,-23,404,100,23,23,23,3,404]
<strong>输出：</strong>3
<strong>解释：</strong>那你需要跳跃 3 次，下标依次为 0 --&gt; 4 --&gt; 3 --&gt; 9 。下标 9 为数组的最后一个元素的下标。
</pre>

<strong>示例 2：</strong>

<pre><strong>输入：</strong>arr = [7]
<strong>输出：</strong>0
<strong>解释：</strong>一开始就在最后一个元素处，所以你不需要跳跃。
</pre>

<strong>示例 3：</strong>

<pre><strong>输入：</strong>arr = [7,6,9,6,9,6,9,7]
<strong>输出：</strong>1
<strong>解释：</strong>你可以直接从下标 0 处跳到下标 7 处，也就是数组的最后一个元素处。
</pre>

<strong>示例 4：</strong>

<pre><strong>输入：</strong>arr = [6,1,9]
<strong>输出：</strong>2
</pre>

<strong>示例 5：</strong>

<pre><strong>输入：</strong>arr = [11,22,7,7,7,7,7,7,7,22,13]
<strong>输出：</strong>3
</pre>



<strong>提示：</strong>

<ul>
	<code>1 &lt;= arr.length &lt;= 5 * 10^4</code>
	<code>-10^8 &lt;= arr[i] &lt;= 10^8</code>
</ul>

跳跃游戏 IV
Given an array ofintegers <code>arr</code>, you are initially positioned at the first index of the array.

In one step you can jump from index <code>i</code> to index:

<ul>
	<code>i + 1</code> where:<code>i + 1 &lt; arr.length</code>.
	<code>i - 1</code> where:<code>i - 1 &gt;= 0</code>.
	<code>j</code> where: <code>arr[i] == arr[j]</code> and <code>i != j</code>.
</ul>

Return <em>the minimum number of steps</em> to reach the <strong>last index</strong> of the array.

Notice that you can not jump outside of the array at any time.


<strong>Example 1:</strong>

<pre>
<strong>Input:</strong> arr = [100,-23,-23,404,100,23,23,23,3,404]
<strong>Output:</strong> 3
<strong>Explanation:</strong> You need three jumps from index 0 --&gt; 4 --&gt; 3 --&gt; 9. Note that index 9 is the last index of the array.
</pre>

<strong>Example 2:</strong>

<pre>
<strong>Input:</strong> arr = [7]
<strong>Output:</strong> 0
<strong>Explanation:</strong> Start index is the last index. You don&#39;t need to jump.
</pre>

<strong>Example 3:</strong>

<pre>
<strong>Input:</strong> arr = [7,6,9,6,9,6,9,7]
<strong>Output:</strong> 1
<strong>Explanation:</strong> You can jump directly from index 0 to index 7 which is last index of the array.
</pre>

<strong>Example 4:</strong>

<pre>
<strong>Input:</strong> arr = [6,1,9]
<strong>Output:</strong> 2
</pre>

<strong>Example 5:</strong>

<pre>
<strong>Input:</strong> arr = [11,22,7,7,7,7,7,7,7,22,13]
<strong>Output:</strong> 3
</pre>


<strong>Constraints:</strong>

<ul>
	<code>1 &lt;= arr.length &lt;= 5 * 10^4</code>
	<code>-10^8 &lt;= arr[i] &lt;= 10^8</code>
</ul>