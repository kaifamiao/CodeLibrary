construct-binary-tree-from-preorder-and-postorder-traversal
返回与给定的前序和后序遍历匹配的任何二叉树。

<code>pre</code>和<code>post</code>遍历中的值是不同的正整数。



<strong>示例：</strong>

<pre><strong>输入：</strong>pre = [1,2,4,5,3,6,7], post = [4,5,2,6,7,3,1]
<strong>输出：</strong>[1,2,3,4,5,6,7]
</pre>



<strong>提示：</strong>

<ul>
	<code>1 &lt;= pre.length == post.length &lt;= 30</code>
	<code>pre[]</code>和<code>post[]</code>都是<code>1, 2, ..., pre.length</code>的排列
	每个输入保证至少有一个答案。如果有多个答案，可以返回其中一个。
</ul>

根据前序和后序遍历构造二叉树
Return any binary tree that matches the given preorder and postorder traversals.

Values in the traversals<code>pre</code> and <code>post</code>are distinctpositive integers.



<div>
<strong>Example 1:</strong>

<pre>
<strong>Input: </strong>pre = <span id="example-input-1-1">[1,2,4,5,3,6,7]</span>, post = <span id="example-input-1-2">[4,5,2,6,7,3,1]</span>
<strong>Output: </strong><span id="example-output-1">[1,2,3,4,5,6,7]</span>
</pre>



<strong><span>Note:</span></strong>

<ul>
	<code>1 &lt;= pre.length == post.length &lt;= 30</code>
	<code>pre[]</code> and <code>post[]</code>are both permutations of <code>1, 2, ..., pre.length</code>.
	It is guaranteed an answer exists. If there exists multiple answers, you can return any of them.
</ul>
</div>
