动态规划问题首先就是明确dp的含义。
这道题要求求的n间房间抢劫的最大值，所以dp[k]的含义就是前k间房间的最大值。

对每间房间我们都有两种状态，抢和不抢。
我们dp[k]应该是这两种状态获得钱数的最大值 , dp[k] = max(抢，不抢);

如果不抢的话，那么对上一间房间抢和不抢不关心，所以=dp[k-1];
如果抢的话就对上一间的房间的状态就关系了。
如果上一间房间抢了，那么不能选dp[k-1] 要选dp[k-2]
如果上一间房间没有被抢，dp[k-1] = dp[k-2]
所以不管抢没抢都选dp[k-2]。

如果抢当前房间，我们要得到不抢k-1间房间的最大钱数，即dp[k-2], dp[k-1] = max(抢，dp[k-2]);
所以dp[k] = max(dp[k-2] + nums[k]，dp[k-1]);