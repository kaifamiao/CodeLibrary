### 解题思路
某一位置的房屋的抢劫金额，有两个来源：
1. 该房屋的金额 加上 前第二个房屋的金额 （因为不能打劫邻居的）
2. 该房屋的金额前第一个房屋的金额

比如三个房间。
a b c 
3 1 1
那么a房间抢劫金额，是 3 + 0 或者是 0   取最大值 3
b房间抢劫金额，是 1 + 0 或者是 3   取最大值 3
c房间金额， 是 a房间最大值金额 + c房间最大值金额 = 3 + 1 = 4   或者 b房间最大值金额  = 3 取最大值  4


### 代码

```java
class Solution {
    public int rob(int[] nums) {
        
        int n = nums.length;
        int[] dp = new int[n + 2];  // 数组开大一点，这样就不用对越界进行特判了(不用考虑 i - 2 < 0 的情况了。)
        
        for (int i = 2; i < n + 2; i++)  dp[i] = Math.max(dp[i - 2] + nums[i - 2],dp[i - 1]);

        return dp[n + 1];
    }
}
```

执行用时 :0 ms, 在所有 Java 提交中击败了100.00% 的用户
内存消耗 :34.2 MB, 在所有 Java 提交中击败了88.59%的用户