### 解题思路

可以使用动态规划解决的问题的性质：

1. 最优子结构
定义：如果问题的最优解所包含的子问题的解也是最优解，我们就称为该问题具有最优子结构的性质。

针对题设分析，
考察第 i 个元素时，前 i 个元素求得的和的最大值，就是前 i 个元素的最优解。
满足最优子结构的性质。

2. 无后效性
定义：某阶段的状态一旦确定，则此后过程的演变不再受此前各状态及决策的影响。也就是说，未来与过去无关。

针对题设分析，
考察第 i 个元素时，前 i 个元素求得的和的最大值，不会影响后面元素和的最大值的计算。

但是，咱不能偷连续的两个房屋。也就是说，数组中，相邻的两个元素不能相加。
用 2 个临时变量分别保存，两个相邻元素的和值即可。

3. 重叠子问题
动态规划主要用于不断解决相同子问题。子问题的计算解被存储在表中，使得这些子问题不必重新计算。
因此，当没有重叠子问题时，就不会使用动态规划。

另外，是不是存到表中看问题的复杂性，比如，此题只需要两个临时变量就可以存储子问题的解，所以就不用表了。

### 代码

```golang
func rob(nums []int) int {
    preMax, curMax := 0, 0
    for _, m := range nums {
        curMax, preMax = max(preMax + m, curMax), curMax
    }
    return curMax
}
func max(x, y int) int {
    if x > y {return x}
    return y
}

```