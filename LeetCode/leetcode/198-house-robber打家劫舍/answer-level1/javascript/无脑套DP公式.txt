### 解题思路
典型DP问题，直接套公式即可： `dp[i] = max(dp[i-2]+nums[i], dp[i-1])`

### 代码

```javascript
/**
 * @param {number[]} nums
 * @return {number}
 */
var rob = function(nums) {
    if(nums.length === 0){
        return 0;
    }
    if(nums.length === 1){
        return nums[0];
    }

    let dp=[];
    dp[0] = nums[0];
    dp[1] = Math.max(nums[0], nums[1]);
    // dp[i] = max(dp[i-2]+nums[i], dp[i-1])
    for(let i = 2; i < nums.length; i++){
        dp[i] = Math.max(dp[i - 2] + nums[i], dp[i - 1]);
    }
    return dp[nums.length - 1];
};
```