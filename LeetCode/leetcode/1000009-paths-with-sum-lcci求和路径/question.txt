paths-with-sum-lcci
给定一棵二叉树，其中每个节点都含有一个整数数值(该值或正或负)。设计一个算法，打印节点数值总和等于某个给定值的所有路径的数量。注意，路径不一定非得从二叉树的根节点或叶节点开始或结束，但是其方向必须向下(只能从父节点指向子节点方向)。

<strong>示例:</strong><br>
给定如下二叉树，以及目标和<code>sum = 22</code>，

<pre>              5
             / \
            4   8
           /   / \
          11  13  4
         /  \    / \
        7    2  5   1
</pre>

返回:

<pre>3
<strong>解释：</strong>和为 22的路径有：[5,4,11,2], [5,8,4,5], [4,11,7]</pre>

提示：

<ul>
	<code>节点总数 &lt;= 10000</code>
</ul>

求和路径
You are given a binary tree in which each node contains an integer value (which might be positive or negative). Design an algorithm to count the number of paths that sum to a given value. The path does not need to start or end at the root or a leaf, but it must go downwards (traveling only from parent nodes to child nodes).

<strong>Example:</strong><br />
Given the following tree and <code>sum = 22,</code>

<pre>
              5
             / \
            4   8
           /   / \
          11  13  4
         /  \    / \
        7    2  5   1
</pre>

Output:

<pre>
3
<strong>Explanation: </strong>Paths that have sum 22 are: [5,4,11,2], [5,8,4,5], [4,11,7]</pre>

Note:

<ul>
	<code>node number &lt;= 10000</code>
</ul>
