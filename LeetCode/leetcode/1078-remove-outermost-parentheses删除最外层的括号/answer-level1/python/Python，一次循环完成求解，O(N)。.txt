**不可分有效括号字符串**：若有效括号字符串第一个左括号与最后一个右括号相匹配，则为不可分有效括号字符串，是有效括号字符串的最小单位。

任何一个*有效括号字符串*都是由若干个**不可分有效括号字符串**拼接而成。处理策略是以**不可分有效括号字符串**为单位，将去处最外层括号的结果压入栈`ans`中。总共需要三个整数变量：
- `i`：循环过程中，当前**不可分有效括号字符串**中为匹配的左括号的数目。因此，当`i=1`时，标志当前单位处理的结束（可以将结果压入栈中）。
- `j`：当前**不可分有效括号字符串**第二个字符所在的`index`。
- `k`：循环变量，同时可以表示当前**不可分有效括号字符串**的右端位置。

栈`ans`中每个元素为每个**不可分有效括号字符串**去除最外层括号的结果，拼接后得到最终返回值。


```python
def removeOuterParentheses(self, S):
    """
    :type S: str
    :rtype: str
    """
    ans = []
    n = len(S)
    i, j = 0, 1
    for k in range(n):
        if S[k] == '(':
            i += 1
        else:
            i -= 1
            if i == 1:
                ans.append(S[j:k+1])
                j = k + 1
            elif i == 0:
                j = k + 2
    return "".join(ans)
```