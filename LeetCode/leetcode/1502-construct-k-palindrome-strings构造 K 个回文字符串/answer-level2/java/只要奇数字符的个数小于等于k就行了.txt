解题思路：对字符串字符出现次数进行统计，奇数次字符个数小于等于k都是ok的。

上面的思路基于这样一个结论：假如次数为偶数的字符的字符数总和为2m时(2m > p)，那么这2m个字符一定可以组成p个回文字串：
结论证明如下：

使用如下分配方式
> 假设有字符：'a'、'b'、'c'、'd'都是偶数个，分配时从a开始使用，a用完了再分配b，依此类推
> 1. 先给p个空字符串分别分配一个字符
> 2. 第1步完成后，有两种可能：某一个字符是奇数个；所有字符都是偶数个。对于存在某个字符奇数个的情况，取一个该字符给p个字符串中含有该字符的某个字符串，这时候p个字符串还仍是回文串。这样，剩余字符都是偶数个。将剩余字符全部给某个字符串，这时仍能做到p个字符串都是回文串。


所以，可以按照解题思路编码如下（大概7ms）：

```java
class Solution {
    public boolean canConstruct(String s, int k) {
        if (s.length() < k) {
            return false;
        }
        int m = s.length();
        int[] dict = new int[26];
        for (int i = 0; i < s.length(); i++) {
            dict[s.charAt(i) - 'a']++;
        }
        
        for (int i = 0; i < 26; i++) {
            if ((dict[i] & 1) != 0) {
                k--;
            }
        }
        return k >= 0;
    }
        
}
```