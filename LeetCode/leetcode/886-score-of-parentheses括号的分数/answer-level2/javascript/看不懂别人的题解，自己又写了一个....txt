1. 构建一个栈
2. 如果遇到`(`就往栈里面添加
3. 如果遇到`)`就去寻找最近的左括号抵消，同时计算里面的分数

拿`(()(()))`示例, 栈结构变化如下
```python
[(]                # 遇到 ( 往栈添加
[(, (]             # 继续添加
[(, 1]             # 遇到 ） 合成一个1
[(, 1, (]          # 遇到 ( 往栈添加
[(, 1, (, (]       # 继续添加
[(, 1, (, 1]       # 遇到 ） 合成一个1
[(, 1, 2]          # 遇到 ） ，结构就是（1）， 所以计算的话是 1 * 2
[6]                # 遇到 ） ，结构是（1，2）， 所以计算的话是 （1 + 2） * 2
```


```javascript
var scoreOfParentheses = function(S) {
  var stack = []
  for (var i = 0; i < S.length; i++) {
    if (S[i] === '(') stack.push('(')
    if (S[i] === ')') {
      if (stack[stack.length - 1] === '(') {
        stack.pop()
        stack.push(1)
      } else {
        var a = stack.pop()
        var temp = 0
        while(a !== '(') {
          temp += a
          a = stack.pop()
        }
        stack.push(2 * temp)
      }
    }
  }
  var sum = 0
  stack.forEach(item => sum += item)
  return sum
}
```
