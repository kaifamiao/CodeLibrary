
### 思路

- 标签：`假节点` + `双指针`
- 关键在于确定倒数第 N 个节点是哪一个节点！常规思路就是先遍历一遍链表，得到链表的长度 L，再用长度 L 减 N。总要减 N，所以用一把长度为 N 的尺子，往右移动，右边到达末尾，左边就是。
- 前后指针相隔 K 个节点，同时往后遍历，当前指针到末节点时，后指针就是倒数第 K 个节点
- 必须用假节点，否则当链表只有一个元素时，或者删除倒数第一个元素，需要特殊处理。
- 时间复杂度：O(1)，N 为常数
- 空间复杂度：O(1)，不需要多余空间

### 代码

```Java []
// Java
class Solution {
    public ListNode removeNthFromEnd(ListNode head, int n) {
        ListNode dummyHead = new ListNode(0);
        dummyHead.next = head;
        ListNode front = dummyHead, behind = dummyHead;
        for (int i = 0; i < n; i++) {
            behind = behind.next;
        }
        while (behind.next != null) {
            front = front.next;
            behind = behind.next;
        }
        front.next = front.next.next;
        return dummyHead.next;
    }
}
```


