number-of-operations-to-make-network-connected
用以太网线缆将<code>n</code>台计算机连接成一个网络，计算机的编号从<code>0</code>到<code>n-1</code>。线缆用<code>connections</code>表示，其中<code>connections[i] = [a, b]</code>连接了计算机<code>a</code>和<code>b</code>。

网络中的任何一台计算机都可以通过网络直接或者间接访问同一个网络中其他任意一台计算机。

给你这个计算机网络的初始布线<code>connections</code>，你可以拔开任意两台直连计算机之间的线缆，并用它连接一对未直连的计算机。请你计算并返回使所有计算机都连通所需的最少操作次数。如果不可能，则返回-1 。



<strong>示例 1：</strong>

<strong><img alt="" src="https://assets.leetcode-cn.com/aliyun-lc-upload/uploads/2020/01/11/sample_1_1677.png" style="height: 167px; width: 570px;"></strong>

<pre><strong>输入：</strong>n = 4, connections = [[0,1],[0,2],[1,2]]
<strong>输出：</strong>1
<strong>解释：</strong>拔下计算机 1 和 2 之间的线缆，并将它插到计算机 1 和 3 上。
</pre>

<strong>示例 2：</strong>

<strong><img alt="" src="https://assets.leetcode-cn.com/aliyun-lc-upload/uploads/2020/01/11/sample_2_1677.png" style="height: 175px; width: 660px;"></strong>

<pre><strong>输入：</strong>n = 6, connections = [[0,1],[0,2],[0,3],[1,2],[1,3]]
<strong>输出：</strong>2
</pre>

<strong>示例 3：</strong>

<pre><strong>输入：</strong>n = 6, connections = [[0,1],[0,2],[0,3],[1,2]]
<strong>输出：</strong>-1
<strong>解释：</strong>线缆数量不足。
</pre>

<strong>示例 4：</strong>

<pre><strong>输入：</strong>n = 5, connections = [[0,1],[0,2],[3,4],[2,3]]
<strong>输出：</strong>0
</pre>



<strong>提示：</strong>

<ul>
	<code>1 &lt;= n &lt;= 10^5</code>
	<code>1 &lt;= connections.length &lt;= min(n*(n-1)/2, 10^5)</code>
	<code>connections[i].length == 2</code>
	<code>0 &lt;= connections[i][0], connections[i][1]&lt; n</code>
	<code>connections[i][0] != connections[i][1]</code>
	没有重复的连接。
	两台计算机不会通过多条线缆连接。
</ul>

连通网络的操作次数
There are<code>n</code>computers numbered from<code>0</code>to<code>n-1</code>connected byethernet cables<code>connections</code>forming a network where<code>connections[i] = [a, b]</code>represents a connection between computers<code>a</code>and<code>b</code>. Any computercan reach any other computer directly or indirectly through the network.

Given an initial computer network <code>connections</code>. You can extract certain cables between two directly connected computers, and place them between any pair of disconnected computers to make them directly connected. Return the <em>minimum number of times</em> you need to do this in order to make all the computers connected. If it&#39;s not possible, return -1.


<strong>Example 1:</strong>

<strong><img alt="" src="https://assets.leetcode.com/uploads/2020/01/02/sample_1_1677.png" style="width: 570px; height: 167px;" /></strong>

<pre>
<strong>Input:</strong> n = 4, connections = [[0,1],[0,2],[1,2]]
<strong>Output:</strong> 1
<strong>Explanation:</strong> Remove cable between computer 1 and 2 and place between computers 1 and 3.
</pre>

<strong>Example 2:</strong>

<strong><img alt="" src="https://assets.leetcode.com/uploads/2020/01/02/sample_2_1677.png" style="width: 660px; height: 167px;" /></strong>

<pre>
<strong>Input:</strong> n = 6, connections = [[0,1],[0,2],[0,3],[1,2],[1,3]]
<strong>Output:</strong> 2
</pre>

<strong>Example 3:</strong>

<pre>
<strong>Input:</strong> n = 6, connections = [[0,1],[0,2],[0,3],[1,2]]
<strong>Output:</strong> -1
<strong>Explanation:</strong> There are not enough cables.
</pre>

<strong>Example 4:</strong>

<pre>
<strong>Input:</strong> n = 5, connections = [[0,1],[0,2],[3,4],[2,3]]
<strong>Output:</strong> 0
</pre>


<strong>Constraints:</strong>

<ul>
	<code>1 &lt;= n &lt;= 10^5</code>
	<code>1 &lt;= connections.length &lt;= min(n*(n-1)/2, 10^5)</code>
	<code>connections[i].length == 2</code>
	<code>0 &lt;= connections[i][0], connections[i][1]&lt; n</code>
	<code>connections[i][0] != connections[i][1]</code>
	There are no repeated connections.
	No two computers are connected by more than one cable.
</ul>