valid-permutations-for-di-sequence
我们给出 <code>S</code>，一个源于<code>{&#39;D&#39;, &#39;I&#39;}</code>的长度为 <code>n</code>的字符串 。（这些字母代表 &ldquo;减少&rdquo; 和 &ldquo;增加&rdquo;。）<br>
<em>有效排列</em>是对整数 <code>{0, 1, ..., n}</code>的一个排列<code>P[0], P[1], ..., P[n]</code>，使得对所有的<code>i</code>：

<ul>
	如果 <code>S[i] == &#39;D&#39;</code>，那么<code>P[i] &gt; P[i+1]</code>，以及；
	如果 <code>S[i] == &#39;I&#39;</code>，那么 <code>P[i] &lt; P[i+1]</code>。
</ul>

有多少个有效排列？因为答案可能很大，所以请<strong>返回你的答案模</strong><strong> <code>10^9 + 7</code></strong>.



<strong>示例：</strong>

<pre><strong>输入：</strong>&quot;DID&quot;
<strong>输出：</strong>5
<strong>解释：</strong>
(0, 1, 2, 3) 的五个有效排列是：
(1, 0, 3, 2)
(2, 0, 3, 1)
(2, 1, 3, 0)
(3, 0, 2, 1)
(3, 1, 2, 0)
</pre>



<strong>提示：</strong>

<ol>
	<code>1 &lt;= S.length &lt;= 200</code>
	<code>S</code> 仅由集合 <code>{&#39;D&#39;, &#39;I&#39;}</code>中的字符组成。
</ol>



DI 序列的有效排列
We are given <code>S</code>, a length <code>n</code> string of characters from the set <code>{&#39;D&#39;, &#39;I&#39;}</code>. (These letters stand for &quot;decreasing&quot; and &quot;increasing&quot;.)

A<em>valid permutation</em>is a permutation <code>P[0], P[1], ..., P[n]</code> of integers<code>{0, 1, ..., n}</code>, such that for all <code>i</code>:

<ul>
	If <code>S[i] == &#39;D&#39;</code>, then <code>P[i] &gt; P[i+1]</code>, and;
	If <code>S[i] == &#39;I&#39;</code>, then <code>P[i] &lt; P[i+1]</code>.
</ul>

How many valid permutations are there? Since the answer may be large, <strong>return your answer modulo <code>10^9 + 7</code></strong>.



<strong>Example 1:</strong>

<pre>
<strong>Input: </strong><span id="example-input-1-1">&quot;DID&quot;</span>
<strong>Output: </strong><span id="example-output-1">5</span>
<strong>Explanation: </strong>
The 5 valid permutations of (0, 1, 2, 3) are:
(1, 0, 3, 2)
(2, 0, 3, 1)
(2, 1, 3, 0)
(3, 0, 2, 1)
(3, 1, 2, 0)
</pre>



<strong>Note:</strong>

<ol>
	<code>1 &lt;= S.length &lt;= 200</code>
	<code>S</code> consists only of characters from the set <code>{&#39;D&#39;, &#39;I&#39;}</code>.
</ol>

<div>

</div>
