validate-stack-sequences
给定<code>pushed</code>和<code>popped</code>两个序列，每个序列中的 <strong>值都不重复</strong>，只有当它们可能是在最初空栈上进行的推入 push 和弹出 pop 操作序列的结果时，返回 <code>true</code>；否则，返回 <code>false</code>。



<strong>示例 1：</strong>

<pre><strong>输入：</strong>pushed = [1,2,3,4,5], popped = [4,5,3,2,1]
<strong>输出：</strong>true
<strong>解释：</strong>我们可以按以下顺序执行：
push(1), push(2), push(3), push(4), pop() -&gt; 4,
push(5), pop() -&gt; 5, pop() -&gt; 3, pop() -&gt; 2, pop() -&gt; 1
</pre>

<strong>示例 2：</strong>

<pre><strong>输入：</strong>pushed = [1,2,3,4,5], popped = [4,3,5,1,2]
<strong>输出：</strong>false
<strong>解释：</strong>1 不能在 2 之前弹出。
</pre>



<strong>提示：</strong>

<ol>
	<code>0 &lt;= pushed.length == popped.length &lt;= 1000</code>
	<code>0 &lt;= pushed[i], popped[i] &lt; 1000</code>
	<code>pushed</code>是<code>popped</code>的排列。
</ol>

验证栈序列
Given two sequences <code>pushed</code> and <code>popped</code><strong>with distinct values</strong>,return <code>true</code> if and only if this could have been the result of a sequence of push and pop operations on an initially empty stack.



<div>
<strong>Example 1:</strong>

<pre>
<strong>Input: </strong>pushed = <span id="example-input-1-1">[1,2,3,4,5]</span>, popped = <span id="example-input-1-2">[4,5,3,2,1]</span>
<strong>Output: </strong><span id="example-output-1">true</span>
<strong>Explanation: </strong>We might do the following sequence:
push(1), push(2), push(3), push(4), pop() -&gt; 4,
push(5), pop() -&gt; 5, pop() -&gt; 3, pop() -&gt; 2, pop() -&gt; 1
</pre>

<div>
<strong>Example 2:</strong>

<pre>
<strong>Input: </strong>pushed = <span id="example-input-2-1">[1,2,3,4,5]</span>, popped = <span id="example-input-2-2">[4,3,5,1,2]</span>
<strong>Output: </strong><span id="example-output-2">false</span>
<strong>Explanation: </strong>1 cannot be popped before 2.
</pre>



<strong>Note:</strong>

<ol>
	<code>0 &lt;= pushed.length == popped.length &lt;= 1000</code>
	<code>0 &lt;= pushed[i], popped[i] &lt; 1000</code>
	<code>pushed</code> is a permutation of <code>popped</code>.
	<code>pushed</code> and <code>popped</code> have distinct values.
</ol>
</div>
</div>