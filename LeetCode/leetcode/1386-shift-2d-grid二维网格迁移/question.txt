shift-2d-grid
给你一个 <code>m</code> 行 <code>n</code>列的二维网格<code>grid</code>和一个整数<code>k</code>。你需要将<code>grid</code>迁移<code>k</code>次。

每次「迁移」操作将会引发下述活动：

<ul>
	位于 <code>grid[i][j]</code>的元素将会移动到<code>grid[i][j + 1]</code>。
	位于<code>grid[i][n- 1]</code> 的元素将会移动到<code>grid[i + 1][0]</code>。
	位于 <code>grid[m- 1][n - 1]</code>的元素将会移动到<code>grid[0][0]</code>。
</ul>

请你返回<code>k</code> 次迁移操作后最终得到的 <strong>二维网格</strong>。



<strong>示例 1：</strong>

<img alt="" src="https://assets.leetcode-cn.com/aliyun-lc-upload/uploads/2019/11/16/e1-1.png" style="height: 158px; width: 400px;">

<pre><code><strong>输入：</strong>grid</code> = [[1,2,3],[4,5,6],[7,8,9]], k = 1
<strong>输出：</strong>[[9,1,2],[3,4,5],[6,7,8]]
</pre>

<strong>示例 2：</strong>

<img alt="" src="https://assets.leetcode-cn.com/aliyun-lc-upload/uploads/2019/11/16/e2-1.png" style="height: 166px; width: 400px;">

<pre><code><strong>输入：</strong>grid</code> = [[3,8,1,9],[19,7,2,5],[4,6,11,10],[12,0,21,13]], k = 4
<strong>输出：</strong>[[12,0,21,13],[3,8,1,9],[19,7,2,5],[4,6,11,10]]
</pre>

<strong>示例 3：</strong>

<pre><code><strong>输入：</strong>grid</code> = [[1,2,3],[4,5,6],[7,8,9]], k = 9
<strong>输出：</strong>[[1,2,3],[4,5,6],[7,8,9]]
</pre>



<strong>提示：</strong>

<ul>
	<code>1 &lt;= grid.length &lt;= 50</code>
	<code>1 &lt;= grid[i].length &lt;= 50</code>
	<code>-1000 &lt;= grid[i][j] &lt;= 1000</code>
	<code>0 &lt;= k &lt;= 100</code>
</ul>

二维网格迁移
Given a 2D <code>grid</code> of size <code>m x n</code>and an integer <code>k</code>. You need to shift the <code>grid</code><code>k</code> times.

In one shift operation:

<ul>
	Element at <code>grid[i][j]</code> moves to <code>grid[i][j + 1]</code>.
	Element at <code>grid[i][n - 1]</code> moves to <code>grid[i + 1][0]</code>.
	Element at <code>grid[m- 1][n - 1]</code> moves to <code>grid[0][0]</code>.
</ul>

Return the <em>2D grid</em> after applying shift operation <code>k</code> times.


<strong>Example 1:</strong>
<img alt="" src="https://assets.leetcode.com/uploads/2019/11/05/e1.png" style="width: 400px; height: 178px;" />
<pre>
<strong>Input:</strong> <code>grid</code> = [[1,2,3],[4,5,6],[7,8,9]], k = 1
<strong>Output:</strong> [[9,1,2],[3,4,5],[6,7,8]]
</pre>

<strong>Example 2:</strong>
<img alt="" src="https://assets.leetcode.com/uploads/2019/11/05/e2.png" style="width: 400px; height: 166px;" />
<pre>
<strong>Input:</strong> <code>grid</code> = [[3,8,1,9],[19,7,2,5],[4,6,11,10],[12,0,21,13]], k = 4
<strong>Output:</strong> [[12,0,21,13],[3,8,1,9],[19,7,2,5],[4,6,11,10]]
</pre>

<strong>Example 3:</strong>

<pre>
<strong>Input:</strong> <code>grid</code> = [[1,2,3],[4,5,6],[7,8,9]], k = 9
<strong>Output:</strong> [[1,2,3],[4,5,6],[7,8,9]]
</pre>


<strong>Constraints:</strong>

<ul>
	<code>m ==grid.length</code>
	<code>n ==grid[i].length</code>
	<code>1 &lt;= m &lt;= 50</code>
	<code>1 &lt;= n &lt;= 50</code>
	<code>-1000 &lt;= grid[i][j] &lt;= 1000</code>
	<code>0 &lt;= k &lt;= 100</code>
</ul>
