lucky-numbers-in-a-matrix
给你一个 <code>m * n</code> 的矩阵，矩阵中的数字 <strong>各不相同</strong> 。请你按 <strong>任意</strong> 顺序返回矩阵中的所有幸运数。

幸运数是指矩阵中满足同时下列两个条件的元素：

<ul>
	在同一行的所有元素中最小
	在同一列的所有元素中最大
</ul>



<strong>示例 1：</strong>

<pre><strong>输入：</strong>matrix = [[3,7,8],[9,11,13],[15,16,17]]
<strong>输出：</strong>[15]
<strong>解释：</strong>15 是唯一的幸运数，因为它是其所在行中的最小值，也是所在列中的最大值。
</pre>

<strong>示例 2：</strong>

<pre><strong>输入：</strong>matrix = [[1,10,4,2],[9,3,8,7],[15,16,17,12]]
<strong>输出：</strong>[12]
<strong>解释：</strong>12 是唯一的幸运数，因为它是其所在行中的最小值，也是所在列中的最大值。
</pre>

<strong>示例 3：</strong>

<pre><strong>输入：</strong>matrix = [[7,8],[1,2]]
<strong>输出：</strong>[7]
</pre>



<strong>提示：</strong>

<ul>
	<code>m == mat.length</code>
	<code>n == mat[i].length</code>
	<code>1 &lt;= n, m &lt;= 50</code>
	<code>1 &lt;=matrix[i][j]&lt;= 10^5</code>
	矩阵中的所有元素都是不同的
</ul>

矩阵中的幸运数
Given a <code>m * n</code> matrix of <strong>distinct </strong>numbers, return all lucky numbers in thematrix in <strong>any </strong>order.

A lucky number is an element of the matrix such that it is the minimum element in its row and maximum in its column.


<strong>Example 1:</strong>

<pre>
<strong>Input:</strong> matrix = [[3,7,8],[9,11,13],[15,16,17]]
<strong>Output:</strong> [15]
<strong>Explanation:</strong> 15 is the only lucky number since it is the minimum in its row and the maximum in its column
</pre>

<strong>Example 2:</strong>

<pre>
<strong>Input:</strong> matrix = [[1,10,4,2],[9,3,8,7],[15,16,17,12]]
<strong>Output:</strong> [12]
<strong>Explanation:</strong> 12 is the only lucky number since it is the minimum in its row and the maximum in its column.
</pre>

<strong>Example 3:</strong>

<pre>
<strong>Input:</strong> matrix = [[7,8],[1,2]]
<strong>Output:</strong> [7]
</pre>


<strong>Constraints:</strong>

<ul>
	<code>m == mat.length</code>
	<code>n == mat[i].length</code>
	<code>1 &lt;= n, m &lt;= 50</code>
	<code>1 &lt;=matrix[i][j]&lt;= 10^5</code>.
	All elements in the matrix are distinct.
</ul>