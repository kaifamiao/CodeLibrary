- 动态规划问题
- dp[i] 表示 i 件物品可能的投递次序数
- 在 dp[i-1] 的基础上，考虑两端，他有一共有 $2*(i-1)+1 = 2i-1$ 个空位
- 第 i 个包裹分开投递，那么插空有 $C_{2i-1}^2 = (2i-1)(2i-2)/2=(2i-1)(i-1)$ 种可能
- 第 i 个包裹不分开，连续1投1递，那么插空有 $2i-1$种可能
- 两种情况相加`*`乘以之前的种类即可：
$dp[i] = dp[i-1]*(2*i-1)*(i-1)+2*i-1)=dp[i-1]*(2*i-1)*i$
```cpp
class Solution {
public:
    int countOrders(int n) {
        vector<long> dp(n+1,0);
        dp[1] = 1;
        for(int i = 2; i <= n; ++i)
        {
            dp[i] = dp[i-1]*(2*i-1)*i%1000000007;
        }
        return dp[n];
    }
};
```
执行用时：0 ms
内存消耗：8.6 MB