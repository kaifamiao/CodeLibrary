{"remainingRequest":"/Users/linrui/Downloads/羊了个羊前端vue2/node_modules/thread-loader/dist/cjs.js!/Users/linrui/Downloads/羊了个羊前端vue2/node_modules/babel-loader/lib/index.js!/Users/linrui/Downloads/羊了个羊前端vue2/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/linrui/Downloads/羊了个羊前端vue2/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/linrui/Downloads/羊了个羊前端vue2/src/components/HelloWorld.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/linrui/Downloads/羊了个羊前端vue2/src/components/HelloWorld.vue","mtime":1664976515728},{"path":"/Users/linrui/Downloads/羊了个羊前端vue2/node_modules/cache-loader/dist/cjs.js","mtime":1664977071405},{"path":"/Users/linrui/Downloads/羊了个羊前端vue2/node_modules/thread-loader/dist/cjs.js","mtime":1664977071235},{"path":"/Users/linrui/Downloads/羊了个羊前端vue2/node_modules/babel-loader/lib/index.js","mtime":1664977071497},{"path":"/Users/linrui/Downloads/羊了个羊前端vue2/node_modules/cache-loader/dist/cjs.js","mtime":1664977071405},{"path":"/Users/linrui/Downloads/羊了个羊前端vue2/node_modules/vue-loader/lib/index.js","mtime":1664977071642}],"contextDependencies":[],"result":["import \"core-js/modules/es6.array.some\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.array.for-each\";\nimport \"core-js/modules/es6.array.filter\";\nimport \"core-js/modules/es6.array.sort\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nexport default {\n  name: 'HelloWorld',\n  data: function data() {\n    return {\n      positionList: [],\n      //  定位数组\n      allCardList: [\n        /* {id: 1, picIndex: 1, icon: 'el-icon-platform-eleme', left: '0px', top: '0px'},\r\n        {id: 2, picIndex: 1, icon: 'el-icon-platform-eleme', left: '50px', top: '0px'}, */\n      ],\n      // 所有待选择的卡片list\n      selectedCardList: [],\n      // 已选择的卡片list\n      currentSelectedCard: {},\n      // 当前选中的卡片\n      selectHistory: [],\n      // 记录已选择的卡片list，方便撤回操作\n      iconList: [{\n        picIndex: 0,\n        icon: 'el-icon-s-flag'\n      }, {\n        picIndex: 1,\n        icon: 'el-icon-platform-eleme'\n      }, {\n        picIndex: 2,\n        icon: 'el-icon-delete-solid'\n      }, {\n        picIndex: 3,\n        icon: 'el-icon-s-tools'\n      }, {\n        picIndex: 4,\n        icon: 'el-icon-user-solid'\n      }, {\n        picIndex: 5,\n        icon: 'el-icon-warning'\n      }, {\n        picIndex: 6,\n        icon: 'el-icon-picture'\n      }, {\n        picIndex: 7,\n        icon: 'el-icon-upload'\n      }, {\n        picIndex: 8,\n        icon: 'el-icon-message-solid'\n      }, {\n        picIndex: 9,\n        icon: 'el-icon-video-camera-solid'\n      }, {\n        picIndex: 10,\n        icon: 'el-icon-s-platform'\n      }] // 图标类型数组\n\n    };\n  },\n  created: function created() {\n    this.initData();\n  },\n  methods: {\n    // 撤回\n    backCard: function backCard() {\n      console.log(this.allCardList);\n      console.log(this.selectHistory);\n\n      if (this.selectHistory.length > 0) {\n        var backItem = this.selectHistory[this.selectHistory.length - 1];\n        this.allCardList.push(backItem);\n        this.allCardList.sort(function (a, b) {\n          return a.id - b.id;\n        });\n        this.selectHistory = this.selectHistory.filter(function (item) {\n          return item.id != backItem.id;\n        });\n        this.selectedCardList = this.selectedCardList.filter(function (item) {\n          return item.id != backItem.id;\n        });\n      } else {\n        alert('没有可以撤回的卡片了！');\n      }\n    },\n    // 选择卡片\n    selectedCard: function selectedCard(item, index, event) {\n      var _this = this;\n\n      console.log(item, index, event.srcElement);\n      var isHover = this.hasOverLayer(event.srcElement);\n      console.log(isHover);\n\n      if (!isHover) {\n        this.currentSelectedCard = item;\n        this.allCardList.splice(index, 1);\n        this.selectedCardList.push(item);\n        this.selectHistory.push(item);\n        this.selectedCardList.sort(function (a, b) {\n          return a.picIndex - b.picIndex;\n        });\n        setTimeout(function () {\n          // 判断是否可以消除\n          _this.checkRemove();\n\n          if (_this.allCardList.length == 0) {\n            alert('你赢了！');\n          }\n\n          if (_this.selectedCardList.length >= 7) {\n            alert('你输了！');\n\n            _this.initData();\n          }\n        }, 200);\n      }\n    },\n    // 判断是否可以消除\n    checkRemove: function checkRemove() {\n      var _this2 = this;\n\n      var num = 0;\n      this.selectedCardList.forEach(function (item) {\n        if (_this2.currentSelectedCard.icon == item.icon) {\n          num++;\n        }\n      });\n\n      if (num == 3) {\n        this.selectedCardList = this.selectedCardList.filter(function (item) {\n          return item.icon != _this2.currentSelectedCard.icon;\n        });\n        this.selectHistory = this.selectHistory.filter(function (item) {\n          return item.icon != _this2.currentSelectedCard.icon;\n        });\n      }\n    },\n    // 监测元素是否被覆盖\n    hasOverLayer: function hasOverLayer(element) {\n      var document = element.ownerDocument,\n          rect = element.getBoundingClientRect(),\n          // 获取目标的矩形信息\n      x = rect.x,\n          y = rect.y,\n          width = rect.width,\n          height = rect.height;\n      x |= 0;\n      y |= 0;\n      width |= 0;\n      height |= 0; // 四顶点取样\n\n      var elements = [document.elementFromPoint(x + 1, y + 1), document.elementFromPoint(x + width - 1, y + 1), document.elementFromPoint(x + 1, y + height - 1), document.elementFromPoint(x + width - 1, y + height - 1)]; // 判断非本身及非子孙元素\n\n      return elements.filter(function (el) {\n        return el !== null;\n      }).some(function (el) {\n        return el !== element && !element.contains(el);\n      });\n    },\n    // 初始化数据\n    initData: function initData() {\n      this.positionList = [];\n      this.allCardList = [];\n      this.selectedCardList = [];\n      this.currentSelectedCard = {};\n      var index = 0; // 第一层\n\n      var left = 0;\n      var top = 0;\n\n      for (var i = 0; i < 7; i++) {\n        for (var j = 0; j < 7; j++) {\n          this.positionList.push({\n            id: index++,\n            picIndex: 1,\n            icon: 'el-icon-platform-eleme',\n            left: left + 'px',\n            top: top + 'px'\n          });\n          left += 50;\n        }\n\n        left = 0;\n        top += 50;\n      } // 第二层\n\n\n      left = 25;\n      top = 25;\n\n      for (var _i = 0; _i < 6; _i++) {\n        for (var _j = 0; _j < 6; _j++) {\n          this.positionList.push({\n            id: index++,\n            picIndex: 1,\n            icon: 'el-icon-platform-eleme',\n            left: left + 'px',\n            top: top + 'px'\n          });\n          left += 50;\n        }\n\n        left = 25;\n        top += 50;\n      } // 生成随机图标\n\n\n      this.createIcon();\n    },\n    // 生成随机图标\n    createIcon: function createIcon() {\n      var _this3 = this;\n\n      var index = 0;\n      this.allCardList = [];\n      var random = 0;\n      console.log(random);\n\n      for (var i = 0; i < 303; i++) {\n        if (i % 3 == 0) {\n          random = Math.floor(Math.random() * 11);\n        }\n\n        this.allCardList.push({\n          id: index++,\n          icon: this.iconList[random].icon,\n          picIndex: this.iconList[random].picIndex\n        });\n      }\n\n      this.allCardList.sort(function () {\n        return Math.random() > 0.5 ? 1 : -1;\n      });\n      this.allCardList.forEach(function (item, index) {\n        item.id = index;\n      }); // 随机位置\n\n      /* let pos = 0\r\n      this.allCardList.forEach(item=>{\r\n        pos = Math.floor(Math.random()*85)\r\n        item['left'] = this.positionList[pos].left\r\n        item['top'] = this.positionList[pos].top\r\n      }) */\n      // 循环堆叠\n\n      var pos = 0;\n      this.allCardList.forEach(function (item) {\n        item['left'] = _this3.positionList[pos].left;\n        item['top'] = _this3.positionList[pos].top;\n        pos++;\n\n        if (pos > 84) {\n          pos = 0;\n        }\n      });\n      console.log(this.allCardList);\n    }\n  }\n};",{"version":3,"sources":["HelloWorld.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div class=\"box\">\r\n    <!-- 上 -->\r\n    <div class=\"top-box\">\r\n      <div class=\"card-box\">\r\n        <div class=\"card\" @click=\"selectedCard(item, index, $event)\" v-for=\"(item, index) in allCardList\" :key=\"index\" :style=\"{left: item.left, top: item.top}\">\r\n          <!-- {{item.id}} -->\r\n          <i :class=\"item.icon\"></i>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <hr>\r\n    <!-- 下 -->\r\n    <div class=\"selected-card-box\">\r\n      <div class=\"selected-card\" v-for=\"(item, index) in selectedCardList\" :key=\"index\">\r\n        <!-- {{item.id}} -->\r\n        <i :class=\"item.icon\"></i>\r\n      </div>\r\n    </div>\r\n    <div class=\"btn\">\r\n      <el-button @click=\"initData()\" type=\"primary\">重新开始</el-button>\r\n      <el-button @click=\"backCard()\" type=\"primary\">撤回</el-button>\r\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'HelloWorld',\r\n  data() {\r\n    return {\r\n      positionList: [],  //  定位数组\r\n      allCardList: [\r\n        /* {id: 1, picIndex: 1, icon: 'el-icon-platform-eleme', left: '0px', top: '0px'},\r\n        {id: 2, picIndex: 1, icon: 'el-icon-platform-eleme', left: '50px', top: '0px'}, */\r\n      ],  // 所有待选择的卡片list\r\n      selectedCardList: [],  // 已选择的卡片list\r\n      currentSelectedCard: {},  // 当前选中的卡片\r\n      selectHistory: [],  // 记录已选择的卡片list，方便撤回操作\r\n      iconList: [\r\n        {picIndex: 0, icon: 'el-icon-s-flag'},\r\n        {picIndex: 1, icon: 'el-icon-platform-eleme'},\r\n        {picIndex: 2, icon: 'el-icon-delete-solid'},\r\n        {picIndex: 3, icon: 'el-icon-s-tools'},\r\n        {picIndex: 4, icon: 'el-icon-user-solid'},\r\n        {picIndex: 5, icon: 'el-icon-warning'},\r\n        {picIndex: 6, icon: 'el-icon-picture'},\r\n        {picIndex: 7, icon: 'el-icon-upload'},\r\n        {picIndex: 8, icon: 'el-icon-message-solid'},\r\n        {picIndex: 9, icon: 'el-icon-video-camera-solid'},\r\n        {picIndex: 10, icon: 'el-icon-s-platform'}\r\n      ],  // 图标类型数组\r\n    }\r\n  },\r\n  created() {\r\n    this.initData()\r\n  },\r\n  methods: {\r\n    // 撤回\r\n    backCard() {\r\n      console.log(this.allCardList);\r\n      console.log(this.selectHistory);\r\n      if (this.selectHistory.length > 0) {\r\n        let backItem = this.selectHistory[this.selectHistory.length - 1]\r\n        this.allCardList.push(backItem)\r\n        this.allCardList.sort((a, b)=>{\r\n          return a.id - b.id\r\n        })\r\n        this.selectHistory = this.selectHistory.filter(item=>{\r\n          return item.id != backItem.id\r\n        })\r\n        this.selectedCardList = this.selectedCardList.filter(item=>{\r\n          return item.id != backItem.id\r\n        })\r\n      } else {\r\n        alert('没有可以撤回的卡片了！')\r\n      }\r\n      \r\n    },\r\n    // 选择卡片\r\n    selectedCard(item, index, event) {\r\n      console.log(item, index, event.srcElement);\r\n      let isHover = this.hasOverLayer(event.srcElement)\r\n      console.log(isHover);\r\n      if (!isHover) {\r\n        this.currentSelectedCard = item\r\n        this.allCardList.splice(index, 1)\r\n        this.selectedCardList.push(item)\r\n        this.selectHistory.push(item)\r\n        this.selectedCardList.sort((a, b)=>{\r\n          return a.picIndex - b.picIndex\r\n        })\r\n        setTimeout(()=>{\r\n          // 判断是否可以消除\r\n          this.checkRemove()\r\n          if (this.allCardList.length == 0) {\r\n            alert('你赢了！')\r\n          }\r\n          if (this.selectedCardList.length >= 7) {\r\n            alert('你输了！')\r\n            this.initData()\r\n          }\r\n        }, 200)\r\n      }\r\n      \r\n    },\r\n    // 判断是否可以消除\r\n    checkRemove() {\r\n      let num = 0\r\n      this.selectedCardList.forEach(item=>{\r\n        if (this.currentSelectedCard.icon == item.icon) {\r\n          num ++\r\n        }\r\n      })\r\n      if (num == 3) {\r\n        this.selectedCardList = this.selectedCardList.filter(item=>{\r\n          return item.icon != this.currentSelectedCard.icon\r\n        })\r\n        this.selectHistory = this.selectHistory.filter(item=>{\r\n          return item.icon != this.currentSelectedCard.icon\r\n        })\r\n      }\r\n    },\r\n    // 监测元素是否被覆盖\r\n    hasOverLayer(element) {\r\n      let document = element.ownerDocument,\r\n      rect = element.getBoundingClientRect(), // 获取目标的矩形信息\r\n      x = rect.x, \r\n      y = rect.y, \r\n      width = rect.width, \r\n      height = rect.height;\r\n      x |= 0;\r\n      y |= 0;\r\n      width |= 0;\r\n      height |= 0;\r\n      // 四顶点取样\r\n      let elements = [\r\n        document.elementFromPoint(x+1, y+1),\r\n        document.elementFromPoint(x + width-1, y+1),\r\n        document.elementFromPoint(x+1, y + height-1),\r\n        document.elementFromPoint(x + width-1, y + height-1)\r\n      ];\r\n      // 判断非本身及非子孙元素\r\n      return elements.filter((el)=> el !== null).some((el)=> el !== element && !element.contains(el));\r\n    },\r\n    // 初始化数据\r\n    initData() {\r\n      this.positionList = []\r\n      this.allCardList = []\r\n      this.selectedCardList = []\r\n      this.currentSelectedCard = {}\r\n      \r\n      let index = 0\r\n      \r\n      // 第一层\r\n      let left = 0\r\n      let top = 0\r\n      for (let i = 0; i < 7; i++) {\r\n        for (let j = 0; j < 7; j++) {\r\n          this.positionList.push({id: index++, picIndex: 1, icon: 'el-icon-platform-eleme', left: left+'px', top: top+'px'})\r\n          left += 50\r\n        }\r\n        left = 0\r\n        top += 50\r\n      }\r\n      \r\n      // 第二层\r\n      left = 25\r\n      top = 25\r\n      for (let i = 0; i < 6; i++) {\r\n        for (let j = 0; j < 6; j++) {\r\n          this.positionList.push({id: index++, picIndex: 1, icon: 'el-icon-platform-eleme', left: left+'px', top: top+'px'})\r\n          left += 50\r\n        }\r\n        left = 25\r\n        top += 50\r\n      }\r\n      \r\n      // 生成随机图标\r\n      this.createIcon()\r\n    },\r\n    // 生成随机图标\r\n    createIcon() {\r\n      let index = 0\r\n      this.allCardList = []\r\n      let random = 0\r\n      console.log(random);\r\n      for (let i = 0; i < 303; i++) {\r\n        if (i%3==0) {\r\n          random = Math.floor(Math.random()*11)\r\n        }\r\n        this.allCardList.push({\r\n          id: index++,\r\n          icon: this.iconList[random].icon,\r\n          picIndex: this.iconList[random].picIndex\r\n        })\r\n      }\r\n      this.allCardList.sort(()=>{\r\n        return Math.random() > 0.5 ? 1 : -1\r\n      })\r\n      this.allCardList.forEach((item, index)=>{\r\n        item.id = index\r\n      })\r\n      \r\n      \r\n      // 随机位置\r\n      /* let pos = 0\r\n      this.allCardList.forEach(item=>{\r\n        pos = Math.floor(Math.random()*85)\r\n        item['left'] = this.positionList[pos].left\r\n        item['top'] = this.positionList[pos].top\r\n      }) */\r\n      \r\n      // 循环堆叠\r\n      let pos = 0\r\n      this.allCardList.forEach(item=>{\r\n        item['left'] = this.positionList[pos].left\r\n        item['top'] = this.positionList[pos].top\r\n        pos++\r\n        if (pos > 84) {\r\n          pos = 0\r\n        }\r\n      })\r\n      \r\n      console.log(this.allCardList);\r\n      \r\n    }\r\n    \r\n  }\n}\n</script>\n\n<style scoped>\r\n  .top-box {\r\n    width: 100%;\r\n    height: 500px;\r\n    background-color: antiquewhite;\r\n  }\r\n  .card-box {\r\n    width: 350px;\r\n    height: 100%;\r\n    background-color: #dddaaa;\r\n    margin: 0 auto;\r\n    position: relative;\r\n  }\r\n  .card {\r\n    width: 48px;\r\n    height: 48px;\r\n    line-height: 48px;\r\n    font-size: 36px;\r\n    border: 1px solid #666;\r\n    text-align: center;\r\n    position: absolute;\r\n    box-shadow: 0px 0px 6px 0px #545454;\r\n    background-color: #fff;\r\n  }\r\n  .selected-card-box {\r\n    width: 350px;\r\n    height: 50px;\r\n    background-color: antiquewhite;\r\n    margin: 0 auto;\r\n  }\r\n  .selected-card {\r\n    width: 48px;\r\n    height: 48px;\r\n    line-height: 48px;\r\n    font-size: 36px;\r\n    border: 1px solid #666;\r\n    text-align: center;\r\n    background-color: #fff;\r\n    display: inline-block;\r\n  }\r\n  .btn {\r\n    margin: 0 auto;\r\n    width: 350px;\r\n    text-align: center;\r\n    margin-top: 24px;\r\n  }\r\n  .el-icon-s-flag {\r\n    color: #aa0000;\r\n  }\r\n  .el-icon-platform-eleme {\r\n    color: #005500;\r\n  }\r\n  .el-icon-delete-solid {\r\n    color: #aa5500;\r\n  }\r\n  .el-icon-s-tools {\r\n    color: #aaaa00;\r\n  }\r\n  .el-icon-user-solid {\r\n    color: #000000;\r\n  }\r\n  .el-icon-warning {\r\n    color: #316394;\r\n  }\r\n  .el-icon-picture {\r\n    color: #00007f;\r\n  }\r\n  .el-icon-upload {\r\n    color: #760000;\r\n  }\r\n  .el-icon-message-solid {\r\n    color: #9a004d;\r\n  }\r\n  .el-icon-video-camera-solid {\r\n    color: #ffaa7f;\r\n  }\r\n  .el-icon-s-platform {\r\n    color: #848441;\r\n  }\r\n  \n</style>\n"],"sourceRoot":"src/components"}]}